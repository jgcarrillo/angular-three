"use strict";(self.webpackChunksandbox=self.webpackChunksandbox||[]).push([[682],{1412:(ft,Re,x)=>{x.d(Re,{EQ:()=>W.E,in:()=>Se.i,iM:()=>B.i,GK:()=>rt.G,CR:()=>Me.C,Hk:()=>ce.H}),x(7017);var W=x(5520),B=x(6382),Se=x(6111),rt=x(3704),ce=x(475),Me=x(619);x(8441)},5520:(ft,Re,x)=>{x.d(Re,{E:()=>J,w:()=>W});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{get lightType(){return z.Mig}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-ambient-light"]],features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},6111:(ft,Re,x)=>{x.d(Re,{Y:()=>W,i:()=>J});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{set target(B){this.set({target:B})}get lightType(){return z.Ox3}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{target:!0})}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-directional-light"]],inputs:{target:"target"},features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},6382:(ft,Re,x)=>{x.d(Re,{L:()=>W,i:()=>J});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{set skyColor(B){this.set({skyColor:B})}set groundColor(B){this.set({groundColor:B})}get lightType(){return z.vmT}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{skyColor:!0,groundColor:!0})}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-hemisphere-light"]],inputs:{skyColor:"skyColor",groundColor:"groundColor"},features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},3704:(ft,Re,x)=>{x.d(Re,{G:()=>J,H:()=>W});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{set distance(B){this.set({distance:(0,N.su)(B)})}set decay(B){this.set({decay:(0,N.su)(B)})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.cek}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{distance:!0,decay:!0,power:!0})}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-point-light"]],inputs:{distance:"distance",decay:"decay",power:"power"},features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},619:(ft,Re,x)=>{x.d(Re,{C:()=>J,u:()=>W});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{set width(B){this.set({width:(0,N.su)(B)})}set height(B){this.set({height:(0,N.su)(B)})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.T_f}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{width:!0,height:!0,power:!0})}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-rect-area-light"]],inputs:{width:"width",height:"height",power:"power"},features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},8441:(ft,Re,x)=>{x(7017),x(475)},475:(ft,Re,x)=>{x.d(Re,{H:()=>J,K:()=>W});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.Xh{set distance(B){this.set({distance:(0,N.su)(B)})}set angle(B){this.set({angle:(0,N.su)(B)})}set penumbra(B){this.set({penumbra:(0,N.su)(B)})}set decay(B){this.set({decay:(0,N.su)(B)})}set target(B){this.set({target:B})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.PMe}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{distance:!0,angle:!0,penumbra:!0,decay:!0,target:!0,power:!0})}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-spot-light"]],inputs:{distance:"distance",angle:"angle",penumbra:"penumbra",decay:"decay",target:"target",power:"power"},features:[H._Bn([(0,N.tG)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},2610:(ft,Re,x)=>{x.d(Re,{R:()=>z.R,M$:()=>N.M});var N=x(752),z=x(2363);x(7017)},2363:(ft,Re,x)=>{x.d(Re,{R:()=>S,f:()=>J});var N=x(7017),z=x(6963),H=x(1858);const O=["count",""],W=["*"];let J=(()=>{class F extends N.uT{set count(P){this.set({count:(0,N.su)(P)})}get meshType(){return z.SPe}postPrepare(P){P.instanceMatrix.setUsage(z.dj0)}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{count:!1})}get argsKeys(){return["count"]}}return F.\u0275fac=function(){let B;return function(L){return(B||(B=H.n5z(F)))(L||F)}}(),F.\u0275cmp=H.Xpm({type:F,selectors:[["ngt-instanced-mesh","count",""]],inputs:{count:"count"},features:[H._Bn([(0,N.pb)(F)]),H.qOj],attrs:O,ngContentSelectors:W,decls:1,vars:0,template:function(P,L){1&P&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),F})(),S=(()=>{class F{}return F.\u0275fac=function(P){return new(P||F)},F.\u0275mod=H.oAB({type:F}),F.\u0275inj=H.cJS({}),F})()},752:(ft,Re,x)=>{x.d(Re,{M:()=>J,o:()=>W});var N=x(7017),z=x(6963),H=x(1858);const O=["*"];let W=(()=>{class S extends N.uT{get meshType(){return z.Kj0}}return S.\u0275fac=function(){let F;return function(P){return(F||(F=H.n5z(S)))(P||S)}}(),S.\u0275cmp=H.Xpm({type:S,selectors:[["ngt-mesh"]],features:[H._Bn([(0,N.pb)(S)]),H.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(H.F$t(),H.Hsn(0))},encapsulation:2,changeDetection:0}),S})(),J=(()=>{class S{}return S.\u0275fac=function(B){return new(B||S)},S.\u0275mod=H.oAB({type:S}),S.\u0275inj=H.cJS({}),S})()},7017:(ft,Re,x)=>{x.d(Re,{Aw:()=>B.Aw,cz:()=>B.cz,dL:()=>ze,cY:()=>B.cY,Dh:()=>B.Dh,DX:()=>J.DX,f5:()=>F,fc:()=>ce,B:()=>Oe,fA:()=>De,Xh:()=>Fe,hZ:()=>we,uT:()=>et,gU:()=>S.gU,WZ:()=>N.W,gj:()=>fs.g,Jy:()=>H.J,Fq:()=>H.F,y2:()=>pn.y,yh:()=>Ui.yh,kZ:()=>kn.k,It:()=>Cn.I,g8:()=>li.g,W7:()=>Ae.W,gD:()=>mn,Rl:()=>Qt.R,WC:()=>ms.WC,ll:()=>ms.ll,nH:()=>ps.n,QF:()=>pe.Q,Ig:()=>Ne.I,su:()=>Ne.s,is:()=>z.is,Sy:()=>Ln.Sy,EH:()=>Ln.EH,CE:()=>Ln.CE,qR:()=>Ln.qR,jS:()=>Ln.jS,Ut:()=>Ln.NO,Pl:()=>Yt.P,_4:()=>L,dF:()=>Me,O2:()=>oe,$m:()=>j,tG:()=>Ze,Wm:()=>Te,pb:()=>Ve,UV:()=>P.U,Hm:()=>Se.Hm,Q2:()=>Se.Q2,nD:()=>Kt.n,gh:()=>ci,Xb:()=>S.Xb,oe:()=>S.oe});var N=x(1134),z=x(6230),H=x(3119),O=x(1858);let W=(()=>{class q extends H.J{set material(E){this.set({material:E})}set geometry(E){this.set({geometry:E})}set morphTargetInfluences(E){this.set({morphTargetInfluences:E})}set morphTargetDictionary(E){this.set({morphTargetDictionary:E})}objectInitFn(){const E=this.get(),pt=this.argsKeys.reduce((Wt,fe)=>(Wt.push(E[fe]),Wt),[]),Dt=new this.objectType(z.is.ref(E.geometry)?E.geometry.value:E.geometry,z.is.arr(E.material)?E.material.map(Wt=>z.is.ref(Wt)?Wt.value:Wt):z.is.ref(E.material)?E.material.value:E.material,...pt);return E.morphTargetDictionary&&"morphTargetDictionary"in Dt&&(Dt.morphTargetDictionary=E.morphTargetDictionary),E.morphTargetInfluences&&"morphTargetInfluences"in Dt&&(Dt.morphTargetInfluences=E.morphTargetInfluences),Dt}get argsKeys(){return[]}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{material:!0,geometry:!0,morphTargetInfluences:!0,morphTargetDictionary:!0})}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,inputs:{material:"material",geometry:"geometry",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary"},features:[O.qOj]}),q})();var J=x(5632),S=x(4969);let F=(()=>{class q extends N.W{constructor(){super(...arguments),this.init=this.effect((0,S.oe)(E=>{this.prepareInstance(new this.attributeType(...E))}))}set args(E){this.instanceArgs=E}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{const E=this.init(this.instanceArgs$);return this.postInit(),()=>{E&&E.unsubscribe&&E.unsubscribe()}},!0)})}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,inputs:{args:"args"},features:[O.qOj]}),q})();var B=x(4427),P=x(6174);function L(q,K){return[(0,P.U)(q,K),{provide:F,useExisting:q},{provide:B.Rb,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}var Se=x(9135);let ce=(()=>{class q extends H.J{set args(E){this.instanceArgs=E}objectInitFn(){const E=this.get(pt=>pt.instanceArgs);return new this.cameraType(...E)}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,inputs:{args:"args"},features:[O.qOj]}),q})();function Me(q,K){return[(0,Se.Q2)(q,K),{provide:ce,useExisting:q},{provide:B.hD,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}var Ae=x(9643);let Oe=(()=>{class q extends N.W{constructor(E,pt,Dt,Wt){super(E,pt,Dt,Wt),this.init=this.effect((0,S.oe)(()=>{const fe=this.get(Jn=>Jn.instanceArgs),en=this.adjustCtorParams(fe),gn=this.prepareInstance(new this.geometryType(...en));return()=>{gn.dispose()}}))}set args(E){this.instanceArgs=E}preInit(){this.set(E=>({attach:E.attach.length?E.attach:["geometry"]}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.init(this.ctorParams$),this.postInit()})})}}return q.\u0275fac=function(E){return new(E||q)(O.Y36(O.R0b),O.Y36(Ae.W),O.Y36(B.Dh,12),O.Y36(B.cY,12))},q.\u0275dir=O.lG2({type:q,inputs:{args:"args"},features:[O.qOj]}),q})();function oe(q,K){return[(0,P.U)(q,K),{provide:Oe,useExisting:q},{provide:B.sV,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}let De=(()=>{class q extends H.J{set args(E){this.instanceArgs=E}objectInitFn(){const E=this.get(pt=>pt.instanceArgs);return new this.helperType(...E)}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,inputs:{args:"args"},features:[O.qOj]}),q})();function j(q,K){return[(0,Se.Q2)(q,K),{provide:De,useExisting:q},{provide:B.fe,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}var ge=x(8427),Ie=x(5831);const ze=new O.OlP("isWebGLAvailable",{factory:()=>{const q=(0,O.f3M)(ge.K0),K=(0,O.f3M)(Ie.m);try{const E=q.createElement("canvas");return!(!K.WebGL2RenderingContext||!E.getContext("webgl2"))}catch(E){return!1}}});var Ne=x(969);let Fe=(()=>{class q extends H.J{set args(E){this.instanceArgs=E}set intensity(E){this.set({intensity:(0,Ne.s)(E)})}objectInitFn(){const{intensity:E,instanceArgs:pt}=this.get(),Dt=new this.lightType(...pt);return null!=E&&(Dt.intensity=E),Dt}get preObjectInit(){return E=>{this.set(pt=>{var Dt;return{intensity:null!==(Dt=pt.intensity)&&void 0!==Dt?Dt:1}}),E()}}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{intensity:!1})}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,inputs:{args:"args",intensity:"intensity"},features:[O.qOj]}),q})();function Ze(q,K){return[(0,Se.Q2)(q,K),{provide:Fe,useExisting:q},{provide:B.iq,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}function re(q,K){return[(0,Se.Q2)(q,K),{provide:W,useExisting:q},{provide:B.sN,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}var Ce=x(1487),he=x(7411),pe=x(4852);let we=(()=>{class q extends N.W{constructor(E,pt,Dt,Wt){super(E,pt,Dt,Wt),this.init=this.effect((0,S.oe)(()=>{const fe=this.prepareInstance(new this.materialType);return()=>{fe.dispose()}})),this.setParameters=this.effect((0,Ce.b)(({parameters:fe,material:en})=>{en.setValues(Object.assign(Object.entries(fe).reduce((gn,[Jn,ki])=>(void 0!==ki&&(gn[Jn]=ki),gn),{}),"uniforms"in en&&"uniforms"in fe?{uniforms:Object.assign(Object.assign({},en.uniforms),fe.uniforms)}:{})),(0,pe.Q)(en)})),this.parameters$=this.select(this.select(fe=>fe.alphaTest).pipe((0,S.Xb)()),this.select(fe=>fe.alphaToCoverage).pipe((0,S.Xb)()),this.select(fe=>fe.blendDst).pipe((0,S.Xb)()),this.select(fe=>fe.blendDstAlpha).pipe((0,S.Xb)()),this.select(fe=>fe.blendEquation).pipe((0,S.Xb)()),this.select(fe=>fe.blendEquationAlpha).pipe((0,S.Xb)()),this.select(fe=>fe.blending).pipe((0,S.Xb)()),this.select(fe=>fe.blendSrc).pipe((0,S.Xb)()),this.select(fe=>fe.blendSrcAlpha).pipe((0,S.Xb)()),this.select(fe=>fe.clipIntersection).pipe((0,S.Xb)()),this.select(fe=>fe.clippingPlanes).pipe((0,S.Xb)()),this.select(fe=>fe.clipShadows).pipe((0,S.Xb)()),this.select(fe=>fe.colorWrite).pipe((0,S.Xb)()),this.select(fe=>fe.defines).pipe((0,S.Xb)()),this.select(fe=>fe.depthFunc).pipe((0,S.Xb)()),this.select(fe=>fe.depthTest).pipe((0,S.Xb)()),this.select(fe=>fe.depthWrite).pipe((0,S.Xb)()),this.select(fe=>fe.name).pipe((0,S.Xb)()),this.select(fe=>fe.opacity).pipe((0,S.Xb)()),this.select(fe=>fe.polygonOffset).pipe((0,S.Xb)()),this.select(fe=>fe.polygonOffsetFactor).pipe((0,S.Xb)()),this.select(fe=>fe.polygonOffsetUnits).pipe((0,S.Xb)()),this.select(fe=>fe.precision).pipe((0,S.Xb)()),this.select(fe=>fe.premultipliedAlpha).pipe((0,S.Xb)()),this.select(fe=>fe.dithering).pipe((0,S.Xb)()),this.select(fe=>fe.side).pipe((0,S.Xb)()),this.select(fe=>fe.shadowSide).pipe((0,S.Xb)()),this.select(fe=>fe.toneMapped).pipe((0,S.Xb)()),this.select(fe=>fe.transparent).pipe((0,S.Xb)()),this.select(fe=>fe.vertexColors).pipe((0,S.Xb)()),this.select(fe=>fe.visible).pipe((0,S.Xb)()),this.select(fe=>fe.format).pipe((0,S.Xb)()),this.select(fe=>fe.stencilWrite).pipe((0,S.Xb)()),this.select(fe=>fe.stencilFunc).pipe((0,S.Xb)()),this.select(fe=>fe.stencilRef).pipe((0,S.Xb)()),this.select(fe=>fe.stencilWriteMask).pipe((0,S.Xb)()),this.select(fe=>fe.stencilFuncMask).pipe((0,S.Xb)()),this.select(fe=>fe.stencilFail).pipe((0,S.Xb)()),this.select(fe=>fe.stencilZFail).pipe((0,S.Xb)()),this.select(fe=>fe.stencilZPass).pipe((0,S.Xb)()),this.select(fe=>fe.userData).pipe((0,S.Xb)()),(fe,en,gn,Jn,ki,Vn,ya,Ma,Mn,Br,ba,hi,ui,zr,Sa,Ur,wa,Ea,ir,sr,rr,or,kr,Vr,Wr,Gr,Ta,Hr,jr,Xr,$r,Kr,Yr,Jr,Zr,qr,Qr,eo,to,no,io)=>({alphaTest:fe,alphaToCoverage:en,blendDst:gn,blendDstAlpha:Jn,blendEquation:ki,blendEquationAlpha:Vn,blending:ya,blendSrc:Ma,blendSrcAlpha:Mn,clipIntersection:Br,clippingPlanes:ba,clipShadows:hi,colorWrite:ui,defines:zr,depthFunc:Sa,depthTest:Ur,depthWrite:wa,name:Ea,opacity:ir,polygonOffset:sr,polygonOffsetFactor:rr,polygonOffsetUnits:or,precision:kr,premultipliedAlpha:Vr,dithering:Wr,side:Gr,shadowSide:Ta,toneMapped:Hr,transparent:jr,vertexColors:Xr,visible:$r,format:Kr,stencilWrite:Yr,stencilFunc:Jr,stencilRef:Zr,stencilWriteMask:qr,stencilFuncMask:Qr,stencilFail:eo,stencilZFail:to,stencilZPass:no,userData:io}))}set alphaTest(E){this.set({alphaTest:(0,Ne.s)(E)})}set alphaToCoverage(E){this.set({alphaToCoverage:(0,Ne.I)(E)})}set blendDst(E){this.set({blendDst:E})}set blendDstAlpha(E){this.set({blendDstAlpha:(0,Ne.s)(E)})}set blendEquation(E){this.set({blendEquation:E})}set blendEquationAlpha(E){this.set({blendEquationAlpha:(0,Ne.s)(E)})}set blending(E){this.set({blending:E})}set blendSrc(E){this.set({blendSrc:E})}set blendSrcAlpha(E){this.set({blendSrcAlpha:(0,Ne.s)(E)})}set clipIntersection(E){this.set({clipIntersection:(0,Ne.I)(E)})}set clippingPlanes(E){this.set({clippingPlanes:E})}set clipShadows(E){this.set({clipShadows:(0,Ne.I)(E)})}set colorWrite(E){this.set({colorWrite:(0,Ne.I)(E)})}set defines(E){this.set({defines:E})}set depthFunc(E){this.set({depthFunc:E})}set depthTest(E){this.set({depthTest:(0,Ne.I)(E)})}set depthWrite(E){this.set({depthWrite:(0,Ne.I)(E)})}set name(E){this.set({name:E})}set opacity(E){this.set({opacity:(0,Ne.s)(E)})}set polygonOffset(E){this.set({polygonOffset:(0,Ne.I)(E)})}set polygonOffsetFactor(E){this.set({polygonOffsetFactor:(0,Ne.s)(E)})}set polygonOffsetUnits(E){this.set({polygonOffsetUnits:(0,Ne.s)(E)})}set precision(E){this.set({precision:E})}set premultipliedAlpha(E){this.set({premultipliedAlpha:(0,Ne.I)(E)})}set dithering(E){this.set({dithering:(0,Ne.I)(E)})}set side(E){this.set({side:E})}set shadowSide(E){this.set({shadowSide:E})}set toneMapped(E){this.set({toneMapped:(0,Ne.I)(E)})}set transparent(E){this.set({transparent:(0,Ne.I)(E)})}set vertexColors(E){this.set({vertexColors:(0,Ne.I)(E)})}set visible(E){this.set({visible:(0,Ne.I)(E)})}set format(E){this.set({format:E})}set stencilWrite(E){this.set({stencilWrite:(0,Ne.I)(E)})}set stencilFunc(E){this.set({stencilFunc:E})}set stencilRef(E){this.set({stencilRef:(0,Ne.s)(E)})}set stencilWriteMask(E){this.set({stencilWriteMask:(0,Ne.s)(E)})}set stencilFuncMask(E){this.set({stencilFuncMask:(0,Ne.s)(E)})}set stencilFail(E){this.set({stencilFail:E})}set stencilZFail(E){this.set({stencilZFail:E})}set stencilZPass(E){this.set({stencilZPass:E})}set userData(E){this.set({userData:E})}set parameters(E){this.set({materialParameters:E})}get parameters(){return this.get(E=>E.materialParameters)}preInit(){this.set(E=>({attach:E.attach.length?E.attach:["material"],materialParameters:E.materialParameters||{}}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.init(this.ctorParams$),this.postInit(),this.setParameters(this.select(this.instance$,this.select(E=>E.materialParameters),this.parameters$,this.subParameters$,(E,pt,Dt,Wt)=>({material:E,parameters:Object.keys(pt).length?pt:Object.assign(Object.assign({},Dt),Wt)})))})})}get subParameters$(){const E=Object.entries(this.optionFields);return 0===E.length?(0,he.of)({}):this.select(...E.map(([pt,Dt])=>{const Wt=this.select(fe=>fe[pt]);return Dt?Wt.pipe((0,S.Xb)()):Wt}),(...pt)=>pt.reduce((Dt,Wt,fe)=>(Dt[E[fe][0]]=Wt,Dt),{}))}}return q.\u0275fac=function(E){return new(E||q)(O.Y36(O.R0b),O.Y36(Ae.W),O.Y36(B.Dh,12),O.Y36(B.cY,12))},q.\u0275dir=O.lG2({type:q,inputs:{alphaTest:"alphaTest",alphaToCoverage:"alphaToCoverage",blendDst:"blendDst",blendDstAlpha:"blendDstAlpha",blendEquation:"blendEquation",blendEquationAlpha:"blendEquationAlpha",blending:"blending",blendSrc:"blendSrc",blendSrcAlpha:"blendSrcAlpha",clipIntersection:"clipIntersection",clippingPlanes:"clippingPlanes",clipShadows:"clipShadows",colorWrite:"colorWrite",defines:"defines",depthFunc:"depthFunc",depthTest:"depthTest",depthWrite:"depthWrite",name:"name",opacity:"opacity",polygonOffset:"polygonOffset",polygonOffsetFactor:"polygonOffsetFactor",polygonOffsetUnits:"polygonOffsetUnits",precision:"precision",premultipliedAlpha:"premultipliedAlpha",dithering:"dithering",side:"side",shadowSide:"shadowSide",toneMapped:"toneMapped",transparent:"transparent",vertexColors:"vertexColors",visible:"visible",format:"format",stencilWrite:"stencilWrite",stencilFunc:"stencilFunc",stencilRef:"stencilRef",stencilWriteMask:"stencilWriteMask",stencilFuncMask:"stencilFuncMask",stencilFail:"stencilFail",stencilZFail:"stencilZFail",stencilZPass:"stencilZPass",userData:"userData",parameters:"parameters"},features:[O.qOj]}),q})();function Te(q,K){return[(0,P.U)(q,K),{provide:we,useExisting:q},{provide:B.jy,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}let et=(()=>{class q extends W{get objectType(){return this.meshType}}return q.\u0275fac=function(){let K;return function(pt){return(K||(K=O.n5z(q)))(pt||q)}}(),q.\u0275dir=O.lG2({type:q,features:[O.qOj]}),q})();function Ve(q,K){return[re(q,K),{provide:et,useExisting:q},{provide:B.FY,useFactory:E=>()=>(null==K?void 0:K(E))||E.instance,deps:[q]}]}var Kt=x(6985);x(5001);var pn=x(5648),Cn=x(9804),Ln=x(9319),kn=x(5959),li=x(4707);let mn=(()=>{class q{}return q.\u0275fac=function(E){return new(E||q)},q.\u0275mod=O.oAB({type:q}),q.\u0275inj=O.cJS({}),q})();var Ui=x(4315),Qt=x(8458),fs=x(9482),ps=(x(1062),x(8394)),Yt=(x(1168),x(4987)),ms=x(4714),xa=x(6963);function ci(q,K,E,pt){return class extends xa.jyz{constructor(){const Dt=Object.entries(q);super({uniforms:Dt.reduce((Wt,[fe,en])=>{const gn=xa.rDY.clone({[fe]:{value:en}});return Object.assign(Object.assign({},Wt),gn)},{}),vertexShader:K,fragmentShader:E}),Dt.forEach(([Wt])=>Object.defineProperty(this,Wt,{get:()=>this.uniforms[Wt].value,set:fe=>this.uniforms[Wt].value=fe})),pt&&pt(this)}}}},1134:(ft,Re,x)=>{x.d(Re,{W:()=>Ne});var N=x(4254),z=x(1858),H=x(1853),O=x(579),J=x(7319),S=x(5359),F=x(1487),B=x(1926),P=x(8412),L=x(5035),ke=x(7411),Se=x(1836),rt=x(8458),ce=x(4969),Me=x(9643),V=x(4427),Le=x(8394),Ae=x(4852),Oe=x(969),oe=x(1527),De=x(4987),j=x(6230);function ge(Fe,Ze,ae){const{decomposedPath:re,base:Z}=function Ie(Fe){return Fe.length<1?{base:"",decomposedPath:[]}:{base:Fe[0],decomposedPath:Fe}}(Ze);void 0!==Z&&(function ze(Fe,Ze){!Object.prototype.hasOwnProperty.call(Fe,Ze)&&Reflect&&Reflect.has&&!Reflect.has(Fe,Ze)&&(Fe[Ze]={})}(Fe,Z),re.length<=1?(0,Le.n)(Fe,{[Z]:ae}):ge(Fe[Z],re.slice(1),ae))}let Ne=(()=>{class Fe extends ce.gU{constructor(ae,re,Z,Ce){super(),this.zone=ae,this.store=re,this.parentRef=Z,this.parentHostRef=Ce,this.ready=new z.vpe,this.hasEmittedAlready=!1,this.update=new z.vpe,this.instance$=this.select(he=>he.instance).pipe((0,J.w)(he=>he.pipe((0,S.h)(pe=>null!=pe)))),this.instanceArgs$=this.select(he=>he.instanceArgs),this.isPrimitive=!1,this.isWrapper=!1,this.isRaw=!1,this.instanceReady=this.effect((0,ce.oe)(()=>{const he=this.setOptions(this.select(this.optionsFieldsToOptions(this.optionFields),this.setOptionsTrigger$,pe=>pe));return this.get(pe=>pe.noAttach)||this.attachToParent(),()=>{he.unsubscribe()}})),this.setOptions=this.effect((0,F.b)(he=>{if(0!==Object.keys(he).length&&this.instanceValue){if(j.is.material(this.instanceValue))return;const pe=this.get(),we={},{rotation:Te,quaternion:et}=he,Ve=(0,N._T)(he,["rotation","quaternion"]);Te?we.rotation=pe.rotation:et&&(we.quaternion=pe.quaternion);for(const ct of Object.keys(Ve))null!=pe[ct]&&(we[ct]=pe[ct]);(0,Le.n)(this.instanceValue,we),this.postSetOptions(this.instanceValue),this.checkUpdate(this.instanceValue),this.update.observed&&this.update.emit(this.instanceValue)}})),this.attachToParent=this.effect((0,B.z)((0,P.M)(this.select(he=>he.attach)),(0,F.b)(([,he])=>{var pe;let we=this.__ngt__.parent;if(!we||!we.value){if(!(null===(pe=this.parent)||void 0===pe?void 0:pe.value))return;this.__ngt__.parent=this.parent,we=this.parent}if("function"==typeof he){const Te=he(we,this.instance);Te&&(this.__ngt__.previousAttach=Te)}else{const Te=[...he];if(0===Te.length)return;"material"===Te[0]&&Te[1]&&j.is.num(Number(Te[1]))&&j.is.material(this.instanceValue)&&(j.is.arr(we.value.material)||(we.value.material=[])),this.__ngt__.previousAttachValue=Te.reduce((et,Ve)=>et[Ve],we.value),ge(we.value,Te,this.instanceValue),this.__ngt__&&this.__ngt__.root().invalidate(),we.value.__ngt__&&we.value.__ngt__.root().invalidate(),this.__ngt__.previousAttach=Te,this.set({attach:Te})}this.checkUpdate(we.value),this.checkUpdate(this.instanceValue)}))),this.set({instance:new rt.R(null),instanceArgs:[],attach:[],noAttach:!1,skipParent:!1})}set ref(ae){this.set({instance:ae})}set skipParent(ae){this.set({attachExplicit:!0,skipParent:(0,Oe.I)(ae)})}get skipParent(){return this.get(ae=>ae.skipParent)}set noAttach(ae){this.set({noAttachExplicit:!0,noAttach:(0,Oe.I)(ae)})}get noAttach(){return this.get(ae=>ae.noAttach)}set attach(ae){ae&&this.set({skipParentExplicit:!0,attach:"function"==typeof ae||j.is.arr(ae)?ae:[ae]})}get attach(){return this.get(ae=>ae.attach)}get instance(){return this.get(ae=>ae.instance)}get instanceValue(){return this.isRaw?this.instance.value.valueOf():this.instance.value}get __ngt__(){return this.instance.value.__ngt__}get parent(){var ae,re,Z;return this.skipParent?(null===(re=this.parentHostRef)||void 0===re?void 0:re.call(this))||(null===(Z=this.parentRef)||void 0===Z?void 0:Z.call(this)):null===(ae=this.parentRef)||void 0===ae?void 0:ae.call(this)}set instanceArgs(ae){this.set({instanceArgs:j.is.arr(ae)?ae:[ae]})}get instanceArgs(){return this.get(ae=>ae.instanceArgs)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.preInit(),this.onCanvasReady(this.store.ready$,()=>{this.instanceReady(this.instance$)})})}preInit(){}postInit(){}emitReady(){this.hasEmittedAlready||(this.ready.emit(this.instanceValue),this.hasEmittedAlready=!0)}prepareInstance(ae,re){var Z,Ce,he;re&&"uuid"in ae&&(ae.uuid=re);const pe=(0,De.P)(ae,()=>this.store.get(),this.parent,this.instance,this.isPrimitive);if(this.postPrepare(pe),this.instance.set(pe),this.emitReady(),!j.is.object3d(pe)&&!this.noAttach&&!this.skipParent){const we=null===(he=null===(Ce=null===(Z=pe.__ngt__.parent)||void 0===Z?void 0:Z.value)||void 0===Ce?void 0:Ce.__ngt__)||void 0===he?void 0:he.objects;we&&we.set([...we.value,this.instance])}return pe}adjustCtorParams(ae){return ae}get ctorParams$(){return this.instanceArgs$.pipe((0,L.U)(()=>({})))}destroy(){if(this.instanceValue){if(j.is.object3d(this.instanceValue)){const re=this.parent;re&&j.is.object3d(re.value)&&(0,oe.M)(this.__ngt__.root.bind(this.__ngt__),this.instanceValue),null!=this.instanceValue.clear&&this.instanceValue.clear()}else{const re=this.__ngt__.previousAttach;if(null!=re)if("function"==typeof re)re(),this.__ngt__.parent&&this.__ngt__.parent.value&&(0,Ae.Q)(this.__ngt__.parent.value);else{const Z=this.__ngt__.previousAttachValue;this.__ngt__.parent&&this.__ngt__.parent.value&&(ge(this.__ngt__.parent.value,re,Z),(0,Ae.Q)(this.__ngt__.parent.value))}}const ae=this.instanceValue.dispose;ae&&"function"==typeof ae&&ae.apply(this.instanceValue)}this.set({attach:[]}),this.instance.complete()}postPrepare(ae){}get optionFields(){return{}}optionsFieldsToOptions(ae,re=!1){const Z=Object.entries(ae);return 0===Z.length?(0,ke.of)({}):this.select(...Z.map(([Ce,he])=>{const pe=this.select(we=>we[Ce]);return he?pe.pipe((0,ce.Xb)()):pe}),(...Ce)=>Ce.reduce((he,pe,we)=>(he[Z[we][0]]=pe,he),{})).pipe((0,Se.O)({}),function W(){return(0,H.e)((Fe,Ze)=>{let ae,re=!1;Fe.subscribe((0,O.x)(Ze,Z=>{const Ce=ae;ae=Z,re&&Ze.next([Ce,Z]),re=!0}))})}(),(0,L.U)(([Ce,he])=>Object.entries(he).reduce((pe,[we,Te])=>((!j.is.equ(Ce[we],Te)||re&&j.is.equ(Ce[we],Te))&&(pe[we]=Te),pe),{})))}ngOnDestroy(){this.zone.runOutsideAngular(()=>{this.destroy()}),super.ngOnDestroy()}postSetOptions(ae){}get setOptionsTrigger$(){return(0,ke.of)({})}checkUpdate(ae){j.is.object3d(ae)?ae.updateMatrix():j.is.camera(ae)&&((j.is.perspective(ae)||j.is.orthographic(ae))&&ae.updateProjectionMatrix(),ae.updateMatrixWorld()),(0,Ae.Q)(ae)}}return Fe.\u0275fac=function(ae){return new(ae||Fe)(z.Y36(z.R0b),z.Y36(Me.W),z.Y36(V.cz,12),z.Y36(V.Aw,12))},Fe.\u0275dir=z.lG2({type:Fe,inputs:{ref:"ref",skipParent:"skipParent",noAttach:"noAttach",attach:"attach"},outputs:{ready:"ready",update:"update"},features:[z.qOj]}),Fe})()},3119:(ft,Re,x)=>{x.d(Re,{F:()=>Se,J:()=>rt});var N=x(1858),z=x(6963),H=x(8458),O=x(4969),W=x(9643),J=x(4427),S=x(8394),F=x(969),B=x(6230),P=x(9319),L=x(1134);const ke=["click","contextmenu","dblclick","pointerup","pointerdown","pointerover","pointerout","pointerenter","pointerleave","pointermove","pointermissed","pointercancel","wheel"];let Se=(()=>{class ce extends L.W{constructor(V,Le,Ae,Oe){super(V,Le,Ae,Oe),this.parentObjectRef=Ae,this.parentObjectHostRef=Oe,this.click=new N.vpe,this.contextmenu=new N.vpe,this.dblclick=new N.vpe,this.pointerup=new N.vpe,this.pointerdown=new N.vpe,this.pointerover=new N.vpe,this.pointerout=new N.vpe,this.pointerenter=new N.vpe,this.pointerleave=new N.vpe,this.pointermove=new N.vpe,this.pointermissed=new N.vpe,this.pointercancel=new N.vpe,this.wheel=new N.vpe,this.shouldPassThroughRef=!0,this.set({name:"",position:new z.Pa4,rotation:new z.USm,quaternion:new z._fP,scale:new z.Pa4(1,1,1),color:new z.Ilk,castShadow:!1,receiveShadow:!1,priority:0,visible:!0,matrixAutoUpdate:!0,appendMode:"immediate",userData:{}})}set name(V){this.set({nameExplicit:!0,name:V})}get name(){return this.get(V=>V.name)}set position(V){this.set({positionExplicit:!0,position:(0,P.NO)(V)})}get position(){return this.get(V=>V.position)}get rotation(){return this.get(V=>V.rotation)}set rotation(V){this.set({rotationExplicit:!0,rotation:(0,P.Sy)(z.USm,V)})}get quaternion(){return this.get(V=>V.quaternion)}set quaternion(V){this.set({quaternionExplicit:!0,quaternion:(0,P.Sy)(z._fP,V)})}get scale(){return this.get(V=>V.scale)}set scale(V){this.set({scaleExplicit:!0,scale:(0,P.NO)(V)})}get color(){return this.get(V=>V.color)}set color(V){this.set({colorExplicit:!0,color:(0,P.EH)(V)})}get castShadow(){return this.get(V=>V.castShadow)}set castShadow(V){this.set({castShadowExplicit:!0,castShadow:(0,F.I)(V)})}get receiveShadow(){return this.get(V=>V.receiveShadow)}set receiveShadow(V){this.set({receiveShadowExplicit:!0,receiveShadow:(0,F.I)(V)})}get priority(){return this.get(V=>V.priority)}set priority(V){this.set({priorityExplicit:!0,priority:(0,F.s)(V)})}get visible(){return this.get(V=>V.visible)}set visible(V){this.set({visibleExplicit:!0,visible:(0,F.I)(V)})}get matrixAutoUpdate(){return this.get(V=>V.matrixAutoUpdate)}set matrixAutoUpdate(V){this.set({matrixAutoUpdateExplicit:!0,matrixAutoUpdate:(0,F.I)(V)})}get userData(){return this.get(V=>V.userData)}set userData(V){this.set({userDataExplicit:!0,userData:V})}get dispose(){return this.get(V=>V.dispose)}set dispose(V){this.set({disposeExplicit:!0,dispose:V})}get raycast(){return this.get(V=>V.raycast)}set raycast(V){this.set({raycastExplicit:!0,raycast:V})}get appendMode(){return this.get(V=>V.appendMode)}set appendMode(V){this.set({appendModeExplicit:!0,appendMode:V})}get appendTo(){return this.get(V=>V.appendTo)}set appendTo(V){this.set({appendToExplicit:!0,appendTo:V?B.is.ref(V)?V:new H.R(V):void 0})}get optionFields(){return{name:!1,position:!1,rotation:!1,quaternion:!1,scale:!1,color:!1,castShadow:!1,receiveShadow:!1,visible:!1,matrixAutoUpdate:!1,userData:!1,dispose:!0,raycast:!0}}}return ce.\u0275fac=function(V){return new(V||ce)(N.Y36(N.R0b),N.Y36(W.W),N.Y36(J.Dh,12),N.Y36(J.cY,12))},ce.\u0275dir=N.lG2({type:ce,inputs:{name:"name",position:"position",rotation:"rotation",quaternion:"quaternion",scale:"scale",color:"color",castShadow:"castShadow",receiveShadow:"receiveShadow",priority:"priority",visible:"visible",matrixAutoUpdate:"matrixAutoUpdate",userData:"userData",dispose:"dispose",raycast:"raycast",appendMode:"appendMode",appendTo:"appendTo"},outputs:{click:"click",contextmenu:"contextmenu",dblclick:"dblclick",pointerup:"pointerup",pointerdown:"pointerdown",pointerover:"pointerover",pointerout:"pointerout",pointerenter:"pointerenter",pointerleave:"pointerleave",pointermove:"pointermove",pointermissed:"pointermissed",pointercancel:"pointercancel",wheel:"wheel"},features:[N.qOj]}),ce})(),rt=(()=>{class ce extends Se{constructor(){super(...arguments),this.appended=new N.vpe,this.beforeRender=new N.vpe,this.animateReady=this.beforeRender,this.init=this.effect((0,O.oe)(()=>{var V,Le;if(this.instance.value&&this.__ngt__?this.switch():this.prepareInstance(this.objectInitFn(),null===(Le=null===(V=this.instance)||void 0===V?void 0:V.value)||void 0===Le?void 0:Le.uuid),this.instance.value){this.postInit&&this.postInit();const Ae=ke.reduce((Oe,oe)=>{const De=this[oe].observed?this[oe]:null;return De&&(Oe.handlers[oe]=this.eventNameToHandler(De),Oe.eventCount+=1),Oe},{handlers:{},eventCount:0});(0,S.n)(this.__ngt__,{handlers:Ae.handlers,eventCount:Ae.eventCount}),Ae.eventCount>0&&this.store.addInteraction(this.instance.value),B.is.object3d(this.instance.value)&&this.appendToParent(),this.beforeRender.observed&&this.store.registerBeforeRender({obj:this.instance,callback:Oe=>{this.beforeRender.emit({state:Oe,object:this.instance.value})},priority:this.get(Oe=>Oe.priority)})}return()=>{this.destroy()}}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.preObjectInit?this.preObjectInit(()=>this.init(this.instanceArgs$)):this.init(this.instanceArgs$)})})}get preObjectInit(){}destroy(){this.instance.value&&(this.store.unregisterBeforeRender(this.instance.value.uuid),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove()),super.destroy()}appendToParent(){requestAnimationFrame(()=>{const V=this.get(Ae=>Ae.appendTo);if(V&&V.value)return V.value.add(this.instance.value),void this.appended.emit(this.instance.value);const Le=this.get(Ae=>Ae.appendMode);if("none"!==Le){if("root"===Le)return this.addToScene(),void this.appended.emit(this.instance.value);"immediate"===Le&&(this.addToParent(),this.appended.emit(this.instance.value))}})}addToScene(){const V=this.store.get(Le=>Le.scene);V&&V.add(this.instance.value)}addToParent(){var V;let Le=this.parent;this.shouldUseParent(Le)?Le.value.add(this.instance.value):(Le=null===(V=this.parentHostRef)||void 0===V?void 0:V.call(this),this.shouldUseParent(Le)?Le.value.add(this.instance.value):this.addToScene())}shouldUseParent(V){return V&&V.value&&V.value.uuid!==this.instance.value.uuid}remove(){const{appendMode:V,appendTo:Le}=this.get();if(Le&&Le.value)Le.value.remove(this.instance.value);else if(this.shouldUseParent(this.parent)&&"immediate"===V)this.parent.value.remove(this.instance.value);else{const Ae=this.store.get(Oe=>Oe.scene);Ae&&Ae.remove(this.instance.value)}}switch(){const V=this.objectInitFn();this.instance.value.children&&(this.instance.value.traverse(Le=>{Le!==this.instance.value&&Le.parent===this.instance.value&&(Le.parent=V)}),this.instance.value.children=[]),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove(),this.prepareInstance(V)}eventNameToHandler(V){return Le=>{this.zone.run(()=>{V.emit(Le)})}}}return ce.\u0275fac=function(){let Me;return function(Le){return(Me||(Me=N.n5z(ce)))(Le||ce)}}(),ce.\u0275dir=N.lG2({type:ce,outputs:{appended:"appended",beforeRender:"beforeRender",animateReady:"animateReady"},features:[N.qOj]}),ce})()},5632:(ft,Re,x)=>{x.d(Re,{B3:()=>Le,DX:()=>Ae});var N=x(8427),z=x(1858),H=x(9135),O=x(9482),W=x(1062),J=x(4969),S=x(9643),F=x(969),B=x(4714),P=x(9319);const L=["rendererCanvas"];function ke(oe,De){if(1&oe&&z.GkF(0,3),2&oe){z.oxw();const j=z.MAs(4);z.Q6J("ngTemplateOutlet",j)}}function Se(oe,De){1&oe&&z.Hsn(0)}const rt=["*"],ce=new Map,{invalidate:Me,advance:V}=(0,B.ip)(ce);let Le=(()=>{class oe extends J.gU{constructor(j,ge,Ie){super(),this.zone=j,this.store=ge,this.loader=Ie,this.hostClass=!0,this._initialLog=!1,this._projectContent=!1,this.created=new z.vpe,this.pointermissed=new z.vpe}set linear(j){this.store.set({linear:(0,F.I)(j)})}set legacy(j){this.store.set({legacy:(0,F.I)(j)})}set flat(j){this.store.set({flat:(0,F.I)(j)})}set frameloop(j){this.store.set({frameloop:j})}set orthographic(j){this.store.set({orthographic:(0,F.I)(j)})}set dpr(j){this.store.set({dpr:j})}set raycaster(j){this.store.set({raycasterOptions:j})}set shadows(j){this.store.set({shadows:"object"==typeof j?j:(0,F.I)(j)})}set camera(j){this.store.set({cameraOptions:j})}get cameraRef(){return this.store.get(j=>j.cameraRef)}set lookAt(j){this.store.set({lookAt:(0,P.NO)(j)})}set scene(j){this.store.set({sceneOptions:j})}get sceneRef(){return this.store.get(j=>j.sceneRef)}set gl(j){this.store.set({glOptions:j})}get initialLog(){return this._initialLog}set initialLog(j){this._initialLog=(0,F.I)(j)}get projectContent(){return this._projectContent}set projectContent(j){this._projectContent=(0,F.I)(j)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.pointermissed.observed&&this.store.set({pointerMissed:j=>{this.pointermissed.emit(j)}}),ce.set(this.rendererCanvas.nativeElement,()=>this.store.get()),this.store.init(this.rendererCanvas.nativeElement,ce,Me,V),this.onCanvasReady(this.store.ready$,()=>{const j=this.store.get();this.created.emit(j),this.initialLog&&(console.group("[NgtCanvas] Initialized"),console.log(j),console.groupEnd()),this.store.startLoop(this.store.select())})})}ngOnDestroy(){super.ngOnDestroy(),this.loader.destroy()}}return oe.\u0275fac=function(j){return new(j||oe)(z.Y36(z.R0b),z.Y36(S.W),z.Y36(O.g))},oe.\u0275cmp=z.Xpm({type:oe,selectors:[["ngt-canvas"]],viewQuery:function(j,ge){if(1&j&&z.Gf(L,7),2&j){let Ie;z.iGM(Ie=z.CRH())&&(ge.rendererCanvas=Ie.first)}},hostVars:2,hostBindings:function(j,ge){2&j&&z.ekj("ngt-canvas",ge.hostClass)},inputs:{linear:"linear",legacy:"legacy",flat:"flat",frameloop:"frameloop",orthographic:"orthographic",dpr:"dpr",raycaster:"raycaster",shadows:"shadows",camera:"camera",lookAt:"lookAt",scene:"scene",gl:"gl",initialLog:"initialLog",projectContent:"projectContent"},outputs:{created:"created",pointermissed:"pointermissed"},features:[z._Bn([S.W,W.I,(0,H.RP)(oe)]),z.qOj],ngContentSelectors:rt,decls:5,vars:1,consts:[["rendererCanvas",""],[3,"ngTemplateOutlet",4,"ngIf"],["contentTemplate",""],[3,"ngTemplateOutlet"]],template:function(j,ge){1&j&&(z.F$t(),z._UZ(0,"canvas",null,0),z.YNc(2,ke,1,1,"ng-container",1),z.YNc(3,Se,1,0,"ng-template",null,2,z.W1O)),2&j&&(z.xp6(2),z.Q6J("ngIf",ge.projectContent))},directives:[N.O5,N.tP],styles:["[_nghost-%COMP%]{display:block;position:relative;width:100%;height:100%;overflow:hidden}[_nghost-%COMP%]   canvas[_ngcontent-%COMP%]{display:block}"],changeDetection:0}),oe})(),Ae=(()=>{class oe{}return oe.\u0275fac=function(j){return new(j||oe)},oe.\u0275mod=z.oAB({type:oe}),oe.\u0275inj=z.cJS({imports:[[N.ez]]}),oe})()},6174:(ft,Re,x)=>{x.d(Re,{U:()=>H});var N=x(1134),z=x(4427);function H(W,J){return[{provide:N.W,useExisting:W},{provide:z.cz,useFactory:S=>()=>(null==J?void 0:J(S))||S.instance,deps:[W]}]}},9135:(ft,Re,x)=>{x.d(Re,{Hm:()=>W,Q2:()=>O,RP:()=>J});var N=x(3119),z=x(4427),H=x(6174);function O(S,F){return[(0,H.U)(S,F),{provide:N.J,useExisting:S},{provide:z.Dh,useFactory:B=>()=>(null==F?void 0:F(B))||B.instance,deps:[S]}]}function W(S,F,B){return[{provide:N.J,useExisting:S},{provide:z.cz,useFactory:P=>()=>F?F(P):P.instance,deps:[S]},{provide:z.Aw,useFactory:P=>B?B(P):P.parentRef,deps:[S]},{provide:z.Dh,useFactory:P=>()=>F?F(P):P.instance,deps:[S]},{provide:z.cY,useFactory:P=>B?B(P):P.parentRef,deps:[S]}]}function J(S){return[{provide:z.cz,useFactory:F=>()=>F.sceneRef,deps:[S]},{provide:z.Dh,useFactory:F=>()=>F.sceneRef,deps:[S]},{provide:z.e9,useFactory:F=>()=>F.sceneRef,deps:[S]},{provide:z.mK,useFactory:F=>()=>F.cameraRef,deps:[S]}]}},6985:(ft,Re,x)=>{x.d(Re,{M:()=>z,n:()=>H});const z=new(x(1858).OlP)("NgtPerformance options",{factory:()=>({current:1,min:.5,max:1,debounce:200})});function H(O){return{provide:z,useValue:Object.assign({current:1,min:.5,max:1,debounce:200},O)}}},5001:(ft,Re,x)=>{x.d(Re,{Ji:()=>S,N1:()=>W});var N=x(1858),z=x(5831);const W=new N.OlP("ngtResizeObserver Options",{factory:()=>({box:"content-box",scroll:!1,offsetSize:!1,debounce:200})}),S=new N.OlP("Resize Observer API support",{factory:()=>{const F=(0,N.f3M)(z.m);return"ResizeObserver"in F&&null!=F.ResizeObserver}})},5831:(ft,Re,x)=>{x.d(Re,{m:()=>H});var N=x(8427),z=x(1858);const H=new z.OlP("window",{factory:()=>{const{defaultView:O}=(0,z.f3M)(N.K0);if(!O)throw"window is not available!";return O}})},5648:(ft,Re,x)=>{x.d(Re,{V:()=>J,y:()=>S});var N=x(3255),z=x(6316),H=x(3119),O=x(4969),W=x(1858);let J=(()=>{class F{constructor(P){this.host=P}set ngtObjectOutputs(P){this.assertWrapper(P),P.click.observed&&this.host.click.pipe((0,N.R)(P.destroy$)).subscribe(P.click.emit.bind(P.click)),P.contextmenu.observed&&this.host.contextmenu.pipe((0,N.R)(P.destroy$)).subscribe(P.contextmenu.emit.bind(P.contextmenu)),P.dblclick.observed&&this.host.dblclick.pipe((0,N.R)(P.destroy$)).subscribe(P.dblclick.emit.bind(P.dblclick)),P.pointerup.observed&&this.host.pointerup.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerup.emit.bind(P.pointerup)),P.pointerdown.observed&&this.host.pointerdown.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerdown.emit.bind(P.pointerdown)),P.pointerover.observed&&this.host.pointerover.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerover.emit.bind(P.pointerover)),P.pointerout.observed&&this.host.pointerout.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerout.emit.bind(P.pointerout)),P.pointerenter.observed&&this.host.pointerenter.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerenter.emit.bind(P.pointerenter)),P.pointerleave.observed&&this.host.pointerleave.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerleave.emit.bind(P.pointerleave)),P.pointermove.observed&&this.host.pointermove.pipe((0,N.R)(P.destroy$)).subscribe(P.pointermove.emit.bind(P.pointermove)),P.pointermissed.observed&&this.host.pointermissed.pipe((0,N.R)(P.destroy$)).subscribe(P.pointermissed.emit.bind(P.pointermissed)),P.pointercancel.observed&&this.host.pointercancel.pipe((0,N.R)(P.destroy$)).subscribe(P.pointercancel.emit.bind(P.pointercancel)),P.wheel.observed&&this.host.wheel.pipe((0,N.R)(P.destroy$)).subscribe(P.wheel.emit.bind(P.wheel)),P.ready.observed&&this.host.ready.pipe((0,N.R)(P.destroy$)).subscribe(P.ready.emit.bind(P.ready))}set ngtObjectInputs(P){this.assertWrapper(P),P.shouldPassThroughRef&&(this.host.ref=P.instance),(0,z.T)(P.select(L=>L.attach),this.host.select(L=>L.attach)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.attach=this.host.get(L=>L.attachExplicit)?this.host.attach:P.attach}),(0,z.T)(P.select(L=>L.skipParent),this.host.select(L=>L.skipParent)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.skipParent=this.host.get(L=>L.skipParentExplicit)?this.host.skipParent:P.skipParent}),(0,z.T)(P.select(L=>L.noAttach),this.host.select(L=>L.noAttach)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.noAttach=this.host.get(L=>L.noAttachExplicit)?this.host.noAttach:P.noAttach}),(0,z.T)(P.select(L=>L.name),this.host.select(L=>L.name)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.name=this.host.get(L=>L.nameExplicit)?this.host.name:P.name}),(0,z.T)(P.select(L=>L.position),this.host.select(L=>L.position)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.position=this.host.get(L=>L.positionExplicit)?this.host.position:P.position}),(0,z.T)(P.select(L=>L.rotation),this.host.select(L=>L.rotation)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.rotation=this.host.get(L=>L.rotationExplicit)?this.host.rotation:P.rotation}),(0,z.T)(P.select(L=>L.quaternion),this.host.select(L=>L.quaternion)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.quaternion=this.host.get(L=>L.quaternionExplicit)?this.host.quaternion:P.quaternion}),(0,z.T)(P.select(L=>L.scale),this.host.select(L=>L.scale)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.scale=this.host.get(L=>L.scaleExplicit)?this.host.scale:P.scale}),(0,z.T)(P.select(L=>L.color),this.host.select(L=>L.color)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.color=this.host.get(L=>L.colorExplicit)?this.host.color:P.color}),(0,z.T)(P.select(L=>L.userData),this.host.select(L=>L.userData)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.userData=this.host.get(L=>L.userDataExplicit)?this.host.userData:P.userData}),(0,z.T)(P.select(L=>L.castShadow).pipe((0,O.Xb)()),this.host.select(L=>L.castShadow).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.castShadow=this.host.get(L=>L.castShadowExplicit)?this.host.castShadow:P.castShadow}),(0,z.T)(P.select(L=>L.receiveShadow).pipe((0,O.Xb)()),this.host.select(L=>L.receiveShadow).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.receiveShadow=this.host.get(L=>L.receiveShadowExplicit)?this.host.receiveShadow:P.receiveShadow}),(0,z.T)(P.select(L=>L.visible),this.host.select(L=>L.visible)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.visible=this.host.get(L=>L.visibleExplicit)?this.host.visible:P.visible}),(0,z.T)(P.select(L=>L.matrixAutoUpdate),this.host.select(L=>L.matrixAutoUpdate)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.matrixAutoUpdate=this.host.get(L=>L.matrixAutoUpdateExplicit)?this.host.matrixAutoUpdate:P.matrixAutoUpdate}),(0,z.T)(P.select(L=>L.dispose).pipe((0,O.Xb)()),this.host.select(L=>L.dispose).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.dispose=this.host.get(L=>L.disposeExplicit)?this.host.dispose:P.dispose}),(0,z.T)(P.select(L=>L.raycast).pipe((0,O.Xb)()),this.host.select(L=>L.raycast).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.raycast=this.host.get(L=>L.raycastExplicit)?this.host.raycast:P.raycast}),(0,z.T)(P.select(L=>L.appendMode),this.host.select(L=>L.appendMode)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.appendMode=this.host.get(L=>L.appendModeExplicit)?this.host.appendMode:P.appendMode}),(0,z.T)(P.select(L=>L.appendTo).pipe((0,O.Xb)()),this.host.select(L=>L.appendTo).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.appendTo=this.host.get(L=>L.appendToExplicit)?this.host.appendTo:P.appendTo})}assertWrapper(P){if(!(P instanceof H.F))throw new Error("[NgtObjectPassThrough] wrapper is not an NgtObject")}}return F.\u0275fac=function(P){return new(P||F)(W.Y36(H.J,10))},F.\u0275dir=W.lG2({type:F,selectors:[["","ngtObjectOutputs",""],["","ngtObjectInputs",""],["","ngtObjectInputs","","ngtObjectOutputs",""]],inputs:{ngtObjectOutputs:"ngtObjectOutputs",ngtObjectInputs:"ngtObjectInputs"}}),F})(),S=(()=>{class F{}return F.\u0275fac=function(P){return new(P||F)},F.\u0275mod=W.oAB({type:F}),F.\u0275inj=W.cJS({}),F})()},9804:(ft,Re,x)=>{x.d(Re,{I:()=>O,l:()=>H});var N=x(8427),z=x(1858);let H=(()=>{class W extends N.sg{set ngForRepeat(S){this.ngForOf=Number.isInteger(S)?Array.from({length:S},(F,B)=>B):[]}}return W.\u0275fac=function(){let J;return function(F){return(J||(J=z.n5z(W)))(F||W)}}(),W.\u0275dir=z.lG2({type:W,selectors:[["","ngFor","","ngForRepeat",""]],inputs:{ngForRepeat:"ngForRepeat"},features:[z.qOj]}),W})(),O=(()=>{class W{}return W.\u0275fac=function(S){return new(S||W)},W.\u0275mod=z.oAB({type:W}),W.\u0275inj=z.cJS({}),W})()},5959:(ft,Re,x)=>{x.d(Re,{j:()=>z,k:()=>H});var N=x(1858);let z=(()=>{class O{transform(J){return J*Math.PI/180}}return O.\u0275fac=function(J){return new(J||O)},O.\u0275pipe=N.Yjl({name:"radian",type:O,pure:!0}),O})(),H=(()=>{class O{}return O.\u0275fac=function(J){return new(J||O)},O.\u0275mod=N.oAB({type:O}),O.\u0275inj=N.cJS({}),O})()},4707:(ft,Re,x)=>{x.d(Re,{g:()=>O,i:()=>H});var N=x(6963),z=x(1858);let H=(()=>{class W{transform(S){switch(S){case"front":return N.Wl3;case"back":return N._Li;case"double":return N.ehD}}}return W.\u0275fac=function(S){return new(S||W)},W.\u0275pipe=z.Yjl({name:"side",type:W,pure:!0}),W})(),O=(()=>{class W{}return W.\u0275fac=function(S){return new(S||W)},W.\u0275mod=z.oAB({type:W}),W.\u0275inj=z.cJS({}),W})()},4315:(ft,Re,x)=>{x.d(Re,{WS:()=>Ae,ZQ:()=>Le,yh:()=>Oe});var N=x(4254),z=x(8427),H=x(1487),O=x(6963),W=x(1134),J=x(1062),S=x(4969),F=x(9643),B=x(4427),P=x(1168),L=x(4987),ke=x(9319),Se=x(1858);const rt=function(oe){return{portal:oe}};function ce(oe,De){if(1&oe&&Se.GkF(0,1),2&oe){const j=Se.oxw();Se.Q6J("ngTemplateOutlet",j.content.templateRef)("ngTemplateOutletContext",Se.VKq(2,rt,j.instance))}}const Me=["*"],V=["events","invalidate","advance","size","viewport"];let Le=(()=>{class oe{constructor(j){this.templateRef=j}static ngTemplateContextGuard(j,ge){return!0}}return oe.\u0275fac=function(j){return new(j||oe)(Se.Y36(Se.Rgc))},oe.\u0275dir=Se.lG2({type:oe,selectors:[["ng-template","ngt-portal-content",""]]}),oe})(),Ae=(()=>{class oe extends W.W{constructor(j,ge,Ie,ze,Ne){super(j,ge,Ie,ze),this.resizeResult$=Ne,this.init=this.effect((0,H.b)(()=>{const Fe=this.store.get();this.set(Ze=>{var ae,re;return{raycaster:new O.iMs,pointer:new O.FM8,size:null!==(ae=Ze.size)&&void 0!==ae?ae:Fe.size,events:null!==(re=Ze.events)&&void 0!==re?re:Fe.events}})})),this.initPortalStore=this.effect((0,H.b)(()=>{var Fe;const Ze=this.store.get(),ae=this.get(),re={clientWidth:ae.size.width,clientHeight:ae.size.height},he=(0,N._T)(Ze.performance,["regress"]),pe=new F.W({nativeElement:re},he,{devicePixelRatio:(0,ke.CE)(Ze.viewport.dpr)},this.store,this.resizeResult$,this.zone),we=this.instance;let Te=this.instance.value;Te||(Te=(0,L.P)(new O.xsS,()=>pe.get(),null===(Fe=this.parentRef)||void 0===Fe?void 0:Fe.call(this)),this.instance.set(Te)),pe.set(Object.assign(Object.assign({},Ze),{scene:Te,sceneRef:we,raycaster:ae.raycaster,pointer:ae.pointer,mouse:ae.pointer,previousState:this.store.get(),events:Object.assign(Object.assign({},Ze.events),ae.events),size:Object.assign(Object.assign({},Ze.size),ae.size)})),this.set({portalStore:pe})})),this.subscribeToRoot=this.effect((0,S.oe)(()=>{const Fe=this.store.select().subscribe(Ze=>{this.get(ae=>ae.portalStore).set(ae=>this.inject(Ze,ae))});return()=>{Fe.unsubscribe()}})),this.setInitialPortalState=this.effect((0,H.b)(()=>{this.get(Fe=>Fe.portalStore).set(Fe=>this.inject(this.store.get(),Fe))}))}set size(j){this.set({size:j})}set events(j){this.set({events:j})}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.init(),this.onCanvasReady(this.store.ready$,()=>{this.initPortalStore(),this.subscribeToRoot(),this.setInitialPortalState()})})}inject(j,ge){const{size:Ie,events:ze,portalStore:Ne}=this.get(),Fe=Ne.get(),{scene:Ze,raycaster:ae,pointer:re,previousState:Z,events:Ce,size:he,viewport:pe,mouse:we}=Fe,Te=(0,N._T)(Fe,["scene","raycaster","pointer","previousState","events","size","viewport","mouse"]),et=Object.assign({},j);let Ve;if(Object.keys(j).forEach(ct=>{(V.includes(ct)||j[ct]!==ge[ct])&&delete et[ct]}),ge&&Ie){const ct=ge.camera;Ve=j.viewport.getCurrentViewport(ct,new O.Pa4,Ie),ct!==j.camera&&(0,P.H)(j.cameraOptions,ct,Ie)}return Object.assign(Object.assign(Object.assign({},et),{scene:Ze,raycaster:ae,pointer:re,mouse:we,previousState:Z,events:Object.assign(Object.assign(Object.assign({},j.events),(null==ge?void 0:ge.events)||Ce),ze),size:Object.assign(Object.assign(Object.assign({},j.size),he),Ie),viewport:Object.assign(Object.assign({},j.viewport),Ve||pe)}),Te)}}return oe.\u0275fac=function(j){return new(j||oe)(Se.Y36(Se.R0b),Se.Y36(F.W,4),Se.Y36(B.cz,12),Se.Y36(B.Aw,12),Se.Y36(J.I))},oe.\u0275cmp=Se.Xpm({type:oe,selectors:[["ngt-portal"]],contentQueries:function(j,ge,Ie){if(1&j&&Se.Suo(Ie,Le,5),2&j){let ze;Se.iGM(ze=Se.CRH())&&(ge.content=ze.first)}},inputs:{size:"size",events:"events"},features:[Se._Bn([J.I,{provide:F.W,useFactory:De=>De.get(j=>j.portalStore),deps:[oe]},{provide:B.cz,useFactory:De=>()=>De.get(j=>j.portalStore).get(j=>j.sceneRef),deps:[oe]},{provide:B.Dh,useFactory:De=>()=>De.get(j=>j.portalStore).get(j=>j.sceneRef),deps:[oe]},{provide:B.e9,useFactory:De=>()=>De.get(j=>j.portalStore).get(j=>j.sceneRef),deps:[oe]},{provide:B.mK,useFactory:De=>()=>De.get(j=>j.portalStore).get(j=>j.cameraRef),deps:[oe]}]),Se.qOj],ngContentSelectors:Me,decls:2,vars:1,consts:[[3,"ngTemplateOutlet","ngTemplateOutletContext",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(j,ge){1&j&&(Se.F$t(),Se.YNc(0,ce,1,4,"ng-container",0),Se.Hsn(1)),2&j&&Se.Q6J("ngIf",ge.content)},directives:[z.O5,z.tP],encapsulation:2,changeDetection:0}),oe})(),Oe=(()=>{class oe{}return oe.\u0275fac=function(j){return new(j||oe)},oe.\u0275mod=Se.oAB({type:oe}),oe.\u0275inj=Se.cJS({imports:[[z.ez]]}),oe})()},8458:(ft,Re,x)=>{x.d(Re,{R:()=>z});var N=x(6239);class z extends N.X{constructor(O){super(O||null)}set(O){this.next("function"==typeof O?O(this.value):O)}}},9482:(ft,Re,x)=>{x.d(Re,{g:()=>j});var N=x(1853),z=x(579),H=x(6349),O=x(8289),W=x(3673),S=x(4065),F=x(3203),B=x(7053),P=x(2455),L=x(3451),Se=x(1524),rt=x(1487),ce=x(1547),Me=x(7411),V=x(8098),Le=x(6915),Ae=x(5035),oe=x(6230),De=x(1858);let j=(()=>{class ge{constructor(){this.cached=new Map}use(ze,Ne,Fe,Ze){const ae=oe.is.arr(Ne)?Ne:[Ne],re=new ze;Fe&&Fe(re);const Z=ae.map(Ce=>(this.cached.has(Ce)||this.cached.set(Ce,(0,Se.D)(re.loadAsync(Ce,Ze)).pipe((0,rt.b)(he=>{he.scene&&Object.assign(he,function Oe(ge){const Ie={nodes:{},materials:{}};return ge&&ge.traverse(ze=>{ze.name&&(Ie.nodes[ze.name]=ze),ze.material&&!Ie.materials[ze.material.name]&&(Ie.materials[ze.material.name]=ze.material)}),Ie}(he.scene))}),function J(ge=1/0){let Ie;Ie=ge&&"object"==typeof ge?ge:{count:ge};const{count:ze=1/0,delay:Ne,resetOnSuccess:Fe=!1}=Ie;return ze<=0?H.y:(0,N.e)((Ze,ae)=>{let Z,re=0;const Ce=()=>{let he=!1;Z=Ze.subscribe((0,z.x)(ae,pe=>{Fe&&(re=0),ae.next(pe)},void 0,pe=>{if(re++<ze){const we=()=>{Z?(Z.unsubscribe(),Z=null,Ce()):he=!0};if(null!=Ne){const Te="number"==typeof Ne?(0,O.H)(Ne):(0,W.Xf)(Ne(pe,re)),et=(0,z.x)(ae,()=>{et.unsubscribe(),we()},()=>{ae.complete()});Te.subscribe(et)}else we()}else ae.error(pe)})),he&&(Z.unsubscribe(),Z=null,Ce())};Ce()})}({count:2}),(0,ce.K)(he=>(console.error(`Error loading ${Ce}: ${he.message}`),(0,Me.of)(null))),(0,V.B)({connector:()=>new Le.t,resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}))),this.cached.get(Ce)));return function ke(...ge){const Ie=(0,B.jO)(ge),{args:ze,keys:Ne}=(0,F.D)(ge),Fe=new S.y(Ze=>{const{length:ae}=ze;if(!ae)return void Ze.complete();const re=new Array(ae);let Z=ae,Ce=ae;for(let he=0;he<ae;he++){let pe=!1;(0,W.Xf)(ze[he]).subscribe((0,z.x)(Ze,we=>{pe||(pe=!0,Ce--),re[he]=we},()=>Z--,void 0,()=>{(!Z||!pe)&&(Ce||Ze.next(Ne?(0,L.n)(Ne,re):re),Ze.complete())}))}});return Ie?Fe.pipe((0,P.Z)(Ie)):Fe}(Z).pipe((0,Ae.U)(Ce=>oe.is.arr(Ne)?Ce:Ce[0]))}destroy(){this.cached.clear()}ngOnDestroy(){this.destroy()}}return ge.\u0275fac=function(ze){return new(ze||ge)},ge.\u0275prov=De.Yz7({token:ge,factory:ge.\u0275fac,providedIn:"root"}),ge})()},1062:(ft,Re,x)=>{x.d(Re,{I:()=>Fe});var N=x(8427),z=x(1858),H=x(1150),O=x(1853),W=x(579);function J(Z,Ce=H.z){return(0,O.e)((he,pe)=>{let we=null,Te=null,et=null;const Ve=()=>{if(we){we.unsubscribe(),we=null;const bt=Te;Te=null,pe.next(bt)}};function ct(){const bt=et+Z,Kt=Ce.now();if(Kt<bt)return we=this.schedule(void 0,bt-Kt),void pe.add(we);Ve()}he.subscribe((0,W.x)(pe,bt=>{Te=bt,et=Ce.now(),we||(we=Ce.schedule(ct,Z),pe.add(we))},()=>{Ve(),pe.complete()},void 0,()=>{Te=we=null}))})}var S=x(3673),F=x(4065),B=x(7829),P=x(7552),L=x(6020),ke=x(2455);const Se=["addListener","removeListener"],rt=["addEventListener","removeEventListener"],ce=["on","off"];function Me(Z,Ce,he,pe){if((0,L.m)(he)&&(pe=he,he=void 0),pe)return Me(Z,Ce,he).pipe((0,ke.Z)(pe));const[we,Te]=function Oe(Z){return(0,L.m)(Z.addEventListener)&&(0,L.m)(Z.removeEventListener)}(Z)?rt.map(et=>Ve=>Z[et](Ce,Ve,he)):function Le(Z){return(0,L.m)(Z.addListener)&&(0,L.m)(Z.removeListener)}(Z)?Se.map(V(Z,Ce)):function Ae(Z){return(0,L.m)(Z.on)&&(0,L.m)(Z.off)}(Z)?ce.map(V(Z,Ce)):[];if(!we&&(0,P.z)(Z))return(0,B.z)(et=>Me(et,Ce,he))((0,S.Xf)(Z));if(!we)throw new TypeError("Invalid event target");return new F.y(et=>{const Ve=(...ct)=>et.next(1<ct.length?ct:ct[0]);return we(Ve),()=>Te(Ve)})}function V(Z,Ce){return he=>pe=>Z[he](Ce,pe)}var oe=x(5654),De=x(1926),j=x(3255),ge=x(8098),Ie=x(6915),ze=x(5001),Ne=x(5831);let Fe=(()=>{class Z extends F.y{constructor({nativeElement:he},pe,we,Te,et,{box:Ve,offsetSize:ct,scroll:bt,debounce:Kt}){let zn,oi,Fi=[];const fn=new oe.x,Mi=Ze(he),ai=Kt?"number"==typeof Kt?Kt:Kt.scroll:null,Yn=Kt?"number"==typeof Kt?Kt:Kt.resize:null,qt=on=>(0,De.z)(J(null!=on?on:0),(0,j.R)(fn));return super(on=>{if(et)return pe.runOutsideAngular(()=>{const Bt=Cn=>{Fi=Cn;const{left:Ln,top:nr,width:Fr,height:Bi,bottom:Un,right:kn,x:li,y:zi}=he.getBoundingClientRect(),Rn={left:Ln,top:nr,width:Fr,height:Bi,bottom:Un,right:kn,x:li,y:zi};he instanceof HTMLElement&&ct&&(Rn.height=he.offsetHeight,Rn.width=he.offsetWidth),Object.freeze(Rn),on.next(Object.assign({entries:Cn,dpr:Te.devicePixelRatio},Rn)),re(oi||{},Rn)||(oi=Rn)},pn=()=>{Bt(Fi)};zn=new ResizeObserver(Bt),zn.observe(he,{box:Ve}),bt&&(Mi&&Mi.forEach(Cn=>{Me(Cn,"scroll",{capture:!0,passive:!0}).pipe(qt(ai)).subscribe(pn)}),Me(Te,"scroll",{capture:!0,passive:!0}).pipe(qt(ai)).subscribe(pn)),Me(Te,"resize").pipe(qt(Yn)).subscribe(pn)}),()=>{zn&&(zn.unobserve(he),zn.disconnect()),fn.next(),fn.complete()};on.error("ResizeObserver is not supported in your browser. Please use a polyfill")}),this.pipe(J(ai||0),(0,ge.B)({connector:()=>new Ie.t(1),resetOnRefCountZero:!0,resetOnComplete:!0}))}}return Z.\u0275fac=function(he){return new(he||Z)(z.LFG(z.SBq),z.LFG(z.R0b),z.LFG(N.K0),z.LFG(Ne.m),z.LFG(ze.Ji),z.LFG(ze.N1))},Z.\u0275prov=z.Yz7({token:Z,factory:Z.\u0275fac}),Z})();function Ze(Z){const Ce=[];if(!Z||Z===document.body)return Ce;const{overflow:he,overflowX:pe,overflowY:we}=window.getComputedStyle(Z);return[he,pe,we].some(Te=>"auto"===Te||"scroll"===Te)&&Ce.push(Z),[...Ce,...Ze(Z.parentElement)]}const ae=["x","y","top","bottom","left","right","width","height"],re=(Z,Ce)=>ae.every(he=>Z[he]===Ce[he])},4969:(ft,Re,x)=>{x.d(Re,{gU:()=>Ze,Xb:()=>Ce,oe:()=>ae});var N=x(6349),z=x(1853),H=x(579);function O(pe,we=N.y){return pe=null!=pe?pe:W,(0,z.e)((Te,et)=>{let Ve,ct=!0;Te.subscribe((0,H.x)(et,bt=>{const Kt=we(bt);(ct||!pe(Ve,Kt))&&(ct=!1,Ve=Kt,et.next(bt))}))})}function W(pe,we){return pe===we}var J=x(8372),F=x(4493);const P=new class B extends F.v{}(class S extends J.o{constructor(we,Te){super(we,Te),this.scheduler=we,this.work=Te}schedule(we,Te=0){return Te>0?super.schedule(we,Te):(this.delay=Te,this.state=we,this.scheduler.flush(this),this)}execute(we,Te){return Te>0||this.closed?super.execute(we,Te):this._execute(we,Te)}requestAsyncId(we,Te,et=0){return null!=et&&et>0||null==et&&this.delay>0?super.requestAsyncId(we,Te,et):we.flush(this)}});var ke=x(6915),Se=x(377),rt=x(5035),ce=x(8098),Me=x(3255),V=x(1375),Le=x(6879),Ae=x(5654),Oe=x(7411),oe=x(1487),De=x(4255),j=x(4684),ge=x(8412),Ie=x(1836),ze=x(6805),Ne=x(5359),Fe=x(1858);let Ze=(()=>{class pe{constructor(){this.destroySubject$=new ke.t(1),this.destroy$=this.destroySubject$.asObservable(),this.stateSubject$=new ke.t(1)}ngOnDestroy(){this.stateSubject$.complete(),this.destroySubject$.next()}get(Te){let et;return this.stateSubject$.pipe((0,Se.q)(1),Z(),(0,rt.U)(Ve=>Te?Te(Ve):Ve),Z()).subscribe(Ve=>{et=Ve}),et}set(Te){const et="function"==typeof Te?Te(this.get()):Te;this.updateState((Ve,ct)=>Object.assign(Object.assign({},Ve),ct))(et)}select(...Te){if(0===Te.length)return this.stateSubject$.pipe(Z(),O(),(0,ce.B)({connector:()=>new ke.t(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,Me.R)(this.destroy$));(0,V.b)(Te[Te.length-1])&&Te.push(()=>({}));const{observables:et,projector:Ve}=function he(pe){const we=Array.from(pe),Te=we.pop();return{observables:we,projector:Te}}(Te);let ct;return ct=0===et.length?this.stateSubject$.pipe(Z(),(0,rt.U)(Ve)):(0,Le.a)(et).pipe((0,rt.U)(bt=>Ve(...bt))),ct.pipe(Z(),O(),(0,ce.B)({connector:()=>new ke.t(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,Me.R)(this.destroy$))}effect(Te){const et=new Ae.x;return Te(et).pipe((0,Me.R)(this.destroy$)).subscribe(),Ve=>((0,V.b)(Ve)?Ve:(0,Oe.of)(Ve)).pipe((0,Me.R)(this.destroy$)).subscribe(bt=>{et.next(bt)})}onCanvasReady(Te,et,Ve=!1){return this.effect((Ve?ae:oe.b)(()=>et()))(Te)}subscribeTo(Te){return this.effect(et=>et)(Te)}updateState(Te){return et=>((0,V.b)(et)?et:(0,Oe.of)(et)).pipe((0,De.b)(ct=>(0,j.x)([ct],P).pipe((0,ge.M)(this.stateSubject$.pipe((0,Ie.O)({}))))),(0,Me.R)(this.destroy$)).subscribe({next:([ct,bt])=>{this.stateSubject$.next(Te(bt||{},ct))},error:ct=>{this.stateSubject$.error(ct)}})}}return pe.\u0275fac=function(Te){return new(Te||pe)},pe.\u0275prov=Fe.Yz7({token:pe,factory:pe.\u0275fac}),pe})();function ae(pe){let et,we=ze.Z,Te=!1;const Ve=ct=>()=>{we&&we({prev:et,complete:!0,error:ct})};return(0,oe.b)({next:ct=>{we&&Te&&we({prev:et,complete:!1,error:!1});const bt=pe(ct);bt&&(we=bt),et=ct,Te||(Te=!0)},complete:Ve(!1),unsubscribe:Ve(!1),error:Ve(!0)})}function Z(){return(0,Ne.h)(pe=>void 0!==pe)}function Ce(){return(0,Ie.O)(void 0)}},9643:(ft,Re,x)=>{x.d(Re,{W:()=>Oe});var N=x(4254),z=x(5359),H=x(5035),O=x(1487),W=x(6963),J=x(6985),S=x(5831),F=x(8458),B=x(1062),P=x(8394),L=x(1168),ke=x(4852),Se=x(1527),rt=x(4987),ce=x(6230),Me=x(9319),V=x(4969),Le=x(1858);const Ae={click:!1,contextmenu:!1,dblclick:!1,wheel:!1,pointerdown:!0,pointerup:!0,pointerleave:!0,pointermove:!0,pointercancel:!0,lostpointercapture:!0};let Oe=(()=>{class De extends V.gU{constructor({nativeElement:{clientWidth:ge,clientHeight:Ie}},ze,{devicePixelRatio:Ne},Fe,Ze,ae){super(),this.parentStore=Fe,this.resizeResult$=Ze,this.zone=ae,this.pointer=new W.FM8,this.position=new W.Pa4,this.defaultTarget=new W.Pa4,this.tempTarget=new W.Pa4,this.ready$=this.select(re=>re.ready).pipe((0,z.h)(re=>re)),this.camera$=this.select(re=>re.camera),this.scene$=this.select(re=>re.scene),this.gl$=this.select(re=>re.gl),this.raycaster$=this.select(re=>re.raycaster),this.active$=this.select(re=>re.internal.active),this.allConstructed$=this.select(this.camera$,this.scene$,this.gl$,this.raycaster$,this.active$,(re,Z,Ce,he,pe)=>!!(re&&Ce&&Z&&he&&!0===pe)).pipe((0,H.U)(re=>({ready:re}))),this.performanceTimeoutId=void 0,this.dimensions$=this.select(this.select(re=>re.size),this.select(re=>re.viewport),(re,Z)=>({size:re,viewport:Z})),this.startLoop=this.effect((0,O.b)(({invalidate:re})=>{re()})),this.initRenderer=this.effect((0,V.oe)(({canvasElement:re,rootStateMap:Z,advance:Ce})=>{var he,pe,we,Te,et;const Ve=this.get(),ct=(0,rt.P)(new W.xsS,()=>this.get(),(null===(he=this.parentStore)||void 0===he?void 0:he.get(qt=>qt.sceneRef))||null);(0,P.n)(ct,Ve.sceneOptions),this.get(qt=>qt.sceneRef).set(ct);let bt=Ve.gl;Ve.gl||(bt=function oe(De,j){const ge="function"==typeof De?De(j):De;return null!=(null==ge?void 0:ge.render)?ge:new W.CP7(Object.assign({powerPreference:"high-performance",canvas:j,antialias:!0,alpha:!0},De))}(Ve.glOptions,re)),this.set({gl:bt});let Kt=Ve.raycaster;Ve.raycaster||(Kt=new W.iMs);const zn=Ve.raycasterOptions||{},{params:oi}=zn,Fi=(0,N._T)(zn,["params"]);(0,P.n)(Kt,Object.assign(Object.assign({enabled:!0},Fi),{params:Object.assign(Object.assign({},Kt.params),oi||{})}));let fn=Ve.camera;if(!Ve.camera){const qt=ce.is.camera(Ve.cameraOptions);fn=qt?Ve.cameraOptions:(0,L.W)(Ve),qt||(Ve.cameraOptions&&(0,P.n)(fn,Ve.cameraOptions),(null===(pe=Ve.cameraOptions)||void 0===pe?void 0:pe.position)||(fn.position.z=5),(null===(we=Ve.cameraOptions)||void 0===we?void 0:we.rotation)||fn.lookAt(null!==(Te=Ve.lookAt)&&void 0!==Te?Te:(0,Me.NO)()),fn.updateProjectionMatrix()),ce.is.instance(fn)||(fn=(0,rt.P)(fn,()=>this.get(),(null===(et=this.parentStore)||void 0===et?void 0:et.get(on=>on.cameraRef))||null)),this.get(on=>on.cameraRef).set(fn)}let Mi=Ve.xr;if(!Ve.xr){const qt=(Bt,pn)=>{const Cn=this.get();"never"!==Cn.frameloop&&Ce(Bt,!0,()=>Cn,pn)},on=()=>{const Bt=this.get(pn=>pn.gl);Bt.xr.enabled=Bt.xr.isPresenting,Bt.xr.setAnimationLoop(Bt.xr.isPresenting?qt:null)};Mi={connect:()=>{const Bt=this.get(pn=>pn.gl);Bt.xr.addEventListener("sessionstart",on),Bt.xr.addEventListener("sessionend",on)},disconnect:()=>{const Bt=this.get(pn=>pn.gl);Bt.xr.removeEventListener("sessionstart",on),Bt.xr.removeEventListener("sessionend",on)}},bt.xr&&Mi.connect()}bt.shadowMap&&Ve.shadows&&(bt.shadowMap.enabled=!0,"object"==typeof Ve.shadows?Object.assign(bt.shadowMap,Ve.shadows):bt.shadowMap.type=W.ntZ,(0,ke.Q)(bt.shadowMap)),W.epp&&(W.epp.legacyMode=Ve.legacy);const ai=Ve.linear?W.rnI:W.knz,Yn=Ve.flat?W.uL9:W.LY2;return bt.outputEncoding!==ai&&(bt.outputEncoding=ai),bt.toneMapping!==Yn&&(bt.toneMapping=Yn),bt.setClearAlpha(0),bt.setPixelRatio((0,Me.CE)(Ve.viewport.dpr)),bt.setSize(Ve.size.width,Ve.size.height),"object"==typeof Ve.glOptions&&"function"!=typeof Ve.glOptions&&!ce.is.glRenderer(Ve.glOptions)&&(0,P.n)(bt,Ve.glOptions),this.set({gl:bt,camera:fn,scene:ct,raycaster:Kt}),()=>{const{gl:qt,xr:on,cameraRef:Bt,sceneRef:pn,events:Cn}=this.get();qt&&(Cn.disconnect&&Cn.disconnect(),qt.renderLists.dispose(),qt.forceContextLoss(),qt.xr&&qt.xr.enabled&&(qt.xr.setAnimationLoop(null),on.disconnect()),Bt.complete(),pn.complete(),this.set(Ln=>Object.assign(Object.assign({},Ln),{internal:Object.assign(Object.assign({},Ln.internal),{active:!1})})),Z.delete(re))}})),this.resize=this.effect((0,O.b)(({width:re,height:Z,dpr:Ce})=>{this.set(({viewport:he,camera:pe})=>{const we={width:re,height:Z};return{size:we,viewport:Object.assign(Object.assign(Object.assign({},he),he.getCurrentViewport(pe,this.defaultTarget,we)),{dpr:(0,Me.CE)(Ce)})}})})),this.updateDimensions=this.effect((0,O.b)(({size:re,viewport:Z})=>{const{camera:Ce,gl:he,ready:pe,cameraOptions:we}=this.get();pe&&((0,L.H)(we,Ce,re),he.setPixelRatio(Z.dpr),he.setSize(re.width,re.height))})),this.registerBeforeRenderEffect=this.effect((0,V.oe)(re=>{var{uuid:Z}=re,Ce=(0,N._T)(re,["uuid"]);return Z&&this.set(he=>({internal:Object.assign(Object.assign({},he.internal),{animations:new Map(he.internal.animations).set(Z,Ce),priority:he.internal.priority+((Ce.priority||0)>0?1:0)})})),({prev:{uuid:he}={},complete:pe})=>{(he!==Z||pe)&&this.unregisterBeforeRender(Z)}})),this.updateSubscribers=this.effect((0,O.b)(({animations:re})=>{if(!re.size)return;const Ce=Array.from(re.values());Ce.sort((he,pe)=>(he.priority||0)-(pe.priority||0)),this.set(he=>({internal:Object.assign(Object.assign({},he.internal),{subscribers:Ce})}))})),this.set({ready:!1,clock:new W.SUY,frameloop:"always",legacy:!1,linear:!1,flat:!1,orthographic:!1,shadows:!1,controls:null,pointer:this.pointer,mouse:this.pointer,sceneRef:new F.R,cameraRef:new F.R,events:{priority:1,enabled:!0,connected:void 0,handlers:{},compute:(re,Z)=>{Z.pointer.set(re.offsetX/Z.size.width*2-1,-re.offsetY/Z.size.height*2+1),Z.raycaster.setFromCamera(Z.pointer,Z.camera)}},cameraOptions:{},glOptions:{},raycasterOptions:{},sceneOptions:{},pointerMissed:()=>{},internal:{active:!1,lastEvent:null,priority:0,frames:0,interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,animations:new Map},dpr:[1,2],size:{width:ge,height:Ie},viewport:{initialDpr:Ne||1,dpr:Ne||1,width:ge,height:Ie,aspect:ge/Ie,distance:0,factor:0,getCurrentViewport:(re=this.get(he=>he.camera),Z=this.defaultTarget,Ce=this.get(he=>he.size))=>{const{width:he,height:pe}=Ce,we=he/pe;Z instanceof W.Pa4?this.tempTarget.copy(Z):this.tempTarget.set(...Z);const Te=re.getWorldPosition(this.position).distanceTo(this.tempTarget);if(ce.is.orthographic(re))return{width:he/re.zoom,height:pe/re.zoom,factor:1,distance:Te,aspect:we};const et=re.fov*Math.PI/180,Ve=2*Math.tan(et/2)*Te,ct=Ve*(he/pe);return{width:ct,height:Ve,factor:he/ct,distance:Te,aspect:we}}},performance:Object.assign(Object.assign({},ze),{regress:()=>{this.zone.runOutsideAngular(()=>{const re=this.get(Z=>Z.performance);this.performanceTimeoutId&&clearTimeout(this.performanceTimeoutId),re.current!==re.min&&this.set(Z=>({performance:Object.assign(Object.assign({},Z.performance),{current:re.min})})),this.performanceTimeoutId=setTimeout(()=>this.set(Z=>({performance:Object.assign(Object.assign({},Z.performance),{current:this.get(Ce=>Ce.performance.max)})})),re.debounce)})}}),previousState:null==Fe?void 0:Fe.get()})}init(ge,Ie,ze,Ne){this.initEvents(ge),this.resize(this.resizeResult$),this.updateDimensions(this.dimensions$),this.initRenderer({canvasElement:ge,rootStateMap:Ie,advance:Ne}),this.updateSubscribers(this.select(this.select(Fe=>Fe.internal.animations),this.select(Fe=>Fe.internal.priority),(Fe,Ze)=>({animations:Fe,priority:Ze}))),this.set(Fe=>({invalidate:()=>ze(()=>this.get()),advance:(Ze,ae)=>Ne(Ze,ae,()=>this.get()),internal:Object.assign(Object.assign({},Fe.internal),{active:!0})})),this.set(this.allConstructed$)}registerBeforeRender(ge){const Ie=ce.is.object3d(ge.obj)?ge.obj.uuid:ce.is.ref(ge.obj)?ge.obj.value.uuid:(0,Me.qR)();return this.registerBeforeRenderEffect(Object.assign(Object.assign({},ge),{uuid:Ie})),()=>{this.unregisterBeforeRender(Ie)}}unregisterBeforeRender(ge){if(!ge)return;const Ie=this.get(Fe=>Fe.internal.animations),ze=Ie.get(ge);Ie.delete(ge)&&ze&&this.set(Fe=>({internal:Object.assign(Object.assign({},Fe.internal),{animations:Ie,priority:Fe.internal.priority-((ze.priority||0)>0?1:0)})}))}addInteraction(ge){this.set(Ie=>Object.assign(Object.assign({},Ie),{internal:Object.assign(Object.assign({},Ie.internal),{interaction:[...Ie.internal.interaction,ge]})}))}removeInteraction(ge){this.set(Ie=>Object.assign(Object.assign({},Ie),{internal:Object.assign(Object.assign({},Ie.internal),{interaction:Ie.internal.interaction.filter(ze=>ze.uuid!==ge)})}))}initEvents(ge){const{handlePointer:Ie}=(0,Se.n)(()=>this.get());this.set(ze=>({events:Object.assign(Object.assign({},ze.events),{handlers:Object.keys(Ae).reduce((Ne,Fe)=>(Ne[Fe]=Ie(Fe),Ne),{})})})),this.connectElement(ge)}connectElement(ge){this.set(ze=>({events:Object.assign(Object.assign({},ze.events),{connected:ge})}));const Ie=this.get(ze=>ze.events.handlers);Object.entries(null!=Ie?Ie:{}).forEach(([ze,Ne])=>{ge.addEventListener(ze,Ne,{passive:Ae[ze]})})}disconnectElement(){const{handlers:ge,connected:Ie}=this.get(ze=>ze.events);Ie&&Object.entries(null!=ge?ge:{}).forEach(([ze,Ne])=>{Ie instanceof HTMLElement&&Ie.removeEventListener(ze,Ne)})}ngOnDestroy(){this.disconnectElement(),super.ngOnDestroy()}}return De.\u0275fac=function(ge){return new(ge||De)(Le.LFG(Le.SBq),Le.LFG(J.M),Le.LFG(S.m),Le.LFG(De,12),Le.LFG(B.I),Le.LFG(Le.R0b))},De.\u0275prov=Le.Yz7({token:De,factory:De.\u0275fac}),De})()},4427:(ft,Re,x)=>{x.d(Re,{Aw:()=>H,Dh:()=>O,FY:()=>Le,Rb:()=>F,cY:()=>W,cz:()=>z,e9:()=>S,fe:()=>Se,hD:()=>P,iq:()=>rt,jy:()=>Me,mK:()=>J,sN:()=>V,sV:()=>ke});var N=x(1858);const z=new N.OlP("NgtInstance ref"),H=new N.OlP("NgtInstance ref of the host of the wrapper"),O=new N.OlP("NgtObject ref"),W=new N.OlP("NgtObject ref of the host of the wrapper"),J=new N.OlP("Ref for root Camera"),S=new N.OlP("Ref for root Scene"),F=new N.OlP("NgtCommonAttribute ref"),P=(new N.OlP("NgtCommonAudio ref"),new N.OlP("NgtCommonCamera ref")),ke=(new N.OlP("NgtCommonCurve ref"),new N.OlP("NgtCommonGeometry ref")),Se=new N.OlP("NgtCommonHelper ref"),rt=new N.OlP("NgtCommonLight ref"),Me=(new N.OlP("NgtCommonLine ref"),new N.OlP("NgtCommonMaterial ref")),V=new N.OlP("NgtMaterialGeometry ref"),Le=new N.OlP("NgtCommonMesh ref");new N.OlP("NgtCommonObjectHelper ref"),new N.OlP("NgtCommonSprite ref"),new N.OlP("NgtCommonTexture ref"),new N.OlP("NgtSkinnedMesh ref as parent host"),new N.OlP("NgtBone ref as parent host"),new N.OlP("NgtSkeleton ref as parent host")},8394:(ft,Re,x)=>{x.d(Re,{n:()=>O});var N=x(6963),z=x(4852),H=x(6230);function O(W,J){var S;if(!Object.keys(J).length)return;const B=(W.__ngt__||{}).root,P=null!==(S=null==B?void 0:B())&&void 0!==S?S:{};"__ngt__"in J&&(W.__ngt__=J.__ngt__);for(const L of Object.entries(J)){const ke=L[0];let Se=L[1];if("raycast"===ke&&null==Se)continue;H.is.ref(Se)&&(Se=Se.value);const rt=W,ce=rt[ke];if(ce&&ce.set&&(ce.copy||ce instanceof N.S9g)){if(H.is.arr(Se))ce.fromArray?ce.fromArray(Se):ce.set(...Se);else if(ce.copy&&Se&&Se.constructor&&ce.constructor.name===Se.constructor.name)ce.copy(Se);else if(void 0!==Se){const Me=ce instanceof N.Ilk;!Me&&ce.setScalar?ce.setScalar(Se):ce instanceof N.S9g&&Se instanceof N.S9g?ce.mask=Se.mask:ce.set(Se),!N.epp&&!P.linear&&Me&&ce.convertSRGBToLinear()}}else rt[ke]=Se,!P.linear&&rt[ke]instanceof N.xEZ&&(rt[ke].encoding=N.knz);(0,z.Q)(Se),(0,z.Q)(ce)}}},1168:(ft,Re,x)=>{x.d(Re,{H:()=>H,W:()=>O});var N=x(6963),z=x(6230);function H(W,J,S){z.is.camera(W)||J.manual||(z.is.orthographic(J)?(J.left=S.width/-2,J.right=S.width/2,J.top=S.height/2,J.bottom=S.height/-2):J.aspect=S.width/S.height,J.updateProjectionMatrix(),J.updateMatrixWorld())}function O(W){return W.orthographic?new N.iKG(0,0,0,0,.1,1e3):new N.cPb(75,W.size.width/W.size.height,.1,1e3)}},4852:(ft,Re,x)=>{function N(z){null!==z&&"object"==typeof z&&"needsUpdate"in z&&(z.needsUpdate=!0,"uniformsNeedUpdate"in z&&(z.uniformsNeedUpdate=!0))}x.d(Re,{Q:()=>N})},969:(ft,Re,x)=>{function N(O){return null!=O&&"false"!=`${O}`}function z(O,W=0){return function H(O){return!isNaN(parseFloat(O))&&!isNaN(Number(O))}(O)?Number(O):W}x.d(Re,{I:()=>N,s:()=>z})},1527:(ft,Re,x)=>{x.d(Re,{M:()=>W,n:()=>J});var N=x(6963),z=x(4987),H=x(9319);function O(S,F,B,P){const L=B.get(F);L&&(B.delete(F),0===B.size&&(S.delete(P),L.target.releasePointerCapture(P)))}function W(S,F){const B=S().internal;B.interaction=B.interaction.filter(P=>P!==F),B.initialHits=B.initialHits.filter(P=>P!==F),B.hovered.forEach((P,L)=>{(P.eventObject===F||P.object===F)&&B.hovered.delete(L)}),B.capturedMap.forEach((P,L)=>{O(B.capturedMap,F,P,L)})}function J(S){const F=new N.Pa4;function P(Me){return Me.filter(V=>["move","over","enter","out","leave"].some(Le=>{var Ae,Oe;return null===(Oe=null===(Ae=V.__ngt__)||void 0===Ae?void 0:Ae.handlers)||void 0===Oe?void 0:Oe["pointer"+Le]}))}function Se(Me){const V=S().internal;Array.from(V.hovered.values()).forEach(Le=>{var Ae,Oe;if(!Me.length||!Me.find(oe=>oe.object===Le.object&&oe.index===Le.index&&oe.instanceId===Le.instanceId)){const De=Le.eventObject.__ngt__,j=null==De?void 0:De.handlers;if(V.hovered.delete((0,H.qR)(Le)),null==De?void 0:De.eventCount){const ge=Object.assign(Object.assign({},Le),{intersections:Me||[]});null===(Ae=j.pointerout)||void 0===Ae||Ae.call(j,ge),null===(Oe=j.pointerleave)||void 0===Oe||Oe.call(j,ge)}}})}function ce(Me,V){V.forEach(Le=>{var Ae,Oe,oe;return null===(oe=null===(Oe=null===(Ae=Le.__ngt__)||void 0===Ae?void 0:Ae.handlers)||void 0===Oe?void 0:Oe.pointermissed)||void 0===oe?void 0:oe.call(Oe,Me)})}return{handlePointer:Me=>{switch(Me){case"pointerleave":case"pointercancel":return()=>Se([]);case"lostpointercapture":return V=>{const Le=S().internal;"pointerId"in V&&!Le.capturedMap.has(V.pointerId)&&(Le.capturedMap.delete(V.pointerId),Se([]))}}return V=>{const{pointerMissed:Le,internal:Ae}=S();Ae.lastEvent=V;const Oe="pointermove"===Me,oe="click"===Me||"contextmenu"===Me||"dblclick"===Me,j=function L(Me,V){var Le,Ae,Oe;const oe=S(),De=new Set,j=[],ge=V?V(oe.internal.interaction):oe.internal.interaction;ge.forEach(ze=>{const Ne=(0,z.m)(ze);Ne&&(Ne.raycaster.camera=void 0)}),oe.previousState||null===(Ae=(Le=oe.events).compute)||void 0===Ae||Ae.call(Le,Me,oe);let Ie=ge.flatMap(ze=>{var Ne,Fe;const Ze=(0,z.m)(ze);return Ze&&Ze.events.enabled&&null!==Ze.raycaster.camera?(void 0===Ze.raycaster.camera&&(null===(Fe=(Ne=Ze.events).compute)||void 0===Fe||Fe.call(Ne,Me,Ze,Ze.previousState),void 0===Ze.raycaster.camera&&(Ze.raycaster.camera=null)),Ze.raycaster.camera?Ze.raycaster.intersectObject(ze,!0):[]):[]}).sort((ze,Ne)=>{const Fe=(0,z.m)(ze.object),Ze=(0,z.m)(Ne.object);return Fe&&Ze?Ze.events.priority-Fe.events.priority||ze.distance-Ne.distance:0}).filter(ze=>{const Ne=(0,H.qR)(ze);return!De.has(Ne)&&(De.add(Ne),!0)});oe.events.filter&&(Ie=oe.events.filter(Ie,oe));for(const ze of Ie){let Ne=ze.object;for(;Ne;)(null===(Oe=Ne.__ngt__)||void 0===Oe?void 0:Oe.eventCount)&&j.push(Object.assign(Object.assign({},ze),{eventObject:Ne})),Ne=Ne.parent}if("pointerId"in Me&&oe.internal.capturedMap.has(Me.pointerId))for(const ze of oe.internal.capturedMap.get(Me.pointerId).values())j.push(ze.intersection);return j}(V,Oe?P:void 0),ge=oe?function B(Me){const V=S().internal,Le=Me.offsetX-V.initialClick[0],Ae=Me.offsetY-V.initialClick[1];return Math.round(Math.sqrt(Le*Le+Ae*Ae))}(V):0;"pointerdown"===Me&&(Ae.initialClick=[V.offsetX,V.offsetY],Ae.initialHits=j.map(Ie=>Ie.eventObject)),oe&&!j.length&&ge<=2&&(ce(V,Ae.interaction),Le&&Le(V)),Oe&&Se(j),function ke(Me,V,Le,Ae){const{raycaster:Oe,pointer:oe,camera:De,internal:j}=S();if(Me.length){const ge=F.set(oe.x,oe.y,0).unproject(De),Ie={stopped:!1};for(const ze of Me){const Ne=Z=>{var Ce,he;return null!==(he=null===(Ce=j.capturedMap.get(Z))||void 0===Ce?void 0:Ce.has(ze.eventObject))&&void 0!==he&&he},Fe=Z=>{const Ce={intersection:ze,target:V.target};j.capturedMap.has(Z)?j.capturedMap.get(Z).set(ze.eventObject,Ce):j.capturedMap.set(Z,new Map([[ze.eventObject,Ce]])),V.target.setPointerCapture(Z)},Ze=Z=>{const Ce=j.capturedMap.get(Z);Ce&&O(j.capturedMap,ze.eventObject,Ce,Z)},ae={};for(const Z in V){const Ce=V[Z];"function"!=typeof Ce&&(ae[Z]=Ce)}const re=Object.assign(Object.assign(Object.assign({},ze),ae),{pointer:oe,intersections:Me,stopped:Ie.stopped,delta:Le,unprojectedPoint:ge,ray:Oe.ray,camera:De,stopPropagation:()=>{const Z="pointerId"in V&&j.capturedMap.get(V.pointerId);(!Z||Z.has(ze.eventObject))&&(re.stopped=Ie.stopped=!0,j.hovered.size&&Array.from(j.hovered.values()).find(Ce=>Ce.eventObject===ze.eventObject))&&Se([...Me.slice(0,Me.indexOf(ze)),ze])},target:{hasPointerCapture:Ne,setPointerCapture:Fe,releasePointerCapture:Ze},currentTarget:{hasPointerCapture:Ne,setPointerCapture:Fe,releasePointerCapture:Ze},nativeEvent:V});if(Ae(re),!0===Ie.stopped)break}}}(j,V,ge,Ie=>{var ze,Ne,Fe;const Ze=Ie.eventObject,ae=Ze.__ngt__,re=null==ae?void 0:ae.handlers;if(null==ae?void 0:ae.eventCount)if(Oe){if(re.pointerover||re.pointerenter||re.pointerout||re.pointerleave){const Z=(0,H.qR)(Ie),Ce=Ae.hovered.get(Z);Ce?Ce.stopped&&Ie.stopPropagation():(Ae.hovered.set(Z,Ie),null===(ze=re.pointerover)||void 0===ze||ze.call(re,Ie),null===(Ne=re.pointerenter)||void 0===Ne||Ne.call(re,Ie))}null===(Fe=re.pointermove)||void 0===Fe||Fe.call(re,Ie)}else{const Z=re[Me];Z?(!oe||Ae.initialHits.includes(Ze))&&(ce(V,Ae.interaction.filter(Ce=>!Ae.initialHits.includes(Ce))),Z(Ie)):oe&&Ae.initialHits.includes(Ze)&&ce(V,Ae.interaction.filter(Ce=>!Ae.initialHits.includes(Ce)))}})}}}}},4987:(ft,Re,x)=>{x.d(Re,{P:()=>W,m:()=>O});var N=x(8458),z=x(8394),H=x(6230);const O=J=>{var S;return null===(S=J.__ngt__)||void 0===S?void 0:S.root()};function W(J,S,F,B,P=!1){var L,ke,Se,rt,ce,Me,V,Le,Ae,Oe,oe,De,j;const ge=F||(B?null===(ke=null===(L=B.value)||void 0===L?void 0:L.__ngt__)||void 0===ke?void 0:ke.parent:void 0);return H.is.scene(J)&&(0,z.n)(J,{dispose:null}),Object.assign(J,{__ngt__:{root:S,primitive:P||(null===(rt=null===(Se=null==B?void 0:B.value)||void 0===Se?void 0:Se.__ngt__)||void 0===rt?void 0:rt.primitive),eventCount:null!==(V=null===(Me=null===(ce=null==B?void 0:B.value)||void 0===ce?void 0:ce.__ngt__)||void 0===Me?void 0:Me.eventCount)&&void 0!==V?V:0,handlers:null!==(Oe=null===(Ae=null===(Le=null==B?void 0:B.value)||void 0===Le?void 0:Le.__ngt__)||void 0===Ae?void 0:Ae.handlers)&&void 0!==Oe?Oe:{},objects:null!==(j=null===(De=null===(oe=null==B?void 0:B.value)||void 0===oe?void 0:oe.__ngt__)||void 0===De?void 0:De.objects)&&void 0!==j?j:new N.R([]),parent:ge?ge===J?null:ge:null}})}},6230:(ft,Re,x)=>{x.d(Re,{is:()=>H});var N=x(6963),z=x(8458);const H={obj:O=>O===Object(O)&&!H.arr(O)&&"function"!=typeof O,material:O=>!!O&&O.isMaterial,geometry:O=>!!O&&O.isBufferGeometry,orthographic:O=>!!O&&O.isOrthographicCamera,perspective:O=>!!O&&O.isPerspectiveCamera,camera:O=>!!O&&O.isCamera,glRenderer:O=>!!O&&O instanceof N.CP7,scene:O=>!!O&&O.isScene,object3d:O=>!!O&&O.isObject3D,instance:O=>!!O&&!!O.__ngt__,ref:O=>!!O&&O instanceof z.R,vector3:O=>!!O&&O.isVector3,color:O=>!!O&&O.isColor,fun:O=>"function"==typeof O,str:O=>"string"==typeof O,num:O=>"number"==typeof O,boo:O=>"boolean"==typeof O,und:O=>void 0===O,arr:O=>Array.isArray(O),equ(O,W,{arrays:J="shallow",objects:S="reference",strict:F=!0}={}){if(typeof O!=typeof W||!!O!=!!W)return!1;if(H.str(O)||H.num(O))return O===W;const B=H.obj(O);if(B&&"reference"===S)return O===W;const P=H.arr(O);if(P&&"reference"===J)return O===W;if((P||B)&&O===W)return!0;let L;for(L in O)if(!(L in W))return!1;for(L in F?W:O)if(O[L]!==W[L])return!1;if(H.und(L)){if(P&&0===O.length&&0===W.length||B&&0===Object.keys(O).length&&0===Object.keys(W).length)return!0;if(O!==W)return!1}return!0}}},4714:(ft,Re,x)=>{x.d(Re,{WC:()=>F,ip:()=>L,ll:()=>S});var N=x(6230);const z=[],H=[],O=[];function W(ke,Se){const rt=Se.length;return Se.push(ke),()=>{Se.splice(rt,1)}}function J(ke,Se){for(let rt=0,ce=ke.length;rt<ce;rt++)ke[rt](Se)}function S(ke){return W(ke,z)}function F(ke){return W(ke,H)}function P(ke,Se,rt){const ce=Se();let Me=ce.clock.getDelta();"never"===ce.frameloop&&"number"==typeof ke&&(Me=ke-ce.clock.elapsedTime,ce.clock.oldTime=ce.clock.elapsedTime,ce.clock.elapsedTime=ke);for(const V of ce.internal.subscribers){const Le=N.is.ref(V.obj)?V.obj.value:V.obj;V.callback(Object.assign(Object.assign({},ce),{delta:Me,frame:rt}),Le)}return!ce.internal.priority&&ce.gl.render&&ce.gl.render(ce.scene,ce.camera),ce.internal.frames=Math.max(0,ce.internal.frames-1),"always"===ce.frameloop?1:ce.internal.frames}function L(ke){let rt,ce,Me,Se=!1;function V(Oe){if(ce=requestAnimationFrame(V),Se=!0,rt=0,z.length&&J(z,Oe),ke.forEach(oe=>{var De;Me=oe(),Me.internal.active&&("always"===Me.frameloop||Me.internal.frames>0)&&!(null===(De=Me.gl.xr)||void 0===De?void 0:De.isPresenting)&&(rt+=P(Oe,oe))}),H.length&&J(H,Oe),0===rt)return O.length&&J(O,Oe),Se=!1,cancelAnimationFrame(ce)}return{loop:V,advance:function Ae(Oe,oe=!0,De,j){oe&&J(z,Oe);const ge=null==De?void 0:De();ge?P(Oe,()=>ge,j):ke.forEach(Ie=>P(Oe,Ie)),oe&&J(H,Oe)},invalidate:function Le(Oe){var oe;const De=null==Oe?void 0:Oe();if(!De)return ke.forEach(j=>Le(j));(null===(oe=De.gl.xr)||void 0===oe?void 0:oe.isPresenting)||!De.internal.active||"never"===De.frameloop||(De.internal.frames=Math.min(60,De.internal.frames+1),Se||(Se=!0,requestAnimationFrame(V)))}}}},9319:(ft,Re,x)=>{x.d(Re,{CE:()=>F,EH:()=>S,NO:()=>O,Sy:()=>J,jS:()=>H,qR:()=>P});var N=x(6963),z=x(6230);function H(L){return L?L instanceof N.FM8?L:z.is.arr(L)?new N.FM8(...L):new N.FM8(L,L):new N.FM8}function O(L){return L?L instanceof N.Pa4?L:z.is.arr(L)?new N.Pa4(...L):new N.Pa4(L,L,L):new N.Pa4}function J(L,ke){return ke?ke instanceof L?ke:new L(...ke):new L}function S(L){return L?L instanceof N.Ilk?L:z.is.arr(L)?new N.Ilk(...L):new N.Ilk(L):new N.Ilk}function F(L){return z.is.arr(L)?Math.min(Math.max(L[0],window.devicePixelRatio),L[1]):L}const B={};function P(L){if(L)return(L.eventObject||L.object).uuid+"/"+L.index+L.instanceId;const ke=N.M8C.generateUUID();return B[ke]?P():(B[ke]=!0,ke)}},6915:(ft,Re,x)=>{x.d(Re,{t:()=>H});var N=x(5654),z=x(5257);class H extends N.x{constructor(W=1/0,J=1/0,S=z.l){super(),this._bufferSize=W,this._windowTime=J,this._timestampProvider=S,this._buffer=[],this._infiniteTimeWindow=!0,this._infiniteTimeWindow=J===1/0,this._bufferSize=Math.max(1,W),this._windowTime=Math.max(1,J)}next(W){const{isStopped:J,_buffer:S,_infiniteTimeWindow:F,_timestampProvider:B,_windowTime:P}=this;J||(S.push(W),!F&&S.push(B.now()+P)),this._trimBuffer(),super.next(W)}_subscribe(W){this._throwIfClosed(),this._trimBuffer();const J=this._innerSubscribe(W),{_infiniteTimeWindow:S,_buffer:F}=this,B=F.slice();for(let P=0;P<B.length&&!W.closed;P+=S?1:2)W.next(B[P]);return this._checkFinalizedStatuses(W),J}_trimBuffer(){const{_bufferSize:W,_timestampProvider:J,_buffer:S,_infiniteTimeWindow:F}=this,B=(F?1:2)*W;if(W<1/0&&B<S.length&&S.splice(0,S.length-B),!F){const P=J.now();let L=0;for(let ke=1;ke<S.length&&S[ke]<=P;ke+=2)L=ke;L&&S.splice(0,L+1)}}}},8289:(ft,Re,x)=>{x.d(Re,{H:()=>W});var N=x(4065),z=x(1150),H=x(4257);function W(J=0,S,F=z.P){let B=-1;return null!=S&&((0,H.K)(S)?F=S:B=S),new N.y(P=>{let L=function O(J){return J instanceof Date&&!isNaN(J)}(J)?+J-F.now():J;L<0&&(L=0);let ke=0;return F.schedule(function(){P.closed||(P.next(ke++),0<=B?this.schedule(void 0,B):P.complete())},L)})}},3255:(ft,Re,x)=>{x.d(Re,{R:()=>W});var N=x(1853),z=x(579),H=x(3673),O=x(6805);function W(J){return(0,N.e)((S,F)=>{(0,H.Xf)(J).subscribe((0,z.x)(F,()=>F.complete(),O.Z)),!F.closed&&S.subscribe(F)})}},8412:(ft,Re,x)=>{x.d(Re,{M:()=>S});var N=x(1853),z=x(579),H=x(3673),O=x(6349),W=x(6805),J=x(7053);function S(...F){const B=(0,J.jO)(F);return(0,N.e)((P,L)=>{const ke=F.length,Se=new Array(ke);let rt=F.map(()=>!1),ce=!1;for(let Me=0;Me<ke;Me++)(0,H.Xf)(F[Me]).subscribe((0,z.x)(L,V=>{Se[Me]=V,!ce&&!rt[Me]&&(rt[Me]=!0,(ce=rt.every(O.y))&&(rt=null))},W.Z));P.subscribe((0,z.x)(L,Me=>{if(ce){const V=[Me,...Se];L.next(B?B(...V):V)}}))})}},8372:(ft,Re,x)=>{x.d(Re,{o:()=>W});var N=x(2094);class z extends N.w0{constructor(S,F){super()}schedule(S,F=0){return this}}const H={setInterval(J,S,...F){const{delegate:B}=H;return(null==B?void 0:B.setInterval)?B.setInterval(J,S,...F):setInterval(J,S,...F)},clearInterval(J){const{delegate:S}=H;return((null==S?void 0:S.clearInterval)||clearInterval)(J)},delegate:void 0};var O=x(7593);class W extends z{constructor(S,F){super(S,F),this.scheduler=S,this.work=F,this.pending=!1}schedule(S,F=0){if(this.closed)return this;this.state=S;const B=this.id,P=this.scheduler;return null!=B&&(this.id=this.recycleAsyncId(P,B,F)),this.pending=!0,this.delay=F,this.id=this.id||this.requestAsyncId(P,this.id,F),this}requestAsyncId(S,F,B=0){return H.setInterval(S.flush.bind(S,this),B)}recycleAsyncId(S,F,B=0){if(null!=B&&this.delay===B&&!1===this.pending)return F;H.clearInterval(F)}execute(S,F){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const B=this._execute(S,F);if(B)return B;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(S,F){let P,B=!1;try{this.work(S)}catch(L){B=!0,P=L||new Error("Scheduled action threw falsy error")}if(B)return this.unsubscribe(),P}unsubscribe(){if(!this.closed){const{id:S,scheduler:F}=this,{actions:B}=F;this.work=this.state=this.scheduler=null,this.pending=!1,(0,O.P)(B,this),null!=S&&(this.id=this.recycleAsyncId(F,S,null)),this.delay=null,super.unsubscribe()}}}},4493:(ft,Re,x)=>{x.d(Re,{v:()=>H});var N=x(5257);class z{constructor(W,J=z.now){this.schedulerActionCtor=W,this.now=J}schedule(W,J=0,S){return new this.schedulerActionCtor(this,W).schedule(S,J)}}z.now=N.l.now;class H extends z{constructor(W,J=z.now){super(W,J),this.actions=[],this._active=!1,this._scheduled=void 0}flush(W){const{actions:J}=this;if(this._active)return void J.push(W);let S;this._active=!0;do{if(S=W.execute(W.state,W.delay))break}while(W=J.shift());if(this._active=!1,S){for(;W=J.shift();)W.unsubscribe();throw S}}}},1150:(ft,Re,x)=>{x.d(Re,{P:()=>O,z:()=>H});var N=x(8372);const H=new(x(4493).v)(N.o),O=H},5257:(ft,Re,x)=>{x.d(Re,{l:()=>N});const N={now:()=>(N.delegate||Date).now(),delegate:void 0}},1375:(ft,Re,x)=>{x.d(Re,{b:()=>H});var N=x(4065),z=x(6020);function H(O){return!!O&&(O instanceof N.y||(0,z.m)(O.lift)&&(0,z.m)(O.subscribe))}},6963:(ft,Re,x)=>{function N(o,e,t,n,i,s,r){try{var a=o[s](r),l=a.value}catch(c){return void t(c)}a.done?e(l):Promise.resolve(l).then(n,i)}x.d(Re,{LY2:()=>nr,Mig:()=>Jh,m7l:()=>Ir,_Li:()=>ce,z81:()=>Yl,N$j:()=>gl,ZzF:()=>Xi,DvJ:()=>Ri,TlE:()=>ln,u9r:()=>At,V1s:()=>Co,ROQ:()=>dg,uWy:()=>mn,SUY:()=>su,Ilk:()=>tt,epp:()=>Fn,b_z:()=>Sr,_am:()=>_c,fY$:()=>Un,cBK:()=>s0,fHI:()=>ss,IEO:()=>Ws,zob:()=>F0,yxD:()=>r0,A5E:()=>O0,tEQ:()=>Vh,brP:()=>ui,$YQ:()=>Kc,Ox3:()=>Yh,ehD:()=>Me,dj0:()=>Du,dSO:()=>li,USm:()=>ac,pBf:()=>Gi,hH6:()=>yi,a$l:()=>ot,VzW:()=>en,ybr:()=>No,Wl3:()=>rt,VLJ:()=>D0,ZAu:()=>Bs,cLu:()=>gn,vmT:()=>Wh,cJO:()=>Ar,QRU:()=>m0,lb7:()=>Gs,L5s:()=>qh,SPe:()=>uh,vpT:()=>pl,kB5:()=>ts,_C8:()=>Pr,Syv:()=>ar,NMF:()=>lr,z8B:()=>nh,S9g:()=>vo,x12:()=>ns,nls:()=>En,blk:()=>vh,ejS:()=>Go,rnI:()=>bi,wem:()=>Yt,D1R:()=>ci,qyh:()=>ms,aNw:()=>rs,Zp0:()=>Ol,lLk:()=>Rl,Y8D:()=>Br,RsA:()=>O,F5T:()=>un,M8C:()=>Yu,Vkp:()=>Nn,yGw:()=>Tt,Kj0:()=>xn,vBJ:()=>Ai,lRF:()=>hl,Lun:()=>ul,YBo:()=>zh,RSm:()=>Bh,xoR:()=>Fh,EJi:()=>Nh,Wid:()=>Ll,OoA:()=>Ui,TyD:()=>Qt,aH4:()=>ps,YLQ:()=>fs,jFi:()=>Ae,uL9:()=>Bt,dUE:()=>Lr,Tme:()=>Jt,iKG:()=>Ro,ntZ:()=>ke,cPb:()=>_n,BKK:()=>qi,_12:()=>qi,cek:()=>Kh,woe:()=>xh,UY4:()=>_l,iUV:()=>Ht,_fP:()=>Pn,iLg:()=>Ks,UZH:()=>H,mSO:()=>Jl,wk1:()=>Mn,av9:()=>Ur,iMs:()=>L0,T_f:()=>Zh,hEm:()=>zr,rpg:()=>ds,xsS:()=>Jc,WdD:()=>Pt,jyz:()=>qn,Tn7:()=>Oh,OdW:()=>ko,TUv:()=>ah,aLr:()=>Ji,xo$:()=>Xs,$V:()=>R0,PMe:()=>Xh,QmN:()=>W,IOt:()=>Vi,xEZ:()=>Gn,dpR:()=>o0,z$h:()=>Lu,UlW:()=>Pu,xfE:()=>Bi,xWb:()=>Bl,rBU:()=>$e,rDY:()=>vc,ywz:()=>K,wJv:()=>Vn,JQ4:()=>fe,FM8:()=>Ee,Pa4:()=>A,Ltg:()=>Vt,yC1:()=>Rr,oAp:()=>xc,p7A:()=>N0,dd2:()=>Zn,CP7:()=>Yc,knz:()=>Xt});const H="141",O={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},W={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ke=2,rt=0,ce=1,Me=2,Ae=0,Bt=0,nr=4,Bi=300,Un=301,li=303,ds=1e3,mn=1001,Ui=1002,Qt=1003,fs=1004,ps=1005,Yt=1006,ms=1007,ci=1008,K=1009,fe=1014,en=1015,gn=1016,Vn=1020,Mn=1023,Br=1024,hi=1026,ui=1027,zr=1028,Ur=1030,ar=2300,lr=2301,Pu=1,Lu=2,bi=3e3,Xt=3001,Yl=3200,Jl=3201,Vi=0,di="srgb",Wi="srgb-linear",Du=35048;class Gi{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const s=i.indexOf(t);-1!==s&&i.splice(s,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const n=this._listeners[e.type];if(void 0!==n){e.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}}const vn=[];for(let o=0;o<256;o++)vn[o]=(o<16?"0":"")+o.toString(16);let ql=1234567;const Hi=Math.PI/180,cr=180/Math.PI;function In(){const o=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(vn[255&o]+vn[o>>8&255]+vn[o>>16&255]+vn[o>>24&255]+"-"+vn[255&e]+vn[e>>8&255]+"-"+vn[e>>16&15|64]+vn[e>>24&255]+"-"+vn[63&t|128]+vn[t>>8&255]+"-"+vn[t>>16&255]+vn[t>>24&255]+vn[255&n]+vn[n>>8&255]+vn[n>>16&255]+vn[n>>24&255]).toLowerCase()}function sn(o,e,t){return Math.max(e,Math.min(t,o))}function Ia(o,e){return(o%e+e)%e}function hr(o,e,t){return(1-t)*o+t*e}function Da(o){return 0==(o&o-1)&&0!==o}function Ql(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function ro(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}var Yu=Object.freeze({__proto__:null,DEG2RAD:Hi,RAD2DEG:cr,generateUUID:In,clamp:sn,euclideanModulo:Ia,mapLinear:function Ou(o,e,t,n,i){return n+(o-e)*(i-n)/(t-e)},inverseLerp:function Nu(o,e,t){return o!==e?(t-o)/(e-o):0},lerp:hr,damp:function Fu(o,e,t,n){return hr(o,e,1-Math.exp(-t*n))},pingpong:function Bu(o,e=1){return e-Math.abs(Ia(o,2*e)-e)},smoothstep:function zu(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e))*o*(3-2*o)},smootherstep:function Uu(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e))*o*o*(o*(6*o-15)+10)},randInt:function ku(o,e){return o+Math.floor(Math.random()*(e-o+1))},randFloat:function Vu(o,e){return o+Math.random()*(e-o)},randFloatSpread:function Wu(o){return o*(.5-Math.random())},seededRandom:function Gu(o){void 0!==o&&(ql=o);let e=ql+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function Hu(o){return o*Hi},radToDeg:function ju(o){return o*cr},isPowerOfTwo:Da,ceilPowerOfTwo:Ql,floorPowerOfTwo:ro,setQuaternionFromProperEuler:function Xu(o,e,t,n,i){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+n)/2),h=r((e+n)/2),u=s((e-n)/2),d=r((e-n)/2),f=s((n-e)/2),g=r((n-e)/2);switch(i){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*g,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*g,a*c);break;case"ZYZ":o.set(l*g,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:function Ku(o,e){switch(e.constructor){case Float32Array:return o;case Uint16Array:return Math.round(65535*o);case Uint8Array:return Math.round(255*o);case Int16Array:return Math.round(32767*o);case Int8Array:return Math.round(127*o);default:throw new Error("Invalid component type.")}},denormalize:function $u(o,e){switch(e.constructor){case Float32Array:return o;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}});class Ee{constructor(e=0,t=0){this.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Nn{constructor(){this.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=n,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],g=n[8],m=i[0],p=i[3],v=i[6],_=i[1],b=i[4],y=i[7],T=i[2],R=i[5],U=i[8];return s[0]=r*m+a*_+l*T,s[3]=r*p+a*b+l*R,s[6]=r*v+a*y+l*U,s[1]=c*m+h*_+u*T,s[4]=c*p+h*b+u*R,s[7]=c*v+h*y+u*U,s[2]=d*m+f*_+g*T,s[5]=d*p+f*b+g*R,s[8]=d*v+f*y+g*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-n*s*h+n*a*l+i*s*c-i*r*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,g=t*u+n*d+i*f;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const m=1/g;return e[0]=u*m,e[1]=(i*c-h*n)*m,e[2]=(a*n-i*r)*m,e[3]=d*m,e[4]=(h*t-i*l)*m,e[5]=(i*s-a*t)*m,e[6]=f*m,e[7]=(n*l-c*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*r+c*a)+r+e,-i*c,i*l,-i*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],r=i[3],a=i[6],l=i[1],c=i[4],h=i[7];return i[0]=t*s+n*l,i[3]=t*r+n*c,i[6]=t*a+n*h,i[1]=-n*s+t*l,i[4]=-n*r+t*c,i[7]=-n*a+t*h,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function ec(o){for(let e=o.length-1;e>=0;--e)if(o[e]>65535)return!0;return!1}function ur(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function ji(o){return o<.04045?.0773993808*o:Math.pow(.9478672986*o+.0521327014,2.4)}function oo(o){return o<.0031308?12.92*o:1.055*Math.pow(o,.41666)-.055}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Oa={[di]:{[Wi]:ji},[Wi]:{[di]:oo}},Fn={legacyMode:!0,get workingColorSpace(){return Wi},set workingColorSpace(o){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(o,e,t){if(this.legacyMode||e===t||!e||!t)return o;if(Oa[e]&&void 0!==Oa[e][t]){const n=Oa[e][t];return o.r=n(o.r),o.g=n(o.g),o.b=n(o.b),o}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(o,e){return this.convert(o,this.workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this.workingColorSpace)}},tc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},hn={r:0,g:0,b:0},Wn={h:0,s:0,l:0},ao={h:0,s:0,l:0};function Na(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+6*(e-o)*t:t<.5?e:t<2/3?o+6*(e-o)*(2/3-t):o}function lo(o,e){return e.r=o.r,e.g=o.g,e.b=o.b,e}let xs,tt=(()=>{class o{constructor(t,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,n=di){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Fn.toWorkingColorSpace(this,n),this}setRGB(t,n,i,s=Wi){return this.r=t,this.g=n,this.b=i,Fn.toWorkingColorSpace(this,s),this}setHSL(t,n,i,s=Wi){if(t=Ia(t,1),n=sn(n,0,1),i=sn(i,0,1),0===n)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,a=2*i-r;this.r=Na(a,r,t+1/3),this.g=Na(a,r,t),this.b=Na(a,r,t-1/3)}return Fn.toWorkingColorSpace(this,s),this}setStyle(t,n=di){function i(r){void 0!==r&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const l=s[2];switch(s[1]){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Fn.toWorkingColorSpace(this,n),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Fn.toWorkingColorSpace(this,n),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l)){const c=parseFloat(r[1])/360,h=parseInt(r[2],10)/100,u=parseInt(r[3],10)/100;return i(r[4]),this.setHSL(c,h,u,n)}}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],a=r.length;if(3===a)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Fn.toWorkingColorSpace(this,n),this;if(6===a)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Fn.toWorkingColorSpace(this,n),this}return t&&t.length>0?this.setColorName(t,n):this}setColorName(t,n=di){const i=tc[t.toLowerCase()];return void 0!==i?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ji(t.r),this.g=ji(t.g),this.b=ji(t.b),this}copyLinearToSRGB(t){return this.r=oo(t.r),this.g=oo(t.g),this.b=oo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=di){return Fn.fromWorkingColorSpace(lo(this,hn),t),sn(255*hn.r,0,255)<<16^sn(255*hn.g,0,255)<<8^sn(255*hn.b,0,255)<<0}getHexString(t=di){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,n=Wi){Fn.fromWorkingColorSpace(lo(this,hn),n);const i=hn.r,s=hn.g,r=hn.b,a=Math.max(i,s,r),l=Math.min(i,s,r);let c,h;const u=(l+a)/2;if(l===a)c=0,h=0;else{const d=a-l;switch(h=u<=.5?d/(a+l):d/(2-a-l),a){case i:c=(s-r)/d+(s<r?6:0);break;case s:c=(r-i)/d+2;break;case r:c=(i-s)/d+4}c/=6}return t.h=c,t.s=h,t.l=u,t}getRGB(t,n=Wi){return Fn.fromWorkingColorSpace(lo(this,hn),n),t.r=hn.r,t.g=hn.g,t.b=hn.b,t}getStyle(t=di){return Fn.fromWorkingColorSpace(lo(this,hn),t),t!==di?`color(${t} ${hn.r} ${hn.g} ${hn.b})`:`rgb(${255*hn.r|0},${255*hn.g|0},${255*hn.b|0})`}offsetHSL(t,n,i){return this.getHSL(Wn),Wn.h+=t,Wn.s+=n,Wn.l+=i,this.setHSL(Wn.h,Wn.s,Wn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Wn),t.getHSL(ao);const i=hr(Wn.h,ao.h,n),s=hr(Wn.s,ao.s,n),r=hr(Wn.l,ao.l,n);return this.setHSL(i,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}return o.NAMES=tc,o})();class nc{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===xs&&(xs=ur("canvas")),xs.width=e.width,xs.height=e.height;const n=xs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=xs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=ur("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=255*ji(s[r]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t[n]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?Math.floor(255*ji(t[n]/255)):ji(t[n]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ys{constructor(e=null){this.isSource=!0,this.uuid=In(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let s;if(Array.isArray(i)){s=[];for(let r=0,a=i.length;r<a;r++)s.push(Fa(i[r].isDataTexture?i[r].image:i[r]))}else s=Fa(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Fa(o){return"undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&o instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&o instanceof ImageBitmap?nc.getDataURL(o):o.data?{data:Array.prototype.slice.call(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Zu=0,Gn=(()=>{class o extends Gi{constructor(t=o.DEFAULT_IMAGE,n=o.DEFAULT_MAPPING,i=mn,s=mn,r=Yt,a=ci,l=Mn,c=K,h=1,u=bi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Zu++}),this.uuid=In(),this.name="",this.source=new ys(t),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=c,this.offset=new Ee(0,0),this.repeat=new Ee(1,1),this.center=new Ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const n=void 0===t||"string"==typeof t;if(!n&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Bi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ds:t.x=t.x-Math.floor(t.x);break;case mn:t.x=t.x<0?0:1;break;case Ui:t.x=1===Math.abs(Math.floor(t.x)%2)?Math.ceil(t.x)-t.x:t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ds:t.y=t.y-Math.floor(t.y);break;case mn:t.y=t.y<0?0:1;break;case Ui:t.y=1===Math.abs(Math.floor(t.y)%2)?Math.ceil(t.y)-t.y:t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}return o.DEFAULT_IMAGE=null,o.DEFAULT_MAPPING=Bi,o})();class Vt{constructor(e=0,t=0,n=0,i=1){this.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],g=l[9],m=l[2],p=l[6],v=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-m)<.01&&Math.abs(g-p)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+m)<.1&&Math.abs(g+p)<.1&&Math.abs(c+f+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(c+1)/2,y=(f+1)/2,T=(v+1)/2,R=(h+d)/4,U=(u+m)/4,M=(g+p)/4;return b>y&&b>T?b<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(b),i=R/n,s=U/n):y>T?y<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(y),n=R/i,s=M/i):T<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(T),n=U/s,i=M/s),this.set(n,i,s,t),this}let _=Math.sqrt((p-g)*(p-g)+(u-m)*(u-m)+(d-h)*(d-h));return Math.abs(_)<.001&&(_=1),this.x=(p-g)/_,this.y=(u-m)/_,this.z=(d-h)/_,this.w=Math.acos((c+f+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zn extends Gi{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Vt(0,0,e,t),this.scissorTest=!1,this.viewport=new Vt(0,0,e,t),this.texture=new Gn({width:e,height:t,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Yt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ys(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ba extends Gn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class za extends Gn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Pn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,r,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=s[r+0],f=s[r+1],g=s[r+2],m=s[r+3];if(0===a)return e[t+0]=l,e[t+1]=c,e[t+2]=h,void(e[t+3]=u);if(1===a)return e[t+0]=d,e[t+1]=f,e[t+2]=g,void(e[t+3]=m);if(u!==m||l!==d||c!==f||h!==g){let p=1-a;const v=l*d+c*f+h*g+u*m,_=v>=0?1:-1,b=1-v*v;if(b>Number.EPSILON){const T=Math.sqrt(b),R=Math.atan2(T,v*_);p=Math.sin(p*R)/T,a=Math.sin(a*R)/T}const y=a*_;if(l=l*p+d*y,c=c*p+f*y,h=h*p+g*y,u=u*p+m*y,p===1-a){const T=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=T,c*=T,h*=T,u*=T}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,s,r){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=s[r],d=s[r+1],f=s[r+2],g=s[r+3];return e[t]=a*g+h*u+l*f-c*d,e[t+1]=l*g+h*d+c*u-a*f,e[t+2]=c*g+h*f+a*d-l*u,e[t+3]=h*g-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(s/2),d=l(n/2),f=l(i/2),g=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u-d*f*g;break;case"YXZ":this._x=d*h*u+c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u+d*f*g;break;case"ZXY":this._x=d*h*u-c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u-d*f*g;break;case"ZYX":this._x=d*h*u-c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u+d*f*g;break;case"YZX":this._x=d*h*u+c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u-d*f*g;break;case"XZY":this._x=d*h*u-c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u+d*f*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(s-c)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(r-i)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(sn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+r*a+i*c-s*l,this._y=i*h+r*l+s*a-n*c,this._z=s*h+r*c+n*l-i*a,this._w=r*h-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class A{constructor(e=0,t=0,n=0){this.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ic.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ic.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=l*t+r*i-a*n,h=l*n+a*t-s*i,u=l*i+s*n-r*t,d=-s*t-r*n-a*i;return this.x=c*l+d*-s+h*-a-u*-r,this.y=h*l+d*-r+u*-s-c*-a,this.z=u*l+d*-a+c*-r-h*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*r-n*l,this.z=n*a-i*r,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ua.copy(this).projectOnVector(e),this.sub(Ua)}reflect(e){return this.sub(Ua.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(sn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ua=new A,ic=new Pn;class Xi{constructor(e=new A(1/0,1/0,1/0),t=new A(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const h=e[l],u=e[l+1],d=e[l+2];h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>s&&(s=h),u>r&&(r=u),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,r,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const h=e.getX(l),u=e.getY(l),d=e.getZ(l);h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>s&&(s=h),u>r&&(r=u),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,r,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=$i.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const s=n.attributes.position;for(let r=0,a=s.count;r<a;r++)$i.fromBufferAttribute(s,r).applyMatrix4(e.matrixWorld),this.expandByPoint($i)}else null===n.boundingBox&&n.computeBoundingBox(),ka.copy(n.boundingBox),ka.applyMatrix4(e.matrixWorld),this.union(ka);const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,$i),$i.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(dr),co.subVectors(this.max,dr),Ms.subVectors(e.a,dr),bs.subVectors(e.b,dr),Ss.subVectors(e.c,dr),Si.subVectors(bs,Ms),wi.subVectors(Ss,bs),Ki.subVectors(Ms,Ss);let t=[0,-Si.z,Si.y,0,-wi.z,wi.y,0,-Ki.z,Ki.y,Si.z,0,-Si.x,wi.z,0,-wi.x,Ki.z,0,-Ki.x,-Si.y,Si.x,0,-wi.y,wi.x,0,-Ki.y,Ki.x,0];return!(!Va(t,Ms,bs,Ss,co)||(t=[1,0,0,0,1,0,0,0,1],!Va(t,Ms,bs,Ss,co)))&&(ho.crossVectors(Si,wi),t=[ho.x,ho.y,ho.z],Va(t,Ms,bs,Ss,co))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return $i.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize($i).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(fi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),fi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),fi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),fi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),fi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),fi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),fi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),fi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(fi)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const fi=[new A,new A,new A,new A,new A,new A,new A,new A],$i=new A,ka=new Xi,Ms=new A,bs=new A,Ss=new A,Si=new A,wi=new A,Ki=new A,dr=new A,co=new A,ho=new A,Yi=new A;function Va(o,e,t,n,i){for(let s=0,r=o.length-3;s<=r;s+=3){Yi.fromArray(o,s);const a=i.x*Math.abs(Yi.x)+i.y*Math.abs(Yi.y)+i.z*Math.abs(Yi.z),l=e.dot(Yi),c=t.dot(Yi),h=n.dot(Yi);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const qu=new Xi,sc=new A,uo=new A,Wa=new A;class Ji{constructor(e=new A,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):qu.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Wa.subVectors(e,this.center);const t=Wa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(Wa.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return!0===this.center.equals(e.center)?uo.set(0,0,1).multiplyScalar(e.radius):uo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(sc.copy(e.center).add(uo)),this.expandByPoint(sc.copy(e.center).sub(uo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const pi=new A,Ga=new A,fo=new A,Ei=new A,Ha=new A,po=new A,ja=new A;class mo{constructor(e=new A,t=new A(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,pi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=pi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(pi.copy(this.direction).multiplyScalar(t).add(this.origin),pi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ga.copy(e).add(t).multiplyScalar(.5),fo.copy(t).sub(e).normalize(),Ei.copy(this.origin).sub(Ga);const s=.5*e.distanceTo(t),r=-this.direction.dot(fo),a=Ei.dot(this.direction),l=-Ei.dot(fo),c=Ei.lengthSq(),h=Math.abs(1-r*r);let u,d,f,g;if(h>0)if(u=r*l-a,d=r*a-l,g=s*h,u>=0)if(d>=-g)if(d<=g){const m=1/h;u*=m,d*=m,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-g?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=g?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(fo).multiplyScalar(d).add(Ga),f}intersectSphere(e,t){pi.subVectors(e.center,this.origin);const n=pi.dot(this.direction),i=pi.dot(pi)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,l=n+r;return a<0&&l<0?null:this.at(a<0?l:a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),n>r||s>i||((s>n||n!=n)&&(n=s),(r<i||i!=i)&&(i=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||a>i)||((a>n||n!=n)&&(n=a),(l<i||i!=i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,pi)}intersectTriangle(e,t,n,i,s){Ha.subVectors(t,e),po.subVectors(n,e),ja.crossVectors(Ha,po);let a,r=this.direction.dot(ja);if(r>0){if(i)return null;a=1}else{if(!(r<0))return null;a=-1,r=-r}Ei.subVectors(this.origin,e);const l=a*this.direction.dot(po.crossVectors(Ei,po));if(l<0)return null;const c=a*this.direction.dot(Ha.cross(Ei));if(c<0||l+c>r)return null;const h=-a*Ei.dot(ja);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Tt{constructor(){this.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,r,a,l,c,h,u,d,f,g,m,p){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=r,v[9]=a,v[13]=l,v[2]=c,v[6]=h,v[10]=u,v[14]=d,v[3]=f,v[7]=g,v[11]=m,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Tt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ws.setFromMatrixColumn(e,0).length(),s=1/ws.setFromMatrixColumn(e,1).length(),r=1/ws.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if("XYZ"===e.order){const d=r*h,f=r*u,g=a*h,m=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+g*c,t[5]=d-m*c,t[9]=-a*l,t[2]=m-d*c,t[6]=g+f*c,t[10]=r*l}else if("YXZ"===e.order){const d=l*h,f=l*u,g=c*h,m=c*u;t[0]=d+m*a,t[4]=g*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-g,t[6]=m+d*a,t[10]=r*l}else if("ZXY"===e.order){const d=l*h,f=l*u,g=c*h,m=c*u;t[0]=d-m*a,t[4]=-r*u,t[8]=g+f*a,t[1]=f+g*a,t[5]=r*h,t[9]=m-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if("ZYX"===e.order){const d=r*h,f=r*u,g=a*h,m=a*u;t[0]=l*h,t[4]=g*c-f,t[8]=d*c+m,t[1]=l*u,t[5]=m*c+d,t[9]=f*c-g,t[2]=-c,t[6]=a*l,t[10]=r*l}else if("YZX"===e.order){const d=r*l,f=r*c,g=a*l,m=a*c;t[0]=l*h,t[4]=m-d*u,t[8]=g*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+g,t[10]=d-m*u}else if("XZY"===e.order){const d=r*l,f=r*c,g=a*l,m=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+m,t[5]=r*h,t[9]=f*u-g,t[2]=g*u-f,t[6]=a*h,t[10]=m*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Qu,e,ed)}lookAt(e,t,n){const i=this.elements;return Dn.subVectors(e,t),0===Dn.lengthSq()&&(Dn.z=1),Dn.normalize(),Ti.crossVectors(n,Dn),0===Ti.lengthSq()&&(1===Math.abs(n.z)?Dn.x+=1e-4:Dn.z+=1e-4,Dn.normalize(),Ti.crossVectors(n,Dn)),Ti.normalize(),go.crossVectors(Dn,Ti),i[0]=Ti.x,i[4]=go.x,i[8]=Dn.x,i[1]=Ti.y,i[5]=go.y,i[9]=Dn.y,i[2]=Ti.z,i[6]=go.z,i[10]=Dn.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],g=n[2],m=n[6],p=n[10],v=n[14],_=n[3],b=n[7],y=n[11],T=n[15],R=i[0],U=i[4],M=i[8],I=i[12],G=i[1],$=i[5],_e=i[9],Ue=i[13],X=i[2],le=i[6],ee=i[10],xe=i[14],be=i[3],se=i[7],ue=i[11],We=i[15];return s[0]=r*R+a*G+l*X+c*be,s[4]=r*U+a*$+l*le+c*se,s[8]=r*M+a*_e+l*ee+c*ue,s[12]=r*I+a*Ue+l*xe+c*We,s[1]=h*R+u*G+d*X+f*be,s[5]=h*U+u*$+d*le+f*se,s[9]=h*M+u*_e+d*ee+f*ue,s[13]=h*I+u*Ue+d*xe+f*We,s[2]=g*R+m*G+p*X+v*be,s[6]=g*U+m*$+p*le+v*se,s[10]=g*M+m*_e+p*ee+v*ue,s[14]=g*I+m*Ue+p*xe+v*We,s[3]=_*R+b*G+y*X+T*be,s[7]=_*U+b*$+y*le+T*se,s[11]=_*M+b*_e+y*ee+T*ue,s[15]=_*I+b*Ue+y*xe+T*We,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14];return e[3]*(+s*l*u-i*c*u-s*a*d+n*c*d+i*a*f-n*l*f)+e[7]*(+t*l*f-t*c*d+s*r*d-i*r*f+i*c*h-s*l*h)+e[11]*(+t*c*u-t*a*f-s*r*u+n*r*f+s*a*h-n*c*h)+e[15]*(-i*a*h-t*l*u+t*a*d+i*r*u-n*r*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],g=e[12],m=e[13],p=e[14],v=e[15],_=u*p*c-m*d*c+m*l*f-a*p*f-u*l*v+a*d*v,b=g*d*c-h*p*c-g*l*f+r*p*f+h*l*v-r*d*v,y=h*m*c-g*u*c+g*a*f-r*m*f-h*a*v+r*u*v,T=g*u*l-h*m*l-g*a*d+r*m*d+h*a*p-r*u*p,R=t*_+n*b+i*y+s*T;if(0===R)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/R;return e[0]=_*U,e[1]=(m*d*s-u*p*s-m*i*f+n*p*f+u*i*v-n*d*v)*U,e[2]=(a*p*s-m*l*s+m*i*c-n*p*c-a*i*v+n*l*v)*U,e[3]=(u*l*s-a*d*s-u*i*c+n*d*c+a*i*f-n*l*f)*U,e[4]=b*U,e[5]=(h*p*s-g*d*s+g*i*f-t*p*f-h*i*v+t*d*v)*U,e[6]=(g*l*s-r*p*s-g*i*c+t*p*c+r*i*v-t*l*v)*U,e[7]=(r*d*s-h*l*s+h*i*c-t*d*c-r*i*f+t*l*f)*U,e[8]=y*U,e[9]=(g*u*s-h*m*s-g*n*f+t*m*f+h*n*v-t*u*v)*U,e[10]=(r*m*s-g*a*s+g*n*c-t*m*c-r*n*v+t*a*v)*U,e[11]=(h*a*s-r*u*s-h*n*c+t*u*c+r*n*f-t*a*f)*U,e[12]=T*U,e[13]=(h*m*i-g*u*i+g*n*d-t*m*d-h*n*p+t*u*p)*U,e[14]=(g*a*i-r*m*i-g*n*l+t*m*l+r*n*p-t*a*p)*U,e[15]=(r*u*i-h*a*i+h*n*l-t*u*l-r*n*d+t*a*d)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*r,0,c*l-i*a,h*l+i*r,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,g=s*u,m=r*h,p=r*u,v=a*u,_=l*c,b=l*h,y=l*u,T=n.x,R=n.y,U=n.z;return i[0]=(1-(m+v))*T,i[1]=(f+y)*T,i[2]=(g-b)*T,i[3]=0,i[4]=(f-y)*R,i[5]=(1-(d+v))*R,i[6]=(p+_)*R,i[7]=0,i[8]=(g+b)*U,i[9]=(p-_)*U,i[10]=(1-(d+m))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ws.set(i[0],i[1],i[2]).length();const r=ws.set(i[4],i[5],i[6]).length(),a=ws.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Hn.copy(this);const c=1/s,h=1/r,u=1/a;return Hn.elements[0]*=c,Hn.elements[1]*=c,Hn.elements[2]*=c,Hn.elements[4]*=h,Hn.elements[5]*=h,Hn.elements[6]*=h,Hn.elements[8]*=u,Hn.elements[9]*=u,Hn.elements[10]*=u,t.setFromRotationMatrix(Hn),n.x=s,n.y=r,n.z=a,this}makePerspective(e,t,n,i,s,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(n-i),h=(t+e)/(t-e),u=(n+i)/(n-i),d=-(r+s)/(r-s),f=-2*r*s/(r-s);return a[0]=2*s/(t-e),a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,r){const a=this.elements,l=1/(t-e),c=1/(n-i),h=1/(r-s),u=(t+e)*l,d=(n+i)*c,f=(r+s)*h;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ws=new A,Hn=new Tt,Qu=new A(0,0,0),ed=new A(1,1,1),Ti=new A,go=new A,Dn=new A,rc=new Tt,oc=new Pn;let ac=(()=>{class o{constructor(t=0,n=0,i=0,s=o.DefaultOrder){this.isEuler=!0,this._x=t,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,s=this._order){return this._x=t,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n=this._order,i=!0){const s=t.elements,r=s[0],a=s[4],l=s[8],c=s[1],h=s[5],u=s[9],d=s[2],f=s[6],g=s[10];switch(n){case"XYZ":this._y=Math.asin(sn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,g),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,h),this._z=0);break;case"YXZ":this._x=Math.asin(-sn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,g),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(sn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-sn(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,g),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(sn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(l,g));break;case"XZY":this._z=Math.asin(-sn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,h),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-u,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return rc.makeRotationFromQuaternion(t),this.setFromRotationMatrix(rc,n,i)}setFromVector3(t,n=this._order){return this.set(t.x,t.y,t.z,n)}reorder(t){return oc.setFromEuler(this),this.setFromQuaternion(oc,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}return o.DefaultOrder="XYZ",o.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],o})();class vo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let td=0;const lc=new A,Es=new Pn,mi=new Tt,_o=new A,fr=new A,nd=new A,id=new Pn,cc=new A(1,0,0),hc=new A(0,1,0),uc=new A(0,0,1),sd={type:"added"},dc={type:"removed"};class Jt extends Gi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:td++}),this.uuid=In(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Jt.DefaultUp.clone();const e=new A,t=new ac,n=new Pn,i=new A(1,1,1);t._onChange(function s(){n.setFromEuler(t,!1)}),n._onChange(function r(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Tt},normalMatrix:{value:new Nn}}),this.matrix=new Tt,this.matrixWorld=new Tt,this.matrixAutoUpdate=Jt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new vo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Es.setFromAxisAngle(e,t),this.quaternion.multiply(Es),this}rotateOnWorldAxis(e,t){return Es.setFromAxisAngle(e,t),this.quaternion.premultiply(Es),this}rotateX(e){return this.rotateOnAxis(cc,e)}rotateY(e){return this.rotateOnAxis(hc,e)}rotateZ(e){return this.rotateOnAxis(uc,e)}translateOnAxis(e,t){return lc.copy(e).applyQuaternion(this.quaternion),this.position.add(lc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(cc,e)}translateY(e){return this.translateOnAxis(hc,e)}translateZ(e){return this.translateOnAxis(uc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(mi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?_o.copy(e):_o.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),fr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?mi.lookAt(fr,_o,this.up):mi.lookAt(_o,fr,this.up),this.quaternion.setFromRotationMatrix(mi),i&&(mi.extractRotation(i.matrixWorld),Es.setFromRotationMatrix(mi),this.quaternion.premultiply(Es.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(sd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(dc)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(dc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),mi.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),mi.multiply(e.parent.matrixWorld)),e.applyMatrix4(mi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,e,nd),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,id,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function s(a,l){return void 0===a[l.uuid]&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++)s(e.shapes,l[c]);else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++)i.animations.push(s(e.animations,this.animations[a]))}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),g=r(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),g.length>0&&(n.nodes=g)}return n.object=i,n;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++)this.add(e.children[n].clone());return this}}Jt.DefaultUp=new A(0,1,0),Jt.DefaultMatrixAutoUpdate=!0;const jn=new A,gi=new A,Xa=new A,vi=new A,Ts=new A,As=new A,fc=new A,$a=new A,Ka=new A,Ya=new A;class Xn{constructor(e=new A,t=new A,n=new A){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),jn.subVectors(e,t),i.cross(jn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){jn.subVectors(i,t),gi.subVectors(n,t),Xa.subVectors(e,t);const r=jn.dot(jn),a=jn.dot(gi),l=jn.dot(Xa),c=gi.dot(gi),h=gi.dot(Xa),u=r*c-a*a;if(0===u)return s.set(-2,-1,-1);const d=1/u,f=(c*l-a*h)*d,g=(r*h-a*l)*d;return s.set(1-f-g,g,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,vi),vi.x>=0&&vi.y>=0&&vi.x+vi.y<=1}static getUV(e,t,n,i,s,r,a,l){return this.getBarycoord(e,t,n,i,vi),l.set(0,0),l.addScaledVector(s,vi.x),l.addScaledVector(r,vi.y),l.addScaledVector(a,vi.z),l}static isFrontFacing(e,t,n,i){return jn.subVectors(n,t),gi.subVectors(e,t),jn.cross(gi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return jn.subVectors(this.c,this.b),gi.subVectors(this.a,this.b),.5*jn.cross(gi).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Xn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Xn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,a;Ts.subVectors(i,n),As.subVectors(s,n),$a.subVectors(e,n);const l=Ts.dot($a),c=As.dot($a);if(l<=0&&c<=0)return t.copy(n);Ka.subVectors(e,i);const h=Ts.dot(Ka),u=As.dot(Ka);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(n).addScaledVector(Ts,r);Ya.subVectors(e,s);const f=Ts.dot(Ya),g=As.dot(Ya);if(g>=0&&f<=g)return t.copy(s);const m=f*c-l*g;if(m<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(n).addScaledVector(As,a);const p=h*g-f*u;if(p<=0&&u-h>=0&&f-g>=0)return fc.subVectors(s,i),a=(u-h)/(u-h+(f-g)),t.copy(i).addScaledVector(fc,a);const v=1/(p+m+d);return r=m*v,a=d*v,t.copy(n).addScaledVector(Ts,r).addScaledVector(As,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rd=0,un=(()=>{class o extends Gi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rd++}),this.uuid=In(),this.name="",this.type="Material",this.blending=1,this.side=rt,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const n in t){const i=t[n];if(void 0===i){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}if("shading"===n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}const s=this[n];void 0!==s?s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}}toJSON(t){const n=void 0===t||"string"==typeof t;n&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function s(r){const a=[];for(const l in r){const c=r[l];delete c.metadata,a.push(c)}return a}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),this.side!==rt&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n){const r=s(t.textures),a=s(t.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const n=t.clippingPlanes;let i=null;if(null!==n){const s=n.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=n[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}get vertexTangents(){return console.warn("THREE."+this.type+": .vertexTangents has been removed."),!1}set vertexTangents(t){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}return o.fromType=function(){return null},o})();class Ai extends un{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const an=new A,xo=new Ee;class ln{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new tt),t[n++]=r.r,t[n++]=r.g,t[n++]=r.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new Ee),t[n++]=r.x,t[n++]=r.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new A),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new Vt),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z,t[n++]=r.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)xo.fromBufferAttribute(this,t),xo.applyMatrix3(e),this.setXY(t,xo.x,xo.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix3(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix4(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyNormalMatrix(e),this.setXYZ(t,an.x,an.y,an.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.transformDirection(e),this.setXYZ(t,an.x,an.y,an.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}class pc extends ln{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class mc extends ln{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class ot extends ln{constructor(e,t,n){super(new Float32Array(e),t,n)}}let od=0;const Bn=new Tt,Ja=new Jt,Cs=new A,On=new Xi,pr=new Xi,dn=new A;class At extends Gi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:od++}),this.uuid=In(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(ec(e)?mc:pc)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const s=(new Nn).getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Bn.makeRotationFromQuaternion(e),this.applyMatrix4(Bn),this}rotateX(e){return Bn.makeRotationX(e),this.applyMatrix4(Bn),this}rotateY(e){return Bn.makeRotationY(e),this.applyMatrix4(Bn),this}rotateZ(e){return Bn.makeRotationZ(e),this.applyMatrix4(Bn),this}translate(e,t,n){return Bn.makeTranslation(e,t,n),this.applyMatrix4(Bn),this}scale(e,t,n){return Bn.makeScale(e,t,n),this.applyMatrix4(Bn),this}lookAt(e){return Ja.lookAt(e),Ja.updateMatrix(),this.applyMatrix4(Ja.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Cs).negate(),this.translate(Cs.x,Cs.y,Cs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ot(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Xi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++)On.setFromBufferAttribute(t[n]),this.morphTargetsRelative?(dn.addVectors(this.boundingBox.min,On.min),this.boundingBox.expandByPoint(dn),dn.addVectors(this.boundingBox.max,On.max),this.boundingBox.expandByPoint(dn)):(this.boundingBox.expandByPoint(On.min),this.boundingBox.expandByPoint(On.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ji);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new A,1/0);if(e){const n=this.boundingSphere.center;if(On.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++)pr.setFromBufferAttribute(t[s]),this.morphTargetsRelative?(dn.addVectors(On.min,pr.min),On.expandByPoint(dn),dn.addVectors(On.max,pr.max),On.expandByPoint(dn)):(On.expandByPoint(pr.min),On.expandByPoint(pr.max));On.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)dn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(dn));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)dn.fromBufferAttribute(a,c),l&&(Cs.fromBufferAttribute(e,c),dn.add(Cs)),i=Math.max(i,n.distanceToSquared(dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,s=t.normal.array,r=t.uv.array,a=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new ln(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let G=0;G<a;G++)c[G]=new A,h[G]=new A;const u=new A,d=new A,f=new A,g=new Ee,m=new Ee,p=new Ee,v=new A,_=new A;function b(G,$,_e){u.fromArray(i,3*G),d.fromArray(i,3*$),f.fromArray(i,3*_e),g.fromArray(r,2*G),m.fromArray(r,2*$),p.fromArray(r,2*_e),d.sub(u),f.sub(u),m.sub(g),p.sub(g);const Ue=1/(m.x*p.y-p.x*m.y);!isFinite(Ue)||(v.copy(d).multiplyScalar(p.y).addScaledVector(f,-m.y).multiplyScalar(Ue),_.copy(f).multiplyScalar(m.x).addScaledVector(d,-p.x).multiplyScalar(Ue),c[G].add(v),c[$].add(v),c[_e].add(v),h[G].add(_),h[$].add(_),h[_e].add(_))}let y=this.groups;0===y.length&&(y=[{start:0,count:n.length}]);for(let G=0,$=y.length;G<$;++G){const _e=y[G],Ue=_e.start;for(let le=Ue,ee=Ue+_e.count;le<ee;le+=3)b(n[le+0],n[le+1],n[le+2])}const T=new A,R=new A,U=new A,M=new A;function I(G){U.fromArray(s,3*G),M.copy(U);const $=c[G];T.copy($),T.sub(U.multiplyScalar(U.dot($))).normalize(),R.crossVectors(M,$);const Ue=R.dot(h[G])<0?-1:1;l[4*G]=T.x,l[4*G+1]=T.y,l[4*G+2]=T.z,l[4*G+3]=Ue}for(let G=0,$=y.length;G<$;++G){const _e=y[G],Ue=_e.start;for(let le=Ue,ee=Ue+_e.count;le<ee;le+=3)I(n[le+0]),I(n[le+1]),I(n[le+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new ln(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new A,s=new A,r=new A,a=new A,l=new A,c=new A,h=new A,u=new A;if(e)for(let d=0,f=e.count;d<f;d+=3){const g=e.getX(d+0),m=e.getX(d+1),p=e.getX(d+2);i.fromBufferAttribute(t,g),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,p),h.subVectors(r,s),u.subVectors(i,s),h.cross(u),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,p),a.add(h),l.add(h),c.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(p,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(i,s),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const r=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,h=Math.min(l.length,r.length-c);for(let u=0,d=c;u<h;u++,d++)r[d]=l[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dn.fromBufferAttribute(e,t),dn.normalize(),e.setXYZ(t,dn.x,dn.y,dn.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,g=0;for(let m=0,p=l.length;m<p;m++){f=a.isInterleavedBufferAttribute?l[m]*a.data.stride+a.offset:l[m]*h;for(let v=0;v<h;v++)d[g++]=c[f++]}return new ln(d,h,u)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new At,n=this.index.array,i=this.attributes;for(const a in i){const c=e(i[a],n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const f=e(c[h],n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const l=this.parameters;for(const c in l)void 0!==l[c]&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n)e.data.attributes[l]=n[l].toJSON(e.data);const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++)h.push(c[u].toJSON(e.data));h.length>0&&(i[l]=h,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i)this.setAttribute(c,i[c].clone(t));const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const gc=new Tt,Ps=new mo,Za=new Ji,Ci=new A,Pi=new A,Li=new A,qa=new A,Qa=new A,el=new A,yo=new A,Mo=new A,bo=new A,So=new Ee,wo=new Ee,Eo=new Ee,tl=new A,To=new A;class xn extends Jt{constructor(e=new At,t=new Ai){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i||(null===n.boundingSphere&&n.computeBoundingSphere(),Za.copy(n.boundingSphere),Za.applyMatrix4(s),!1===e.ray.intersectsSphere(Za))||(gc.copy(s).invert(),Ps.copy(e.ray).applyMatrix4(gc),null!==n.boundingBox&&!1===Ps.intersectsBox(n.boundingBox)))return;let r;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,d=n.attributes.uv2,f=n.groups,g=n.drawRange;if(null!==a)if(Array.isArray(i))for(let m=0,p=f.length;m<p;m++){const v=f[m],_=i[v.materialIndex];for(let T=Math.max(v.start,g.start),R=Math.min(a.count,Math.min(v.start+v.count,g.start+g.count));T<R;T+=3){const U=a.getX(T),M=a.getX(T+1),I=a.getX(T+2);r=Ao(this,_,e,Ps,l,c,h,u,d,U,M,I),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=v.materialIndex,t.push(r))}}else for(let v=Math.max(0,g.start),_=Math.min(a.count,g.start+g.count);v<_;v+=3){const b=a.getX(v),y=a.getX(v+1),T=a.getX(v+2);r=Ao(this,i,e,Ps,l,c,h,u,d,b,y,T),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}else if(void 0!==l)if(Array.isArray(i))for(let m=0,p=f.length;m<p;m++){const v=f[m],_=i[v.materialIndex];for(let T=Math.max(v.start,g.start),R=Math.min(l.count,Math.min(v.start+v.count,g.start+g.count));T<R;T+=3)r=Ao(this,_,e,Ps,l,c,h,u,d,T,T+1,T+2),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=v.materialIndex,t.push(r))}else for(let v=Math.max(0,g.start),_=Math.min(l.count,g.start+g.count);v<_;v+=3)r=Ao(this,i,e,Ps,l,c,h,u,d,v,v+1,v+2),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}}function Ao(o,e,t,n,i,s,r,a,l,c,h,u){Ci.fromBufferAttribute(i,c),Pi.fromBufferAttribute(i,h),Li.fromBufferAttribute(i,u);const d=o.morphTargetInfluences;if(s&&d){yo.set(0,0,0),Mo.set(0,0,0),bo.set(0,0,0);for(let g=0,m=s.length;g<m;g++){const p=d[g],v=s[g];0!==p&&(qa.fromBufferAttribute(v,c),Qa.fromBufferAttribute(v,h),el.fromBufferAttribute(v,u),r?(yo.addScaledVector(qa,p),Mo.addScaledVector(Qa,p),bo.addScaledVector(el,p)):(yo.addScaledVector(qa.sub(Ci),p),Mo.addScaledVector(Qa.sub(Pi),p),bo.addScaledVector(el.sub(Li),p)))}Ci.add(yo),Pi.add(Mo),Li.add(bo)}o.isSkinnedMesh&&(o.boneTransform(c,Ci),o.boneTransform(h,Pi),o.boneTransform(u,Li));const f=function ad(o,e,t,n,i,s,r,a){let l;if(l=e.side===ce?n.intersectTriangle(r,s,i,!0,a):n.intersectTriangle(i,s,r,e.side!==Me,a),null===l)return null;To.copy(a),To.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(To);return c<t.near||c>t.far?null:{distance:c,point:To.clone(),object:o}}(o,e,t,n,Ci,Pi,Li,tl);if(f){a&&(So.fromBufferAttribute(a,c),wo.fromBufferAttribute(a,h),Eo.fromBufferAttribute(a,u),f.uv=Xn.getUV(tl,Ci,Pi,Li,So,wo,Eo,new Ee)),l&&(So.fromBufferAttribute(l,c),wo.fromBufferAttribute(l,h),Eo.fromBufferAttribute(l,u),f.uv2=Xn.getUV(tl,Ci,Pi,Li,So,wo,Eo,new Ee));const g={a:c,b:h,c:u,normal:new A,materialIndex:0};Xn.getNormal(Ci,Pi,Li,g.normal),f.face=g}return f}class Ri extends At{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;function g(m,p,v,_,b,y,T,R,U,M,I){const G=y/U,$=T/M,_e=y/2,Ue=T/2,X=R/2,le=U+1,ee=M+1;let xe=0,be=0;const se=new A;for(let ue=0;ue<ee;ue++){const We=ue*$-Ue;for(let Pe=0;Pe<le;Pe++)se[m]=(Pe*G-_e)*_,se[p]=We*b,se[v]=X,c.push(se.x,se.y,se.z),se[m]=0,se[p]=0,se[v]=R>0?1:-1,h.push(se.x,se.y,se.z),u.push(Pe/U),u.push(1-ue/M),xe+=1}for(let ue=0;ue<M;ue++)for(let We=0;We<U;We++){const Je=d+We+le*(ue+1),at=d+(We+1)+le*(ue+1),ut=d+(We+1)+le*ue;l.push(d+We+le*ue,Je,ut),l.push(Je,at,ut),be+=6}a.addGroup(f,be,I),f+=be,d+=xe}g("z","y","x",-1,-1,n,t,e,r,s,0),g("z","y","x",1,-1,n,t,-e,r,s,1),g("x","z","y",1,1,e,n,t,i,r,2),g("x","z","y",1,-1,e,n,-t,i,r,3),g("x","y","z",1,-1,e,t,n,i,s,4),g("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ot(c,3)),this.setAttribute("normal",new ot(h,3)),this.setAttribute("uv",new ot(u,2))}static fromJSON(e){return new Ri(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ls(o){const e={};for(const t in o){e[t]={};for(const n in o[t]){const i=o[t][n];e[t][n]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}}return e}function yn(o){const e={};for(let t=0;t<o.length;t++){const n=Ls(o[t]);for(const i in n)e[i]=n[i]}return e}const vc={clone:Ls,merge:yn};class qn extends un{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ls(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;t.uniforms[i]=r&&r.isTexture?{type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?{type:"c",value:r.getHex()}:r&&r.isVector2?{type:"v2",value:r.toArray()}:r&&r.isVector3?{type:"v3",value:r.toArray()}:r&&r.isVector4?{type:"v4",value:r.toArray()}:r&&r.isMatrix3?{type:"m3",value:r.toArray()}:r&&r.isMatrix4?{type:"m4",value:r.toArray()}:{value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Co extends Jt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Tt,this.projectionMatrix=new Tt,this.projectionMatrixInverse=new Tt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class _n extends Co{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*cr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Hi*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*cr*Math.atan(Math.tan(.5*Hi*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Hi*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*i/l,t-=r.offsetY*n/c,i*=r.width/l,n*=r.height/c}const a=this.filmOffset;0!==a&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class _c extends Jt{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new _n(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new A(1,0,0)),this.add(i);const s=new _n(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new A(-1,0,0)),this.add(s);const r=new _n(90,1,e,t);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new A(0,1,0)),this.add(r);const a=new _n(90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new A(0,-1,0)),this.add(a);const l=new _n(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new A(0,0,1)),this.add(l);const c=new _n(90,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,-1)),this.add(c)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,r,a,l,c]=this.children,h=e.getRenderTarget(),u=e.toneMapping,d=e.xr.enabled;e.toneMapping=Bt,e.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Po extends Gn{constructor(e,t,n,i,s,r,a,l,c,h){super(e=void 0!==e?e:[],t=void 0!==t?t:Un,n,i,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class xc extends Zn{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1};this.texture=new Po([n,n,n,n,n,n],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Yt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n_uniforms={tEquirect:{value:null}},n_vertexShader="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",n_fragmentShader="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new Ri(5,5,5),s=new qn({name:"CubemapFromEquirect",uniforms:Ls(n_uniforms),vertexShader:n_vertexShader,fragmentShader:n_fragmentShader,side:ce,blending:Ae});s.uniforms.tEquirect.value=t;const r=new xn(i,s),a=t.minFilter;return t.minFilter===ci&&(t.minFilter=Yt),new _c(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}}const nl=new A,hd=new A,ud=new Nn;class Zi{constructor(e=new A(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=nl.subVectors(n,t).cross(hd.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(nl),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||ud.getNormalMatrix(e),i=this.coplanarPoint(nl).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Ds=new Ji,Lo=new A;class il{constructor(e=new Zi,t=new Zi,n=new Zi,i=new Zi,s=new Zi,r=new Zi){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],r=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],f=n[9],g=n[10],m=n[11],p=n[12],v=n[13],_=n[14],b=n[15];return t[0].setComponents(a-i,u-l,m-d,b-p).normalize(),t[1].setComponents(a+i,u+l,m+d,b+p).normalize(),t[2].setComponents(a+s,u+c,m+f,b+v).normalize(),t[3].setComponents(a-s,u-c,m-f,b-v).normalize(),t[4].setComponents(a-r,u-h,m-g,b-_).normalize(),t[5].setComponents(a+r,u+h,m+g,b+_).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Ds.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ds)}intersectsSprite(e){return Ds.center.set(0,0,0),Ds.radius=.7071067811865476,Ds.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ds)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Lo.x=i.normal.x>0?e.max.x:e.min.x,Lo.y=i.normal.y>0?e.max.y:e.min.y,Lo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Lo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function yc(){let o=null,e=!1,t=null,n=null;function i(s,r){t(s,r),n=o.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==t&&(n=o.requestAnimationFrame(i),e=!0)},stop:function(){o.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){o=s}}}function dd(o,e){const t=e.isWebGL2,n=new WeakMap;return{get:function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)},remove:function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(o.deleteBuffer(h.buffer),n.delete(c))},update:function l(c,h){if(c.isGLBufferAttribute){const d=n.get(c);return void((!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version}))}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);void 0===u?n.set(c,function i(c,h){const u=c.array,d=c.usage,f=o.createBuffer();let g;if(o.bindBuffer(h,f),o.bufferData(h,u,d),c.onUploadCallback(),u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");g=5131}else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else{if(!(u instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);g=5121}return{buffer:f,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}(c,h)):u.version<c.version&&(function s(c,h,u){const d=h.array,f=h.updateRange;o.bindBuffer(u,c),-1===f.count?o.bufferSubData(u,0,d):(t?o.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):o.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}(u.buffer,c,h),u.version=c.version)}}}class qi extends At{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=e/a,d=t/l,f=[],g=[],m=[],p=[];for(let v=0;v<h;v++){const _=v*d-r;for(let b=0;b<c;b++)g.push(b*u-s,-_,0),m.push(0,0,1),p.push(b/a),p.push(1-v/l)}for(let v=0;v<l;v++)for(let _=0;_<a;_++){const y=_+c*(v+1),T=_+1+c*(v+1),R=_+1+c*v;f.push(_+c*v,y,R),f.push(y,T,R)}this.setIndex(f),this.setAttribute("position",new ot(g,3)),this.setAttribute("normal",new ot(m,3)),this.setAttribute("uv",new ot(p,2))}static fromJSON(e){return new qi(e.width,e.height,e.widthSegments,e.heightSegments)}}const Pt={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n\tmaterial.iridescence = 0.0;\n} else {\n\tmaterial.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},$e={common:{diffuse:{value:new tt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Nn},uv2Transform:{value:new Nn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nn}},sprite:{diffuse:{value:new tt(16777215)},opacity:{value:1},center:{value:new Ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nn}}},Qn={basic:{uniforms:yn([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.fog]),vertexShader:Pt.meshbasic_vert,fragmentShader:Pt.meshbasic_frag},lambert:{uniforms:yn([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.fog,$e.lights,{emissive:{value:new tt(0)}}]),vertexShader:Pt.meshlambert_vert,fragmentShader:Pt.meshlambert_frag},phong:{uniforms:yn([$e.common,$e.specularmap,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.fog,$e.lights,{emissive:{value:new tt(0)},specular:{value:new tt(1118481)},shininess:{value:30}}]),vertexShader:Pt.meshphong_vert,fragmentShader:Pt.meshphong_frag},standard:{uniforms:yn([$e.common,$e.envmap,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.roughnessmap,$e.metalnessmap,$e.fog,$e.lights,{emissive:{value:new tt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag},toon:{uniforms:yn([$e.common,$e.aomap,$e.lightmap,$e.emissivemap,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.gradientmap,$e.fog,$e.lights,{emissive:{value:new tt(0)}}]),vertexShader:Pt.meshtoon_vert,fragmentShader:Pt.meshtoon_frag},matcap:{uniforms:yn([$e.common,$e.bumpmap,$e.normalmap,$e.displacementmap,$e.fog,{matcap:{value:null}}]),vertexShader:Pt.meshmatcap_vert,fragmentShader:Pt.meshmatcap_frag},points:{uniforms:yn([$e.points,$e.fog]),vertexShader:Pt.points_vert,fragmentShader:Pt.points_frag},dashed:{uniforms:yn([$e.common,$e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Pt.linedashed_vert,fragmentShader:Pt.linedashed_frag},depth:{uniforms:yn([$e.common,$e.displacementmap]),vertexShader:Pt.depth_vert,fragmentShader:Pt.depth_frag},normal:{uniforms:yn([$e.common,$e.bumpmap,$e.normalmap,$e.displacementmap,{opacity:{value:1}}]),vertexShader:Pt.meshnormal_vert,fragmentShader:Pt.meshnormal_frag},sprite:{uniforms:yn([$e.sprite,$e.fog]),vertexShader:Pt.sprite_vert,fragmentShader:Pt.sprite_frag},background:{uniforms:{uvTransform:{value:new Nn},t2D:{value:null}},vertexShader:Pt.background_vert,fragmentShader:Pt.background_frag},cube:{uniforms:yn([$e.envmap,{opacity:{value:1}}]),vertexShader:Pt.cube_vert,fragmentShader:Pt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Pt.equirect_vert,fragmentShader:Pt.equirect_frag},distanceRGBA:{uniforms:yn([$e.common,$e.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Pt.distanceRGBA_vert,fragmentShader:Pt.distanceRGBA_frag},shadow:{uniforms:yn([$e.lights,$e.fog,{color:{value:new tt(0)},opacity:{value:1}}]),vertexShader:Pt.shadow_vert,fragmentShader:Pt.shadow_frag}};function up(o,e,t,n,i,s){const r=new tt(0);let l,c,a=!0===i?0:1,h=null,u=0,d=null;function g(m,p){t.buffers.color.setClear(m.r,m.g,m.b,p,s)}return{getClearColor:function(){return r},setClearColor:function(m,p=1){r.set(m),a=p,g(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,g(r,a)},render:function f(m,p){let v=!1,_=!0===p.isScene?p.background:null;_&&_.isTexture&&(_=e.get(_));const b=o.xr,y=b.getSession&&b.getSession();y&&"additive"===y.environmentBlendMode&&(_=null),null===_?g(r,a):_&&_.isColor&&(g(_,1),v=!0),(o.autoClear||v)&&o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil),_&&(_.isCubeTexture||306===_.mapping)?(void 0===c&&(c=new xn(new Ri(1,1,1),new qn({name:"BackgroundCubeMaterial",uniforms:Ls(Qn.cube.uniforms),vertexShader:Qn.cube.vertexShader,fragmentShader:Qn.cube.fragmentShader,side:ce,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(T,R,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&!1===_.isRenderTargetTexture?-1:1,(h!==_||u!==_.version||d!==o.toneMapping)&&(c.material.needsUpdate=!0,h=_,u=_.version,d=o.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(void 0===l&&(l=new xn(new qi(2,2),new qn({name:"BackgroundMaterial",uniforms:Ls(Qn.background.uniforms),vertexShader:Qn.background.vertexShader,fragmentShader:Qn.background.fragmentShader,side:rt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=_,!0===_.matrixAutoUpdate&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(h!==_||u!==_.version||d!==o.toneMapping)&&(l.material.needsUpdate=!0,h=_,u=_.version,d=o.toneMapping),l.layers.enableAll(),m.unshift(l,l.geometry,l.material,0,0,null))}}}function dp(o,e,t,n){const i=o.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),r=n.isWebGL2||null!==s,a={},l=p(null);let c=l,h=!1;function f(X){return n.isWebGL2?o.bindVertexArray(X):s.bindVertexArrayOES(X)}function g(X){return n.isWebGL2?o.deleteVertexArray(X):s.deleteVertexArrayOES(X)}function p(X){const le=[],ee=[],xe=[];for(let be=0;be<i;be++)le[be]=0,ee[be]=0,xe[be]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:le,enabledAttributes:ee,attributeDivisors:xe,object:X,attributes:{},index:null}}function b(){const X=c.newAttributes;for(let le=0,ee=X.length;le<ee;le++)X[le]=0}function y(X){T(X,0)}function T(X,le){const xe=c.enabledAttributes,be=c.attributeDivisors;c.newAttributes[X]=1,0===xe[X]&&(o.enableVertexAttribArray(X),xe[X]=1),be[X]!==le&&((n.isWebGL2?o:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](X,le),be[X]=le)}function R(){const X=c.newAttributes,le=c.enabledAttributes;for(let ee=0,xe=le.length;ee<xe;ee++)le[ee]!==X[ee]&&(o.disableVertexAttribArray(ee),le[ee]=0)}function U(X,le,ee,xe,be,se){!0!==n.isWebGL2||5124!==ee&&5125!==ee?o.vertexAttribPointer(X,le,ee,xe,be,se):o.vertexAttribIPointer(X,le,ee,be,se)}function _e(){Ue(),h=!0,c!==l&&(c=l,f(c.object))}function Ue(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function u(X,le,ee,xe,be){let se=!1;if(r){const ue=function m(X,le,ee){const xe=!0===ee.wireframe;let be=a[X.id];void 0===be&&(be={},a[X.id]=be);let se=be[le.id];void 0===se&&(se={},be[le.id]=se);let ue=se[xe];return void 0===ue&&(ue=p(function d(){return n.isWebGL2?o.createVertexArray():s.createVertexArrayOES()}()),se[xe]=ue),ue}(xe,ee,le);c!==ue&&(c=ue,f(c.object)),se=function v(X,le,ee,xe){const be=c.attributes,se=le.attributes;let ue=0;const We=ee.getAttributes();for(const Pe in We)if(We[Pe].location>=0){const at=be[Pe];let ut=se[Pe];if(void 0===ut&&("instanceMatrix"===Pe&&X.instanceMatrix&&(ut=X.instanceMatrix),"instanceColor"===Pe&&X.instanceColor&&(ut=X.instanceColor)),void 0===at||at.attribute!==ut||ut&&at.data!==ut.data)return!0;ue++}return c.attributesNum!==ue||c.index!==xe}(X,xe,ee,be),se&&function _(X,le,ee,xe){const be={},se=le.attributes;let ue=0;const We=ee.getAttributes();for(const Pe in We)if(We[Pe].location>=0){let at=se[Pe];void 0===at&&("instanceMatrix"===Pe&&X.instanceMatrix&&(at=X.instanceMatrix),"instanceColor"===Pe&&X.instanceColor&&(at=X.instanceColor));const ut={};ut.attribute=at,at&&at.data&&(ut.data=at.data),be[Pe]=ut,ue++}c.attributes=be,c.attributesNum=ue,c.index=xe}(X,xe,ee,be)}else{const ue=!0===le.wireframe;(c.geometry!==xe.id||c.program!==ee.id||c.wireframe!==ue)&&(c.geometry=xe.id,c.program=ee.id,c.wireframe=ue,se=!0)}null!==be&&t.update(be,34963),(se||h)&&(h=!1,function M(X,le,ee,xe){if(!1===n.isWebGL2&&(X.isInstancedMesh||xe.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;b();const be=xe.attributes,se=ee.getAttributes(),ue=le.defaultAttributeValues;for(const We in se){const Pe=se[We];if(Pe.location>=0){let Je=be[We];if(void 0===Je&&("instanceMatrix"===We&&X.instanceMatrix&&(Je=X.instanceMatrix),"instanceColor"===We&&X.instanceColor&&(Je=X.instanceColor)),void 0!==Je){const at=Je.normalized,ut=Je.itemSize,de=t.get(Je);if(void 0===de)continue;const It=de.buffer,vt=de.type,St=de.bytesPerElement;if(Je.isInterleavedBufferAttribute){const Ke=Je.data,Lt=Ke.stride,ye=Je.offset;if(Ke.isInstancedInterleavedBuffer){for(let ve=0;ve<Pe.locationSize;ve++)T(Pe.location+ve,Ke.meshPerAttribute);!0!==X.isInstancedMesh&&void 0===xe._maxInstanceCount&&(xe._maxInstanceCount=Ke.meshPerAttribute*Ke.count)}else for(let ve=0;ve<Pe.locationSize;ve++)y(Pe.location+ve);o.bindBuffer(34962,It);for(let ve=0;ve<Pe.locationSize;ve++)U(Pe.location+ve,ut/Pe.locationSize,vt,at,Lt*St,(ye+ut/Pe.locationSize*ve)*St)}else{if(Je.isInstancedBufferAttribute){for(let Ke=0;Ke<Pe.locationSize;Ke++)T(Pe.location+Ke,Je.meshPerAttribute);!0!==X.isInstancedMesh&&void 0===xe._maxInstanceCount&&(xe._maxInstanceCount=Je.meshPerAttribute*Je.count)}else for(let Ke=0;Ke<Pe.locationSize;Ke++)y(Pe.location+Ke);o.bindBuffer(34962,It);for(let Ke=0;Ke<Pe.locationSize;Ke++)U(Pe.location+Ke,ut/Pe.locationSize,vt,at,ut*St,ut/Pe.locationSize*Ke*St)}}else if(void 0!==ue){const at=ue[We];if(void 0!==at)switch(at.length){case 2:o.vertexAttrib2fv(Pe.location,at);break;case 3:o.vertexAttrib3fv(Pe.location,at);break;case 4:o.vertexAttrib4fv(Pe.location,at);break;default:o.vertexAttrib1fv(Pe.location,at)}}}}R()}(X,le,ee,xe),null!==be&&o.bindBuffer(34963,t.get(be).buffer))},reset:_e,resetDefaultState:Ue,dispose:function I(){_e();for(const X in a){const le=a[X];for(const ee in le){const xe=le[ee];for(const be in xe)g(xe[be].object),delete xe[be];delete le[ee]}delete a[X]}},releaseStatesOfGeometry:function G(X){if(void 0===a[X.id])return;const le=a[X.id];for(const ee in le){const xe=le[ee];for(const be in xe)g(xe[be].object),delete xe[be];delete le[ee]}delete a[X.id]},releaseStatesOfProgram:function $(X){for(const le in a){const ee=a[le];if(void 0===ee[X.id])continue;const xe=ee[X.id];for(const be in xe)g(xe[be].object),delete xe[be];delete ee[X.id]}},initAttributes:b,enableAttribute:y,disableUnusedAttributes:R}}function fp(o,e,t,n){const i=n.isWebGL2;let s;this.setMode=function r(c){s=c},this.render=function a(c,h){o.drawArrays(s,c,h),t.update(h,s,1)},this.renderInstances=function l(c,h,u){if(0===u)return;let d,f;if(i)d=o,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](s,c,h,u),t.update(h,s,u)}}function pp(o,e,t){let n;function s(U){if("highp"===U){if(o.getShaderPrecisionFormat(35633,36338).precision>0&&o.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";U="mediump"}return"mediump"===U&&o.getShaderPrecisionFormat(35633,36337).precision>0&&o.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&o instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&o instanceof WebGL2ComputeRenderingContext;let a=void 0!==t.precision?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=r||e.has("WEBGL_draw_buffers"),h=!0===t.logarithmicDepthBuffer,u=o.getParameter(34930),d=o.getParameter(35660),f=o.getParameter(3379),g=o.getParameter(34076),m=o.getParameter(34921),p=o.getParameter(36347),v=o.getParameter(36348),_=o.getParameter(36349),b=d>0,y=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:c,getMaxAnisotropy:function i(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const U=e.get("EXT_texture_filter_anisotropic");n=o.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:s,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:b,floatFragmentTextures:y,floatVertexTextures:b&&y,maxSamples:r?o.getParameter(36183):0}}function mp(o){const e=this;let t=null,n=0,i=!1,s=!1;const r=new Zi,a=new Nn,l={value:null,needsUpdate:!1};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,g){const m=null!==u?u.length:0;let p=null;if(0!==m){if(p=l.value,!0!==g||null===p){const v=f+4*m,_=d.matrixWorldInverse;a.getNormalMatrix(_),(null===p||p.length<v)&&(p=new Float32Array(v));for(let b=0,y=f;b!==m;++b,y+=4)r.copy(u[b]).applyMatrix4(_,a),r.normal.toArray(p,y),p[y+3]=r.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,p}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d,f){const g=0!==u.length||d||0!==n||i;return i=d,t=h(u,f,0),n=u.length,g},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,d,f){const g=u.clippingPlanes,m=u.clipIntersection,p=u.clipShadows,v=o.get(u);if(!i||null===g||0===g.length||s&&!p)s?h(null):c();else{const _=s?0:n,b=4*_;let y=v.clippingState||null;l.value=y,y=h(g,d,b,f);for(let T=0;T!==b;++T)y[T]=t[T];v.clippingState=y,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=_}}}function gp(o){let e=new WeakMap;function t(r,a){return a===li?r.mapping=Un:304===a&&(r.mapping=302),r}function i(r){const a=r.target;a.removeEventListener("dispose",i);const l=e.get(a);void 0!==l&&(e.delete(a),l.dispose())}return{get:function n(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(a===li||304===a){if(e.has(r))return t(e.get(r).texture,r.mapping);{const l=r.image;if(l&&l.height>0){const c=new xc(l.height/2);return c.fromEquirectangularTexture(o,r),e.set(r,c),r.addEventListener("dispose",i),t(c.texture,r.mapping)}return null}}}return r},dispose:function s(){e=new WeakMap}}}Qn.physical={uniforms:yn([Qn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ee(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new tt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ee},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new tt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new tt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag};class Ro extends Co{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,a=i+t,l=i-t;if(null!==this.view&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const Mc=[.125,.215,.35,.446,.526,.582],sl=new Ro,bc=new tt;let rl=null;const es=(1+Math.sqrt(5))/2,Ns=1/es,Sc=[new A(1,1,1),new A(-1,1,1),new A(1,1,-1),new A(-1,1,-1),new A(0,es,Ns),new A(0,es,-Ns),new A(Ns,0,es),new A(-Ns,0,es),new A(es,Ns,0),new A(-es,Ns,0)];class wc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){rl=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Ac(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Tc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rl),e.scissorTest=!1,Io(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSize(e.mapping===Un||302===e.mapping?0===e.image.length?16:e.image[0].width||e.image[0].image.width:e.image.width/4),rl=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Yt,minFilter:Yt,generateMipmaps:!1,type:gn,format:Mn,encoding:bi,depthBuffer:!1},i=Ec(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Ec(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function vp(o){const e=[],t=[],n=[];let i=o;const s=o-4+1+Mc.length;for(let r=0;r<s;r++){const a=Math.pow(2,i);t.push(a);let l=1/a;r>o-4?l=Mc[r-o+4-1]:0===r&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,g=6,m=3,p=2,v=1,_=new Float32Array(m*g*f),b=new Float32Array(p*g*f),y=new Float32Array(v*g*f);for(let R=0;R<f;R++){const U=R%3*2/3-1,M=R>2?0:-1;_.set([U,M,0,U+2/3,M,0,U+2/3,M+1,0,U,M,0,U+2/3,M+1,0,U,M+1,0],m*g*R),b.set(d,p*g*R),y.set([R,R,R,R,R,R],v*g*R)}const T=new At;T.setAttribute("position",new ln(_,m)),T.setAttribute("uv",new ln(b,p)),T.setAttribute("faceIndex",new ln(y,v)),e.push(T),i>4&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}(s)),this._blurMaterial=function _p(o,e,t){const n=new Float32Array(20),i=new A(0,1,0);return new qn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Ae,depthTest:!1,depthWrite:!1})}(s,e,t)}return i}_compileMaterial(e){const t=new xn(this._lodPlanes[0],e);this._renderer.compile(t,sl)}_sceneToCubeUV(e,t,n,i){const a=new _n(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(bc),h.toneMapping=Bt,h.autoClear=!1;const f=new Ai({name:"PMREM.Background",side:ce,depthWrite:!1,depthTest:!1}),g=new xn(new Ri,f);let m=!1;const p=e.background;p?p.isColor&&(f.color.copy(p),e.background=null,m=!0):(f.color.copy(bc),m=!0);for(let v=0;v<6;v++){const _=v%3;0===_?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):1===_?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const b=this._cubeSize;Io(i,_*b,v>2?b:0,b,b),h.setRenderTarget(i),m&&h.render(g,a),h.render(e,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Un||302===e.mapping;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Ac()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Tc());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new xn(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const l=this._cubeSize;Io(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(r,sl)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]);this._blur(e,i-1,i,s,Sc[(i-1)%Sc.length])}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,a){const l=this._renderer,c=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new xn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*f):2*Math.PI/39,m=s/g,p=isFinite(s)?1+Math.floor(3*m):20;p>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const v=[];let _=0;for(let U=0;U<20;++U){const M=U/m,I=Math.exp(-M*M/2);v.push(I),0===U?_+=I:U<p&&(_+=2*I)}for(let U=0;U<v.length;U++)v[U]=v[U]/_;d.envMap.value=e.texture,d.samples.value=p,d.weights.value=v,d.latitudinal.value="latitudinal"===r,a&&(d.poleAxis.value=a);const{_lodMax:b}=this;d.dTheta.value=g,d.mipInt.value=b-n;const y=this._sizeLods[i];Io(t,3*y*(i>b-4?i-b+4:0),4*(this._cubeSize-y),3*y,2*y),l.setRenderTarget(t),l.render(u,sl)}}function Ec(o,e,t){const n=new Zn(o,e,t);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Io(o,e,t,n,i){o.viewport.set(e,t,n,i),o.scissor.set(e,t,n,i)}function Tc(){return new qn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Ae,depthTest:!1,depthWrite:!1})}function Ac(){return new qn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Ae,depthTest:!1,depthWrite:!1})}function xp(o){let e=new WeakMap,t=null;function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);void 0!==c&&(e.delete(l),c.dispose())}return{get:function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===li||304===l,h=l===Un||302===l;if(c||h){if(a.isRenderTargetTexture&&!0===a.needsPMREMUpdate){a.needsPMREMUpdate=!1;let u=e.get(a);return null===t&&(t=new wc(o)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),e.set(a,u),u.texture}if(e.has(a))return e.get(a).texture;{const u=a.image;if(c&&u&&u.height>0||h&&u&&function i(a){let l=0;for(let h=0;h<6;h++)void 0!==a[h]&&l++;return 6===l}(u)){null===t&&(t=new wc(o));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}return null}}}return a},dispose:function r(){e=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function yp(o){const e={};function t(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=o.getExtension(n)}return e[n]=i,i}return{has:function(n){return null!==t(n)},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Mp(o,e,t,n){const i={},s=new WeakMap;function r(u){const d=u.target;null!==d.index&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",r),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),!0===d.isInstancedBufferGeometry&&delete d._maxInstanceCount,t.memory.geometries--}function c(u){const d=[],f=u.index,g=u.attributes.position;let m=0;if(null!==f){const _=f.array;m=f.version;for(let b=0,y=_.length;b<y;b+=3){const T=_[b+0],R=_[b+1],U=_[b+2];d.push(T,R,R,U,U,T)}}else{m=g.version;for(let b=0,y=g.array.length/3-1;b<y;b+=3){const T=b+0,R=b+1,U=b+2;d.push(T,R,R,U,U,T)}}const p=new(ec(d)?mc:pc)(d,1);p.version=m;const v=s.get(u);v&&e.remove(v),s.set(u,p)}return{get:function a(u,d){return!0===i[d.id]||(d.addEventListener("dispose",r),i[d.id]=!0,t.memory.geometries++),d},update:function l(u){const d=u.attributes;for(const g in d)e.update(d[g],34962);const f=u.morphAttributes;for(const g in f){const m=f[g];for(let p=0,v=m.length;p<v;p++)e.update(m[p],34962)}},getWireframeAttribute:function h(u){const d=s.get(u);if(d){const f=u.index;null!==f&&d.version<f.version&&c(u)}else c(u);return s.get(u)}}}function bp(o,e,t,n){const i=n.isWebGL2;let s,a,l;this.setMode=function r(d){s=d},this.setIndex=function c(d){a=d.type,l=d.bytesPerElement},this.render=function h(d,f){o.drawElements(s,f,a,d*l),t.update(f,s,1)},this.renderInstances=function u(d,f,g){if(0===g)return;let m,p;if(i)m=o,p="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",null===m)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");m[p](s,f,a,d*l,g),t.update(f,s,g)}}function Sp(o){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function n(s,r,a){switch(t.calls++,r){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function wp(o,e){return o[0]-e[0]}function Ep(o,e){return Math.abs(e[1])-Math.abs(o[1])}function al(o,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),o.divideScalar(t)}function Tp(o,e,t){const n={},i=new Float32Array(8),s=new WeakMap,r=new Vt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];return{update:function l(c,h,u,d){const f=c.morphTargetInfluences;if(!0===e.isWebGL2){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,m=void 0!==g?g.length:0;let p=s.get(h);if(void 0===p||p.count!==m){let le=function(){Ue.dispose(),s.delete(h),h.removeEventListener("dispose",le)};void 0!==p&&p.texture.dispose();const b=void 0!==h.morphAttributes.position,y=void 0!==h.morphAttributes.normal,T=void 0!==h.morphAttributes.color,R=h.morphAttributes.position||[],U=h.morphAttributes.normal||[],M=h.morphAttributes.color||[];let I=0;!0===b&&(I=1),!0===y&&(I=2),!0===T&&(I=3);let G=h.attributes.position.count*I,$=1;G>e.maxTextureSize&&($=Math.ceil(G/e.maxTextureSize),G=e.maxTextureSize);const _e=new Float32Array(G*$*4*m),Ue=new Ba(_e,G,$,m);Ue.type=en,Ue.needsUpdate=!0;const X=4*I;for(let ee=0;ee<m;ee++){const xe=R[ee],be=U[ee],se=M[ee],ue=G*$*4*ee;for(let We=0;We<xe.count;We++){const Pe=We*X;!0===b&&(r.fromBufferAttribute(xe,We),!0===xe.normalized&&al(r,xe),_e[ue+Pe+0]=r.x,_e[ue+Pe+1]=r.y,_e[ue+Pe+2]=r.z,_e[ue+Pe+3]=0),!0===y&&(r.fromBufferAttribute(be,We),!0===be.normalized&&al(r,be),_e[ue+Pe+4]=r.x,_e[ue+Pe+5]=r.y,_e[ue+Pe+6]=r.z,_e[ue+Pe+7]=0),!0===T&&(r.fromBufferAttribute(se,We),!0===se.normalized&&al(r,se),_e[ue+Pe+8]=r.x,_e[ue+Pe+9]=r.y,_e[ue+Pe+10]=r.z,_e[ue+Pe+11]=4===se.itemSize?r.w:1)}}p={count:m,texture:Ue,size:new Ee(G,$)},s.set(h,p),h.addEventListener("dispose",le)}let v=0;for(let b=0;b<f.length;b++)v+=f[b];const _=h.morphTargetsRelative?1:1-v;d.getUniforms().setValue(o,"morphTargetBaseInfluence",_),d.getUniforms().setValue(o,"morphTargetInfluences",f),d.getUniforms().setValue(o,"morphTargetsTexture",p.texture,t),d.getUniforms().setValue(o,"morphTargetsTextureSize",p.size)}else{const g=void 0===f?0:f.length;let m=n[h.id];if(void 0===m||m.length!==g){m=[];for(let y=0;y<g;y++)m[y]=[y,0];n[h.id]=m}for(let y=0;y<g;y++){const T=m[y];T[0]=y,T[1]=f[y]}m.sort(Ep);for(let y=0;y<8;y++)y<g&&m[y][1]?(a[y][0]=m[y][0],a[y][1]=m[y][1]):(a[y][0]=Number.MAX_SAFE_INTEGER,a[y][1]=0);a.sort(wp);const p=h.morphAttributes.position,v=h.morphAttributes.normal;let _=0;for(let y=0;y<8;y++){const T=a[y],R=T[0],U=T[1];R!==Number.MAX_SAFE_INTEGER&&U?(p&&h.getAttribute("morphTarget"+y)!==p[R]&&h.setAttribute("morphTarget"+y,p[R]),v&&h.getAttribute("morphNormal"+y)!==v[R]&&h.setAttribute("morphNormal"+y,v[R]),i[y]=U,_+=U):(p&&!0===h.hasAttribute("morphTarget"+y)&&h.deleteAttribute("morphTarget"+y),v&&!0===h.hasAttribute("morphNormal"+y)&&h.deleteAttribute("morphNormal"+y),i[y]=0)}const b=h.morphTargetsRelative?1:1-_;d.getUniforms().setValue(o,"morphTargetBaseInfluence",b),d.getUniforms().setValue(o,"morphTargetInfluences",i)}}}}function Ap(o,e,t,n){let i=new WeakMap;function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),null!==c.instanceColor&&t.remove(c.instanceColor)}return{update:function s(l){const c=n.render.frame,u=e.get(l,l.geometry);return i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",a)&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),null!==l.instanceColor&&t.update(l.instanceColor,34962)),u},dispose:function r(){i=new WeakMap}}}const Cc=new Gn,Pc=new Ba,Lc=new za,Rc=new Po,Ic=[],Dc=[],Oc=new Float32Array(16),Nc=new Float32Array(9),Fc=new Float32Array(4);function Fs(o,e,t){const n=o[0];if(n<=0||n>0)return o;const i=e*t;let s=Ic[i];if(void 0===s&&(s=new Float32Array(i),Ic[i]=s),0!==e){n.toArray(s,0);for(let r=1,a=0;r!==e;++r)a+=t,o[r].toArray(s,a)}return s}function bn(o,e){if(o.length!==e.length)return!1;for(let t=0,n=o.length;t<n;t++)if(o[t]!==e[t])return!1;return!0}function Sn(o,e){for(let t=0,n=e.length;t<n;t++)o[t]=e[t]}function Do(o,e){let t=Dc[e];void 0===t&&(t=new Int32Array(e),Dc[e]=t);for(let n=0;n!==e;++n)t[n]=o.allocateTextureUnit();return t}function Cp(o,e){const t=this.cache;t[0]!==e&&(o.uniform1f(this.addr,e),t[0]=e)}function Pp(o,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;o.uniform2fv(this.addr,e),Sn(t,e)}}function Lp(o,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(o.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(bn(t,e))return;o.uniform3fv(this.addr,e),Sn(t,e)}}function Rp(o,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;o.uniform4fv(this.addr,e),Sn(t,e)}}function Ip(o,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;o.uniformMatrix2fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Fc.set(n),o.uniformMatrix2fv(this.addr,!1,Fc),Sn(t,n)}}function Dp(o,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;o.uniformMatrix3fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Nc.set(n),o.uniformMatrix3fv(this.addr,!1,Nc),Sn(t,n)}}function Op(o,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;o.uniformMatrix4fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Oc.set(n),o.uniformMatrix4fv(this.addr,!1,Oc),Sn(t,n)}}function Np(o,e){const t=this.cache;t[0]!==e&&(o.uniform1i(this.addr,e),t[0]=e)}function Fp(o,e){const t=this.cache;bn(t,e)||(o.uniform2iv(this.addr,e),Sn(t,e))}function Bp(o,e){const t=this.cache;bn(t,e)||(o.uniform3iv(this.addr,e),Sn(t,e))}function zp(o,e){const t=this.cache;bn(t,e)||(o.uniform4iv(this.addr,e),Sn(t,e))}function Up(o,e){const t=this.cache;t[0]!==e&&(o.uniform1ui(this.addr,e),t[0]=e)}function kp(o,e){const t=this.cache;bn(t,e)||(o.uniform2uiv(this.addr,e),Sn(t,e))}function Vp(o,e){const t=this.cache;bn(t,e)||(o.uniform3uiv(this.addr,e),Sn(t,e))}function Wp(o,e){const t=this.cache;bn(t,e)||(o.uniform4uiv(this.addr,e),Sn(t,e))}function Gp(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Cc,i)}function Hp(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Lc,i)}function jp(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Rc,i)}function Xp(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Pc,i)}function Kp(o,e){o.uniform1fv(this.addr,e)}function Yp(o,e){const t=Fs(e,this.size,2);o.uniform2fv(this.addr,t)}function Jp(o,e){const t=Fs(e,this.size,3);o.uniform3fv(this.addr,t)}function Zp(o,e){const t=Fs(e,this.size,4);o.uniform4fv(this.addr,t)}function qp(o,e){const t=Fs(e,this.size,4);o.uniformMatrix2fv(this.addr,!1,t)}function Qp(o,e){const t=Fs(e,this.size,9);o.uniformMatrix3fv(this.addr,!1,t)}function em(o,e){const t=Fs(e,this.size,16);o.uniformMatrix4fv(this.addr,!1,t)}function tm(o,e){o.uniform1iv(this.addr,e)}function nm(o,e){o.uniform2iv(this.addr,e)}function im(o,e){o.uniform3iv(this.addr,e)}function sm(o,e){o.uniform4iv(this.addr,e)}function rm(o,e){o.uniform1uiv(this.addr,e)}function om(o,e){o.uniform2uiv(this.addr,e)}function am(o,e){o.uniform3uiv(this.addr,e)}function lm(o,e){o.uniform4uiv(this.addr,e)}function cm(o,e,t){const n=e.length,i=Do(t,n);o.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||Cc,i[s])}function hm(o,e,t){const n=e.length,i=Do(t,n);o.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Lc,i[s])}function um(o,e,t){const n=e.length,i=Do(t,n);o.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Rc,i[s])}function dm(o,e,t){const n=e.length,i=Do(t,n);o.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Pc,i[s])}class pm{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function $p(o){switch(o){case 5126:return Cp;case 35664:return Pp;case 35665:return Lp;case 35666:return Rp;case 35674:return Ip;case 35675:return Dp;case 35676:return Op;case 5124:case 35670:return Np;case 35667:case 35671:return Fp;case 35668:case 35672:return Bp;case 35669:case 35673:return zp;case 5125:return Up;case 36294:return kp;case 36295:return Vp;case 36296:return Wp;case 35678:case 36198:case 36298:case 36306:case 35682:return Gp;case 35679:case 36299:case 36307:return Hp;case 35680:case 36300:case 36308:case 36293:return jp;case 36289:case 36303:case 36311:case 36292:return Xp}}(t.type)}}class mm{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function fm(o){switch(o){case 5126:return Kp;case 35664:return Yp;case 35665:return Jp;case 35666:return Zp;case 35674:return qp;case 35675:return Qp;case 35676:return em;case 5124:case 35670:return tm;case 35667:case 35671:return nm;case 35668:case 35672:return im;case 35669:case 35673:return sm;case 5125:return rm;case 36294:return om;case 36295:return am;case 36296:return lm;case 35678:case 36198:case 36298:case 36306:case 35682:return cm;case 35679:case 36299:case 36307:return hm;case 35680:case 36300:case 36308:case 36293:return um;case 36289:case 36303:case 36311:case 36292:return dm}}(t.type)}}class gm{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const ll=/(\w+)(\])?(\[|\.)?/g;function Bc(o,e){o.seq.push(e),o.map[e.id]=e}function vm(o,e,t){const n=o.name,i=n.length;for(ll.lastIndex=0;;){const s=ll.exec(n),r=ll.lastIndex;let a=s[1];const c=s[3];if("]"===s[2]&&(a|=0),void 0===c||"["===c&&r+2===i){Bc(t,void 0===c?new pm(a,o,e):new mm(a,o,e));break}{let u=t.map[a];void 0===u&&(u=new gm(a),Bc(t,u)),t=u}}}class Oo{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i);vm(s,e.getUniformLocation(t,s.name),this)}}setValue(e,t,n,i){const s=this.map[t];void 0!==s&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,r=t.length;s!==r;++s){const a=t[s],l=n[a.id];!1!==l.needsUpdate&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function zc(o,e,t){const n=o.createShader(e);return o.shaderSource(n,t),o.compileShader(n),n}let _m=0;function Uc(o,e,t){const n=o.getShaderParameter(e,35713),i=o.getShaderInfoLog(e).trim();if(n&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return t.toUpperCase()+"\n\n"+i+"\n\n"+function xm(o,e){const t=o.split("\n"),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let r=i;r<s;r++){const a=r+1;n.push(`${a===e?">":" "} ${a}: ${t[r]}`)}return n.join("\n")}(o.getShaderSource(e),r)}return i}function Mm(o,e){const t=function ym(o){switch(o){case bi:return["Linear","( value )"];case Xt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",o),["Linear","( value )"]}}(e);return"vec4 "+o+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function bm(o,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case nr:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+o+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function mr(o){return""!==o}function kc(o,e){return o.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Vc(o,e){return o.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Tm=/^[ \t]*#include +<([\w\d./]+)>/gm;function cl(o){return o.replace(Tm,Am)}function Am(o,e){const t=Pt[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return cl(t)}const Cm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Pm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Wc(o){return o.replace(Pm,Gc).replace(Cm,Lm)}function Lm(o,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Gc(0,e,t,n)}function Gc(o,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Hc(o){let e="precision "+o.precision+" float;\nprecision "+o.precision+" int;";return"highp"===o.precision?e+="\n#define HIGH_PRECISION":"mediump"===o.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===o.precision&&(e+="\n#define LOW_PRECISION"),e}function Fm(o,e,t,n){const i=o.getContext(),s=t.defines;let r=t.vertexShader,a=t.fragmentShader;const l=function Rm(o){let e="SHADOWMAP_TYPE_BASIC";return 1===o.shadowMapType?e="SHADOWMAP_TYPE_PCF":o.shadowMapType===ke?e="SHADOWMAP_TYPE_PCF_SOFT":3===o.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(t),c=function Im(o){let e="ENVMAP_TYPE_CUBE";if(o.envMap)switch(o.envMapMode){case Un:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:e="ENVMAP_TYPE_CUBE_UV"}return e}(t),h=function Dm(o){let e="ENVMAP_MODE_REFLECTION";return o.envMap&&302===o.envMapMode&&(e="ENVMAP_MODE_REFRACTION"),e}(t),u=function Om(o){let e="ENVMAP_BLENDING_NONE";if(o.envMap)switch(o.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(t),d=function Nm(o){const e=o.envMapCubeUVHeight;if(null===e)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}(t),f=t.isWebGL2?"":function Sm(o){return[o.extensionDerivatives||o.envMapCubeUVHeight||o.bumpMap||o.tangentSpaceNormalMap||o.clearcoatNormalMap||o.flatShading||"physical"===o.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(o.extensionFragDepth||o.logarithmicDepthBuffer)&&o.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",o.extensionDrawBuffers&&o.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(o.extensionShaderTextureLOD||o.envMap||o.transmission)&&o.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(mr).join("\n")}(t),g=function wm(o){const e=[];for(const t in o){const n=o[t];!1!==n&&e.push("#define "+t+" "+n)}return e.join("\n")}(s),m=i.createProgram();let p,v,_=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(p=[g].filter(mr).join("\n"),p.length>0&&(p+="\n"),v=[f,g].filter(mr).join("\n"),v.length>0&&(v+="\n")):(p=[Hc(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(mr).join("\n"),v=[f,Hc(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bt?"#define TONE_MAPPING":"",t.toneMapping!==Bt?Pt.tonemapping_pars_fragment:"",t.toneMapping!==Bt?bm("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Pt.encodings_pars_fragment,Mm("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(mr).join("\n")),r=cl(r),r=kc(r,t),r=Vc(r,t),a=cl(a),a=kc(a,t),a=Vc(a,t),r=Wc(r),a=Wc(a),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(_="#version 300 es\n",p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+p,v=["#define varying in","300 es"===t.glslVersion?"":"layout(location = 0) out highp vec4 pc_fragColor;","300 es"===t.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const y=_+v+a,T=zc(i,35633,_+p+r),R=zc(i,35632,y);if(i.attachShader(m,T),i.attachShader(m,R),void 0!==t.index0AttributeName?i.bindAttribLocation(m,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),o.debug.checkShaderErrors){const I=i.getProgramInfoLog(m).trim(),G=i.getShaderInfoLog(T).trim(),$=i.getShaderInfoLog(R).trim();let _e=!0,Ue=!0;if(!1===i.getProgramParameter(m,35714)){_e=!1;const X=Uc(i,T,"vertex"),le=Uc(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+I+"\n"+X+"\n"+le)}else""!==I?console.warn("THREE.WebGLProgram: Program Info Log:",I):(""===G||""===$)&&(Ue=!1);Ue&&(this.diagnostics={runnable:_e,programLog:I,vertexShader:{log:G,prefix:p},fragmentShader:{log:$,prefix:v}})}let U,M;return i.deleteShader(T),i.deleteShader(R),this.getUniforms=function(){return void 0===U&&(U=new Oo(i,m)),U},this.getAttributes=function(){return void 0===M&&(M=function Em(o,e){const t={},n=o.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=o.getActiveAttrib(e,i),r=s.name;let a=1;35674===s.type&&(a=2),35675===s.type&&(a=3),35676===s.type&&(a=4),t[r]={type:s.type,location:o.getAttribLocation(e,r),locationSize:a}}return t}(i,m)),M},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=_m++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=T,this.fragmentShader=R,this}let Bm=0;class zm{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.fragmentShader,i=this._getShaderStage(e.vertexShader),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new Um(e);t.set(e,n)}return t.get(e)}}class Um{constructor(e){this.id=Bm++,this.code=e,this.usedTimes=0}}function km(o,e,t,n,i,s,r){const a=new vo,l=new zm,c=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function m(M,I,G,$,_e){const Ue=$.fog,X=_e.geometry,ee=(M.isMeshStandardMaterial?t:e).get(M.envMap||(M.isMeshStandardMaterial?$.environment:null)),xe=ee&&306===ee.mapping?ee.image.height:null,be=g[M.type];null!==M.precision&&(f=i.getMaxPrecision(M.precision),f!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",f,"instead."));const se=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,ue=void 0!==se?se.length:0;let Pe,Je,at,ut,We=0;if(void 0!==X.morphAttributes.position&&(We=1),void 0!==X.morphAttributes.normal&&(We=2),void 0!==X.morphAttributes.color&&(We=3),be){const Lt=Qn[be];Pe=Lt.vertexShader,Je=Lt.fragmentShader}else Pe=M.vertexShader,Je=M.fragmentShader,l.update(M),at=l.getVertexShaderID(M),ut=l.getFragmentShaderID(M);const de=o.getRenderTarget(),vt=M.clearcoat>0,St=M.iridescence>0;return{isWebGL2:h,shaderID:be,shaderName:M.type,vertexShader:Pe,fragmentShader:Je,defines:M.defines,customVertexShaderID:at,customFragmentShaderID:ut,isRawShaderMaterial:!0===M.isRawShaderMaterial,glslVersion:M.glslVersion,precision:f,instancing:!0===_e.isInstancedMesh,instancingColor:!0===_e.isInstancedMesh&&null!==_e.instanceColor,supportsVertexTextures:d,outputEncoding:null===de?o.outputEncoding:!0===de.isXRRenderTarget?de.texture.encoding:bi,map:!!M.map,matcap:!!M.matcap,envMap:!!ee,envMapMode:ee&&ee.mapping,envMapCubeUVHeight:xe,lightMap:!!M.lightMap,aoMap:!!M.aoMap,emissiveMap:!!M.emissiveMap,bumpMap:!!M.bumpMap,normalMap:!!M.normalMap,objectSpaceNormalMap:1===M.normalMapType,tangentSpaceNormalMap:M.normalMapType===Vi,decodeVideoTexture:!!M.map&&!0===M.map.isVideoTexture&&M.map.encoding===Xt,clearcoat:vt,clearcoatMap:vt&&!!M.clearcoatMap,clearcoatRoughnessMap:vt&&!!M.clearcoatRoughnessMap,clearcoatNormalMap:vt&&!!M.clearcoatNormalMap,iridescence:St,iridescenceMap:St&&!!M.iridescenceMap,iridescenceThicknessMap:St&&!!M.iridescenceThicknessMap,displacementMap:!!M.displacementMap,roughnessMap:!!M.roughnessMap,metalnessMap:!!M.metalnessMap,specularMap:!!M.specularMap,specularIntensityMap:!!M.specularIntensityMap,specularColorMap:!!M.specularColorMap,opaque:!1===M.transparent&&1===M.blending,alphaMap:!!M.alphaMap,alphaTest:M.alphaTest>0,gradientMap:!!M.gradientMap,sheen:M.sheen>0,sheenColorMap:!!M.sheenColorMap,sheenRoughnessMap:!!M.sheenRoughnessMap,transmission:M.transmission>0,transmissionMap:!!M.transmissionMap,thicknessMap:!!M.thicknessMap,combine:M.combine,vertexTangents:!!M.normalMap&&!!X.attributes.tangent,vertexColors:M.vertexColors,vertexAlphas:!0===M.vertexColors&&!!X.attributes.color&&4===X.attributes.color.itemSize,vertexUvs:!!(M.map||M.bumpMap||M.normalMap||M.specularMap||M.alphaMap||M.emissiveMap||M.roughnessMap||M.metalnessMap||M.clearcoatMap||M.clearcoatRoughnessMap||M.clearcoatNormalMap||M.iridescenceMap||M.iridescenceThicknessMap||M.displacementMap||M.transmissionMap||M.thicknessMap||M.specularIntensityMap||M.specularColorMap||M.sheenColorMap||M.sheenRoughnessMap),uvsVertexOnly:!(M.map||M.bumpMap||M.normalMap||M.specularMap||M.alphaMap||M.emissiveMap||M.roughnessMap||M.metalnessMap||M.clearcoatNormalMap||M.iridescenceMap||M.iridescenceThicknessMap||M.transmission>0||M.transmissionMap||M.thicknessMap||M.specularIntensityMap||M.specularColorMap||M.sheen>0||M.sheenColorMap||M.sheenRoughnessMap||!M.displacementMap),fog:!!Ue,useFog:!0===M.fog,fogExp2:Ue&&Ue.isFogExp2,flatShading:!!M.flatShading,sizeAttenuation:M.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===_e.isSkinnedMesh,morphTargets:void 0!==X.morphAttributes.position,morphNormals:void 0!==X.morphAttributes.normal,morphColors:void 0!==X.morphAttributes.color,morphTargetsCount:ue,morphTextureStride:We,numDirLights:I.directional.length,numPointLights:I.point.length,numSpotLights:I.spot.length,numRectAreaLights:I.rectArea.length,numHemiLights:I.hemi.length,numDirLightShadows:I.directionalShadowMap.length,numPointLightShadows:I.pointShadowMap.length,numSpotLightShadows:I.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:M.dithering,shadowMapEnabled:o.shadowMap.enabled&&G.length>0,shadowMapType:o.shadowMap.type,toneMapping:M.toneMapped?o.toneMapping:Bt,physicallyCorrectLights:o.physicallyCorrectLights,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Me,flipSided:M.side===ce,useDepthPacking:!!M.depthPacking,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionDerivatives:M.extensions&&M.extensions.derivatives,extensionFragDepth:M.extensions&&M.extensions.fragDepth,extensionDrawBuffers:M.extensions&&M.extensions.drawBuffers,extensionShaderTextureLOD:M.extensions&&M.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}},getProgramCacheKey:function p(M){const I=[];if(M.shaderID?I.push(M.shaderID):(I.push(M.customVertexShaderID),I.push(M.customFragmentShaderID)),void 0!==M.defines)for(const G in M.defines)I.push(G),I.push(M.defines[G]);return!1===M.isRawShaderMaterial&&(function v(M,I){M.push(I.precision),M.push(I.outputEncoding),M.push(I.envMapMode),M.push(I.envMapCubeUVHeight),M.push(I.combine),M.push(I.vertexUvs),M.push(I.fogExp2),M.push(I.sizeAttenuation),M.push(I.morphTargetsCount),M.push(I.morphAttributeCount),M.push(I.numDirLights),M.push(I.numPointLights),M.push(I.numSpotLights),M.push(I.numHemiLights),M.push(I.numRectAreaLights),M.push(I.numDirLightShadows),M.push(I.numPointLightShadows),M.push(I.numSpotLightShadows),M.push(I.shadowMapType),M.push(I.toneMapping),M.push(I.numClippingPlanes),M.push(I.numClipIntersection),M.push(I.depthPacking)}(I,M),function _(M,I){a.disableAll(),I.isWebGL2&&a.enable(0),I.supportsVertexTextures&&a.enable(1),I.instancing&&a.enable(2),I.instancingColor&&a.enable(3),I.map&&a.enable(4),I.matcap&&a.enable(5),I.envMap&&a.enable(6),I.lightMap&&a.enable(7),I.aoMap&&a.enable(8),I.emissiveMap&&a.enable(9),I.bumpMap&&a.enable(10),I.normalMap&&a.enable(11),I.objectSpaceNormalMap&&a.enable(12),I.tangentSpaceNormalMap&&a.enable(13),I.clearcoat&&a.enable(14),I.clearcoatMap&&a.enable(15),I.clearcoatRoughnessMap&&a.enable(16),I.clearcoatNormalMap&&a.enable(17),I.iridescence&&a.enable(18),I.iridescenceMap&&a.enable(19),I.iridescenceThicknessMap&&a.enable(20),I.displacementMap&&a.enable(21),I.specularMap&&a.enable(22),I.roughnessMap&&a.enable(23),I.metalnessMap&&a.enable(24),I.gradientMap&&a.enable(25),I.alphaMap&&a.enable(26),I.alphaTest&&a.enable(27),I.vertexColors&&a.enable(28),I.vertexAlphas&&a.enable(29),I.vertexUvs&&a.enable(30),I.vertexTangents&&a.enable(31),I.uvsVertexOnly&&a.enable(32),I.fog&&a.enable(33),M.push(a.mask),a.disableAll(),I.useFog&&a.enable(0),I.flatShading&&a.enable(1),I.logarithmicDepthBuffer&&a.enable(2),I.skinning&&a.enable(3),I.morphTargets&&a.enable(4),I.morphNormals&&a.enable(5),I.morphColors&&a.enable(6),I.premultipliedAlpha&&a.enable(7),I.shadowMapEnabled&&a.enable(8),I.physicallyCorrectLights&&a.enable(9),I.doubleSided&&a.enable(10),I.flipSided&&a.enable(11),I.useDepthPacking&&a.enable(12),I.dithering&&a.enable(13),I.specularIntensityMap&&a.enable(14),I.specularColorMap&&a.enable(15),I.transmission&&a.enable(16),I.transmissionMap&&a.enable(17),I.thicknessMap&&a.enable(18),I.sheen&&a.enable(19),I.sheenColorMap&&a.enable(20),I.sheenRoughnessMap&&a.enable(21),I.decodeVideoTexture&&a.enable(22),I.opaque&&a.enable(23),M.push(a.mask)}(I,M),I.push(o.outputEncoding)),I.push(M.customProgramCacheKey),I.join()},getUniforms:function b(M){const I=g[M.type];let G;return G=I?vc.clone(Qn[I].uniforms):M.uniforms,G},acquireProgram:function y(M,I){let G;for(let $=0,_e=c.length;$<_e;$++){const Ue=c[$];if(Ue.cacheKey===I){G=Ue,++G.usedTimes;break}}return void 0===G&&(G=new Fm(o,I,M,s),c.push(G)),G},releaseProgram:function T(M){if(0==--M.usedTimes){const I=c.indexOf(M);c[I]=c[c.length-1],c.pop(),M.destroy()}},releaseShaderCache:function R(M){l.remove(M)},programs:c,dispose:function U(){l.dispose()}}}function Vm(){let o=new WeakMap;return{get:function e(s){let r=o.get(s);return void 0===r&&(r={},o.set(s,r)),r},remove:function t(s){o.delete(s)},update:function n(s,r,a){o.get(s)[r]=a},dispose:function i(){o=new WeakMap}}}function Wm(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function jc(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function Xc(){const o=[];let e=0;const t=[],n=[],i=[];function r(u,d,f,g,m,p){let v=o[e];return void 0===v?(v={id:u.id,object:u,geometry:d,material:f,groupOrder:g,renderOrder:u.renderOrder,z:m,group:p},o[e]=v):(v.id=u.id,v.object=u,v.geometry=d,v.material=f,v.groupOrder=g,v.renderOrder=u.renderOrder,v.z=m,v.group=p),e++,v}return{opaque:t,transmissive:n,transparent:i,init:function s(){e=0,t.length=0,n.length=0,i.length=0},push:function a(u,d,f,g,m,p){const v=r(u,d,f,g,m,p);f.transmission>0?n.push(v):!0===f.transparent?i.push(v):t.push(v)},unshift:function l(u,d,f,g,m,p){const v=r(u,d,f,g,m,p);f.transmission>0?n.unshift(v):!0===f.transparent?i.unshift(v):t.unshift(v)},finish:function h(){for(let u=e,d=o.length;u<d;u++){const f=o[u];if(null===f.id)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}},sort:function c(u,d){t.length>1&&t.sort(u||Wm),n.length>1&&n.sort(d||jc),i.length>1&&i.sort(d||jc)}}}function Gm(){let o=new WeakMap;return{get:function e(n,i){let s;return!1===o.has(n)?(s=new Xc,o.set(n,[s])):i>=o.get(n).length?(s=new Xc,o.get(n).push(s)):s=o.get(n)[i],s},dispose:function t(){o=new WeakMap}}}function Hm(){const o={};return{get:function(e){if(void 0!==o[e.id])return o[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new A,color:new tt};break;case"SpotLight":t={position:new A,direction:new A,color:new tt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new A,color:new tt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new A,skyColor:new tt,groundColor:new tt};break;case"RectAreaLight":t={color:new tt,position:new A,halfWidth:new A,halfHeight:new A}}return o[e.id]=t,t}}}let Xm=0;function $m(o,e){return(e.castShadow?1:0)-(o.castShadow?1:0)}function Km(o,e){const t=new Hm,n=function jm(){const o={};return{get:function(e){if(void 0!==o[e.id])return o[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee,shadowCameraNear:1,shadowCameraFar:1e3}}return o[e.id]=t,t}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)i.probe.push(new A);const s=new A,r=new Tt,a=new Tt;return{setup:function l(h,u){let d=0,f=0,g=0;for(let I=0;I<9;I++)i.probe[I].set(0,0,0);let m=0,p=0,v=0,_=0,b=0,y=0,T=0,R=0;h.sort($m);const U=!0!==u?Math.PI:1;for(let I=0,G=h.length;I<G;I++){const $=h[I],_e=$.color,Ue=$.intensity,X=$.distance,le=$.shadow&&$.shadow.map?$.shadow.map.texture:null;if($.isAmbientLight)d+=_e.r*Ue*U,f+=_e.g*Ue*U,g+=_e.b*Ue*U;else if($.isLightProbe)for(let ee=0;ee<9;ee++)i.probe[ee].addScaledVector($.sh.coefficients[ee],Ue);else if($.isDirectionalLight){const ee=t.get($);if(ee.color.copy($.color).multiplyScalar($.intensity*U),$.castShadow){const xe=$.shadow,be=n.get($);be.shadowBias=xe.bias,be.shadowNormalBias=xe.normalBias,be.shadowRadius=xe.radius,be.shadowMapSize=xe.mapSize,i.directionalShadow[m]=be,i.directionalShadowMap[m]=le,i.directionalShadowMatrix[m]=$.shadow.matrix,y++}i.directional[m]=ee,m++}else if($.isSpotLight){const ee=t.get($);if(ee.position.setFromMatrixPosition($.matrixWorld),ee.color.copy(_e).multiplyScalar(Ue*U),ee.distance=X,ee.coneCos=Math.cos($.angle),ee.penumbraCos=Math.cos($.angle*(1-$.penumbra)),ee.decay=$.decay,$.castShadow){const xe=$.shadow,be=n.get($);be.shadowBias=xe.bias,be.shadowNormalBias=xe.normalBias,be.shadowRadius=xe.radius,be.shadowMapSize=xe.mapSize,i.spotShadow[v]=be,i.spotShadowMap[v]=le,i.spotShadowMatrix[v]=$.shadow.matrix,R++}i.spot[v]=ee,v++}else if($.isRectAreaLight){const ee=t.get($);ee.color.copy(_e).multiplyScalar(Ue),ee.halfWidth.set(.5*$.width,0,0),ee.halfHeight.set(0,.5*$.height,0),i.rectArea[_]=ee,_++}else if($.isPointLight){const ee=t.get($);if(ee.color.copy($.color).multiplyScalar($.intensity*U),ee.distance=$.distance,ee.decay=$.decay,$.castShadow){const xe=$.shadow,be=n.get($);be.shadowBias=xe.bias,be.shadowNormalBias=xe.normalBias,be.shadowRadius=xe.radius,be.shadowMapSize=xe.mapSize,be.shadowCameraNear=xe.camera.near,be.shadowCameraFar=xe.camera.far,i.pointShadow[p]=be,i.pointShadowMap[p]=le,i.pointShadowMatrix[p]=$.shadow.matrix,T++}i.point[p]=ee,p++}else if($.isHemisphereLight){const ee=t.get($);ee.skyColor.copy($.color).multiplyScalar(Ue*U),ee.groundColor.copy($.groundColor).multiplyScalar(Ue*U),i.hemi[b]=ee,b++}}_>0&&(e.isWebGL2||!0===o.has("OES_texture_float_linear")?(i.rectAreaLTC1=$e.LTC_FLOAT_1,i.rectAreaLTC2=$e.LTC_FLOAT_2):!0===o.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=$e.LTC_HALF_1,i.rectAreaLTC2=$e.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=g;const M=i.hash;(M.directionalLength!==m||M.pointLength!==p||M.spotLength!==v||M.rectAreaLength!==_||M.hemiLength!==b||M.numDirectionalShadows!==y||M.numPointShadows!==T||M.numSpotShadows!==R)&&(i.directional.length=m,i.spot.length=v,i.rectArea.length=_,i.point.length=p,i.hemi.length=b,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=T,i.pointShadowMap.length=T,i.spotShadow.length=R,i.spotShadowMap.length=R,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=T,i.spotShadowMatrix.length=R,M.directionalLength=m,M.pointLength=p,M.spotLength=v,M.rectAreaLength=_,M.hemiLength=b,M.numDirectionalShadows=y,M.numPointShadows=T,M.numSpotShadows=R,i.version=Xm++)},setupView:function c(h,u){let d=0,f=0,g=0,m=0,p=0;const v=u.matrixWorldInverse;for(let _=0,b=h.length;_<b;_++){const y=h[_];if(y.isDirectionalLight){const T=i.directional[d];T.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(v),d++}else if(y.isSpotLight){const T=i.spot[g];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(v),T.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(v),g++}else if(y.isRectAreaLight){const T=i.rectArea[m];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(v),a.identity(),r.copy(y.matrixWorld),r.premultiply(v),a.extractRotation(r),T.halfWidth.set(.5*y.width,0,0),T.halfHeight.set(0,.5*y.height,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),m++}else if(y.isPointLight){const T=i.point[f];T.position.setFromMatrixPosition(y.matrixWorld),T.position.applyMatrix4(v),f++}else if(y.isHemisphereLight){const T=i.hemi[p];T.direction.setFromMatrixPosition(y.matrixWorld),T.direction.transformDirection(v),p++}}},state:i}}function $c(o,e){const t=new Km(o,e),n=[],i=[];return{init:function s(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:function l(u){t.setup(n,u)},setupLightsView:function c(u){t.setupView(n,u)},pushLight:function r(u){n.push(u)},pushShadow:function a(u){i.push(u)}}}function Ym(o,e){let t=new WeakMap;return{get:function n(s,r=0){let a;return!1===t.has(s)?(a=new $c(o,e),t.set(s,[a])):r>=t.get(s).length?(a=new $c(o,e),t.get(s).push(a)):a=t.get(s)[r],a},dispose:function i(){t=new WeakMap}}}class hl extends un{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Yl,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ul extends un{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function qm(o,e,t){let n=new il;const i=new Ee,s=new Ee,r=new Vt,a=new hl({depthPacking:Jl}),l=new ul,c={},h=t.maxTextureSize,u={0:ce,1:rt,2:Me},d=new qn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ee},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const g=new At;g.setAttribute("position",new ln(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new xn(g,d),p=this;function v(y,T){const R=e.update(m);d.defines.VSM_SAMPLES!==y.blurSamples&&(d.defines.VSM_SAMPLES=y.blurSamples,f.defines.VSM_SAMPLES=y.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),d.uniforms.shadow_pass.value=y.map.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,o.setRenderTarget(y.mapPass),o.clear(),o.renderBufferDirect(T,null,R,d,m,null),f.uniforms.shadow_pass.value=y.mapPass.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,o.setRenderTarget(y.map),o.clear(),o.renderBufferDirect(T,null,R,f,m,null)}function _(y,T,R,U,M,I){let G=null;const $=!0===R.isPointLight?y.customDistanceMaterial:y.customDepthMaterial;if(G=void 0!==$?$:!0===R.isPointLight?l:a,o.localClippingEnabled&&!0===T.clipShadows&&0!==T.clippingPlanes.length||T.displacementMap&&0!==T.displacementScale||T.alphaMap&&T.alphaTest>0){const _e=G.uuid,Ue=T.uuid;let X=c[_e];void 0===X&&(X={},c[_e]=X);let le=X[Ue];void 0===le&&(le=G.clone(),X[Ue]=le),G=le}return G.visible=T.visible,G.wireframe=T.wireframe,G.side=3===I?null!==T.shadowSide?T.shadowSide:T.side:null!==T.shadowSide?T.shadowSide:u[T.side],G.alphaMap=T.alphaMap,G.alphaTest=T.alphaTest,G.clipShadows=T.clipShadows,G.clippingPlanes=T.clippingPlanes,G.clipIntersection=T.clipIntersection,G.displacementMap=T.displacementMap,G.displacementScale=T.displacementScale,G.displacementBias=T.displacementBias,G.wireframeLinewidth=T.wireframeLinewidth,G.linewidth=T.linewidth,!0===R.isPointLight&&!0===G.isMeshDistanceMaterial&&(G.referencePosition.setFromMatrixPosition(R.matrixWorld),G.nearDistance=U,G.farDistance=M),G}function b(y,T,R,U,M){if(!1===y.visible)return;if(y.layers.test(T.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&3===M)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,y.matrixWorld);const $=e.update(y),_e=y.material;if(Array.isArray(_e)){const Ue=$.groups;for(let X=0,le=Ue.length;X<le;X++){const ee=Ue[X],xe=_e[ee.materialIndex];if(xe&&xe.visible){const be=_(y,xe,U,R.near,R.far,M);o.renderBufferDirect(R,null,$,be,y,ee)}}}else if(_e.visible){const Ue=_(y,_e,U,R.near,R.far,M);o.renderBufferDirect(R,null,$,Ue,y,null)}}const G=y.children;for(let $=0,_e=G.length;$<_e;$++)b(G[$],T,R,U,M)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(y,T,R){if(!1===p.enabled||!1===p.autoUpdate&&!1===p.needsUpdate||0===y.length)return;const U=o.getRenderTarget(),M=o.getActiveCubeFace(),I=o.getActiveMipmapLevel(),G=o.state;G.setBlending(Ae),G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);for(let $=0,_e=y.length;$<_e;$++){const Ue=y[$],X=Ue.shadow;if(void 0===X){console.warn("THREE.WebGLShadowMap:",Ue,"has no shadow.");continue}if(!1===X.autoUpdate&&!1===X.needsUpdate)continue;i.copy(X.mapSize);const le=X.getFrameExtents();i.multiply(le),s.copy(X.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/le.x),i.x=s.x*le.x,X.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/le.y),i.y=s.y*le.y,X.mapSize.y=s.y)),null===X.map&&!X.isPointLightShadow&&3===this.type&&(X.map=new Zn(i.x,i.y),X.map.texture.name=Ue.name+".shadowMap",X.mapPass=new Zn(i.x,i.y),X.camera.updateProjectionMatrix()),null===X.map&&(X.map=new Zn(i.x,i.y,{minFilter:Qt,magFilter:Qt,format:Mn}),X.map.texture.name=Ue.name+".shadowMap",X.camera.updateProjectionMatrix()),o.setRenderTarget(X.map),o.clear();const ee=X.getViewportCount();for(let xe=0;xe<ee;xe++){const be=X.getViewport(xe);r.set(s.x*be.x,s.y*be.y,s.x*be.z,s.y*be.w),G.viewport(r),X.updateMatrices(Ue,xe),n=X.getFrustum(),b(T,R,X.camera,Ue,this.type)}!X.isPointLightShadow&&3===this.type&&v(X,R),X.needsUpdate=!1}p.needsUpdate=!1,o.setRenderTarget(U,M,I)}}function Qm(o,e,t){const n=t.isWebGL2,a=new function i(){let k=!1;const Ye=new Vt;let Xe=null;const gt=new Vt(0,0,0,0);return{setMask:function(st){Xe!==st&&!k&&(o.colorMask(st,st,st,st),Xe=st)},setLocked:function(st){k=st},setClear:function(st,yt,Ge,Mt,zt){!0===zt&&(st*=Mt,yt*=Mt,Ge*=Mt),Ye.set(st,yt,Ge,Mt),!1===gt.equals(Ye)&&(o.clearColor(st,yt,Ge,Mt),gt.copy(Ye))},reset:function(){k=!1,Xe=null,gt.set(-1,0,0,0)}}},l=new function s(){let k=!1,Ye=null,Xe=null,gt=null;return{setTest:function(st){st?ut(2929):de(2929)},setMask:function(st){Ye!==st&&!k&&(o.depthMask(st),Ye=st)},setFunc:function(st){if(Xe!==st){if(st)switch(st){case 0:o.depthFunc(512);break;case 1:o.depthFunc(519);break;case 2:o.depthFunc(513);break;case 3:default:o.depthFunc(515);break;case 4:o.depthFunc(514);break;case 5:o.depthFunc(518);break;case 6:o.depthFunc(516);break;case 7:o.depthFunc(517)}else o.depthFunc(515);Xe=st}},setLocked:function(st){k=st},setClear:function(st){gt!==st&&(o.clearDepth(st),gt=st)},reset:function(){k=!1,Ye=null,Xe=null,gt=null}}},c=new function r(){let k=!1,Ye=null,Xe=null,gt=null,st=null,yt=null,Ge=null,Mt=null,zt=null;return{setTest:function(Ut){k||(Ut?ut(2960):de(2960))},setMask:function(Ut){Ye!==Ut&&!k&&(o.stencilMask(Ut),Ye=Ut)},setFunc:function(Ut,Tn,ni){(Xe!==Ut||gt!==Tn||st!==ni)&&(o.stencilFunc(Ut,Tn,ni),Xe=Ut,gt=Tn,st=ni)},setOp:function(Ut,Tn,ni){(yt!==Ut||Ge!==Tn||Mt!==ni)&&(o.stencilOp(Ut,Tn,ni),yt=Ut,Ge=Tn,Mt=ni)},setLocked:function(Ut){k=Ut},setClear:function(Ut){zt!==Ut&&(o.clearStencil(Ut),zt=Ut)},reset:function(){k=!1,Ye=null,Xe=null,gt=null,st=null,yt=null,Ge=null,Mt=null,zt=null}}};let h={},u={},d=new WeakMap,f=[],g=null,m=!1,p=null,v=null,_=null,b=null,y=null,T=null,R=null,U=!1,M=null,I=null,G=null,$=null,_e=null;const Ue=o.getParameter(35661);let X=!1,le=0;const ee=o.getParameter(7938);-1!==ee.indexOf("WebGL")?(le=parseFloat(/^WebGL (\d)/.exec(ee)[1]),X=le>=1):-1!==ee.indexOf("OpenGL ES")&&(le=parseFloat(/^OpenGL ES (\d)/.exec(ee)[1]),X=le>=2);let xe=null,be={};const se=o.getParameter(3088),ue=o.getParameter(2978),We=(new Vt).fromArray(se),Pe=(new Vt).fromArray(ue);function Je(k,Ye,Xe){const gt=new Uint8Array(4),st=o.createTexture();o.bindTexture(k,st),o.texParameteri(k,10241,9728),o.texParameteri(k,10240,9728);for(let yt=0;yt<Xe;yt++)o.texImage2D(Ye+yt,0,6408,1,1,0,6408,5121,gt);return st}const at={};function ut(k){!0!==h[k]&&(o.enable(k),h[k]=!0)}function de(k){!1!==h[k]&&(o.disable(k),h[k]=!1)}at[3553]=Je(3553,3553,1),at[34067]=Je(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ut(2929),l.setFunc(3),je(!1),lt(1),ut(2884),ye(Ae);const Ke={100:32774,101:32778,102:32779};if(n)Ke[103]=32775,Ke[104]=32776;else{const k=e.get("EXT_blend_minmax");null!==k&&(Ke[103]=k.MIN_EXT,Ke[104]=k.MAX_EXT)}const Lt={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function ye(k,Ye,Xe,gt,st,yt,Ge,Mt){if(k!==Ae){if(!1===m&&(ut(3042),m=!0),5===k)st=st||Ye,yt=yt||Xe,Ge=Ge||gt,(Ye!==v||st!==y)&&(o.blendEquationSeparate(Ke[Ye],Ke[st]),v=Ye,y=st),(Xe!==_||gt!==b||yt!==T||Ge!==R)&&(o.blendFuncSeparate(Lt[Xe],Lt[gt],Lt[yt],Lt[Ge]),_=Xe,b=gt,T=yt,R=Ge),p=k,U=null;else if(k!==p||Mt!==U){if((100!==v||100!==y)&&(o.blendEquation(32774),v=100,y=100),Mt)switch(k){case 1:o.blendFuncSeparate(1,771,1,771);break;case 2:o.blendFunc(1,1);break;case 3:o.blendFuncSeparate(0,769,0,1);break;case 4:o.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",k)}else switch(k){case 1:o.blendFuncSeparate(770,771,1,771);break;case 2:o.blendFunc(770,1);break;case 3:o.blendFuncSeparate(0,769,0,1);break;case 4:o.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",k)}_=null,b=null,T=null,R=null,p=k,U=Mt}}else!0===m&&(de(3042),m=!1)}function je(k){M!==k&&(o.frontFace(k?2304:2305),M=k)}function lt(k){0!==k?(ut(2884),k!==I&&o.cullFace(1===k?1029:2===k?1028:1032)):de(2884),I=k}function wt(k,Ye,Xe){k?(ut(32823),($!==Ye||_e!==Xe)&&(o.polygonOffset(Ye,Xe),$=Ye,_e=Xe)):de(32823)}function dt(k){void 0===k&&(k=33984+Ue-1),xe!==k&&(o.activeTexture(k),xe=k)}return{buffers:{color:a,depth:l,stencil:c},enable:ut,disable:de,bindFramebuffer:function It(k,Ye){return u[k]!==Ye&&(o.bindFramebuffer(k,Ye),u[k]=Ye,n&&(36009===k&&(u[36160]=Ye),36160===k&&(u[36009]=Ye)),!0)},drawBuffers:function vt(k,Ye){let Xe=f,gt=!1;if(k)if(Xe=d.get(Ye),void 0===Xe&&(Xe=[],d.set(Ye,Xe)),k.isWebGLMultipleRenderTargets){const st=k.texture;if(Xe.length!==st.length||36064!==Xe[0]){for(let yt=0,Ge=st.length;yt<Ge;yt++)Xe[yt]=36064+yt;Xe.length=st.length,gt=!0}}else 36064!==Xe[0]&&(Xe[0]=36064,gt=!0);else 1029!==Xe[0]&&(Xe[0]=1029,gt=!0);gt&&(t.isWebGL2?o.drawBuffers(Xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Xe))},useProgram:function St(k){return g!==k&&(o.useProgram(k),g=k,!0)},setBlending:ye,setMaterial:function ve(k,Ye){k.side===Me?de(2884):ut(2884);let Xe=k.side===ce;Ye&&(Xe=!Xe),je(Xe),1===k.blending&&!1===k.transparent?ye(Ae):ye(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),a.setMask(k.colorWrite);const gt=k.stencilWrite;c.setTest(gt),gt&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),wt(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),!0===k.alphaToCoverage?ut(32926):de(32926)},setFlipSided:je,setCullFace:lt,setLineWidth:function qe(k){k!==G&&(X&&o.lineWidth(k),G=k)},setPolygonOffset:wt,setScissorTest:function mt(k){k?ut(3089):de(3089)},activeTexture:dt,bindTexture:function jt(k,Ye){null===xe&&dt();let Xe=be[xe];void 0===Xe&&(Xe={type:void 0,texture:void 0},be[xe]=Xe),(Xe.type!==k||Xe.texture!==Ye)&&(o.bindTexture(k,Ye||at[k]),Xe.type=k,Xe.texture=Ye)},unbindTexture:function Gt(){const k=be[xe];void 0!==k&&void 0!==k.type&&(o.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)},compressedTexImage2D:function D(){try{o.compressedTexImage2D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texImage2D:function xt(){try{o.texImage2D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texImage3D:function ne(){try{o.texImage3D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texStorage2D:function He(){try{o.texStorage2D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texStorage3D:function Qe(){try{o.texStorage3D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texSubImage2D:function w(){try{o.texSubImage2D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},texSubImage3D:function te(){try{o.texSubImage3D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},compressedTexSubImage2D:function Be(){try{o.compressedTexSubImage2D.apply(o,arguments)}catch(k){console.error("THREE.WebGLState:",k)}},scissor:function ht(k){!1===We.equals(k)&&(o.scissor(k.x,k.y,k.z,k.w),We.copy(k))},viewport:function it(k){!1===Pe.equals(k)&&(o.viewport(k.x,k.y,k.z,k.w),Pe.copy(k))},reset:function nt(){o.disable(3042),o.disable(2884),o.disable(2929),o.disable(32823),o.disable(3089),o.disable(2960),o.disable(32926),o.blendEquation(32774),o.blendFunc(1,0),o.blendFuncSeparate(1,0,1,0),o.colorMask(!0,!0,!0,!0),o.clearColor(0,0,0,0),o.depthMask(!0),o.depthFunc(513),o.clearDepth(1),o.stencilMask(4294967295),o.stencilFunc(519,0,4294967295),o.stencilOp(7680,7680,7680),o.clearStencil(0),o.cullFace(1029),o.frontFace(2305),o.polygonOffset(0,0),o.activeTexture(33984),o.bindFramebuffer(36160,null),!0===n&&(o.bindFramebuffer(36009,null),o.bindFramebuffer(36008,null)),o.useProgram(null),o.lineWidth(1),o.scissor(0,0,o.canvas.width,o.canvas.height),o.viewport(0,0,o.canvas.width,o.canvas.height),h={},xe=null,be={},u={},d=new WeakMap,f=[],g=null,m=!1,p=null,v=null,_=null,b=null,y=null,T=null,R=null,U=!1,M=null,I=null,G=null,$=null,_e=null,We.set(0,0,o.canvas.width,o.canvas.height),Pe.set(0,0,o.canvas.width,o.canvas.height),a.reset(),l.reset(),c.reset()}}}function eg(o,e,t,n,i,s,r){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let m;const p=new WeakMap;let v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(D){}function _(D,w){return v?new OffscreenCanvas(D,w):ur("canvas")}function b(D,w,te,Be){let He=1;if((D.width>Be||D.height>Be)&&(He=Be/Math.max(D.width,D.height)),He<1||!0===w){if("undefined"!=typeof HTMLImageElement&&D instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&D instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&D instanceof ImageBitmap){const Qe=w?ro:Math.floor,xt=Qe(He*D.width),ne=Qe(He*D.height);void 0===m&&(m=_(xt,ne));const ht=te?_(xt,ne):m;return ht.width=xt,ht.height=ne,ht.getContext("2d").drawImage(D,0,0,xt,ne),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+xt+"x"+ne+")."),ht}return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D}return D}function y(D){return Da(D.width)&&Da(D.height)}function R(D,w){return D.generateMipmaps&&w&&D.minFilter!==Qt&&D.minFilter!==Yt}function U(D){o.generateMipmap(D)}function M(D,w,te,Be,He=!1){if(!1===a)return w;if(null!==D){if(void 0!==o[D])return o[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let Qe=w;return 6403===w&&(5126===te&&(Qe=33326),5131===te&&(Qe=33325),5121===te&&(Qe=33321)),33319===w&&(5126===te&&(Qe=33328),5131===te&&(Qe=33327),5121===te&&(Qe=33323)),6408===w&&(5126===te&&(Qe=34836),5131===te&&(Qe=34842),5121===te&&(Qe=Be===Xt&&!1===He?35907:32856),32819===te&&(Qe=32854),32820===te&&(Qe=32855)),(33325===Qe||33326===Qe||33327===Qe||33328===Qe||34842===Qe||34836===Qe)&&e.get("EXT_color_buffer_float"),Qe}function I(D,w,te){return!0===R(D,te)||D.isFramebufferTexture&&D.minFilter!==Qt&&D.minFilter!==Yt?Math.log2(Math.max(w.width,w.height))+1:void 0!==D.mipmaps&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?w.mipmaps.length:1}function G(D){return D===Qt||D===fs||D===ps?9728:9729}function $(D){const w=D.target;w.removeEventListener("dispose",$),function Ue(D){const w=n.get(D);if(void 0===w.__webglInit)return;const te=D.source,Be=p.get(te);if(Be){const He=Be[w.__cacheKey];He.usedTimes--,0===He.usedTimes&&X(D),0===Object.keys(Be).length&&p.delete(te)}n.remove(D)}(w),w.isVideoTexture&&g.delete(w)}function _e(D){const w=D.target;w.removeEventListener("dispose",_e),function le(D){const w=D.texture,te=n.get(D),Be=n.get(w);if(void 0!==Be.__webglTexture&&(o.deleteTexture(Be.__webglTexture),r.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let He=0;He<6;He++)o.deleteFramebuffer(te.__webglFramebuffer[He]),te.__webglDepthbuffer&&o.deleteRenderbuffer(te.__webglDepthbuffer[He]);else{if(o.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&o.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&o.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let He=0;He<te.__webglColorRenderbuffer.length;He++)te.__webglColorRenderbuffer[He]&&o.deleteRenderbuffer(te.__webglColorRenderbuffer[He]);te.__webglDepthRenderbuffer&&o.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(D.isWebGLMultipleRenderTargets)for(let He=0,Qe=w.length;He<Qe;He++){const xt=n.get(w[He]);xt.__webglTexture&&(o.deleteTexture(xt.__webglTexture),r.memory.textures--),n.remove(w[He])}n.remove(w),n.remove(D)}(w)}function X(D){const w=n.get(D);o.deleteTexture(w.__webglTexture),delete p.get(D.source)[w.__cacheKey],r.memory.textures--}let ee=0;function ue(D,w){const te=n.get(D);if(D.isVideoTexture&&function jt(D){const w=r.render.frame;g.get(D)!==w&&(g.set(D,w),D.update())}(D),!1===D.isRenderTargetTexture&&D.version>0&&te.__version!==D.version){const Be=D.image;if(null===Be)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==Be.complete)return void vt(te,D,w);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.activeTexture(33984+w),t.bindTexture(3553,te.__webglTexture)}const at={[ds]:10497,[mn]:33071,[Ui]:33648},ut={[Qt]:9728,[fs]:9984,[ps]:9986,[Yt]:9729,[ms]:9985,[ci]:9987};function de(D,w,te){if(te?(o.texParameteri(D,10242,at[w.wrapS]),o.texParameteri(D,10243,at[w.wrapT]),(32879===D||35866===D)&&o.texParameteri(D,32882,at[w.wrapR]),o.texParameteri(D,10240,ut[w.magFilter]),o.texParameteri(D,10241,ut[w.minFilter])):(o.texParameteri(D,10242,33071),o.texParameteri(D,10243,33071),(32879===D||35866===D)&&o.texParameteri(D,32882,33071),(w.wrapS!==mn||w.wrapT!==mn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),o.texParameteri(D,10240,G(w.magFilter)),o.texParameteri(D,10241,G(w.minFilter)),w.minFilter!==Qt&&w.minFilter!==Yt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const Be=e.get("EXT_texture_filter_anisotropic");if(w.type===en&&!1===e.has("OES_texture_float_linear")||!1===a&&w.type===gn&&!1===e.has("OES_texture_half_float_linear"))return;(w.anisotropy>1||n.get(w).__currentAnisotropy)&&(o.texParameterf(D,Be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,i.getMaxAnisotropy())),n.get(w).__currentAnisotropy=w.anisotropy)}}function It(D,w){let te=!1;void 0===D.__webglInit&&(D.__webglInit=!0,w.addEventListener("dispose",$));const Be=w.source;let He=p.get(Be);void 0===He&&(He={},p.set(Be,He));const Qe=function se(D){const w=[];return w.push(D.wrapS),w.push(D.wrapT),w.push(D.magFilter),w.push(D.minFilter),w.push(D.anisotropy),w.push(D.internalFormat),w.push(D.format),w.push(D.type),w.push(D.generateMipmaps),w.push(D.premultiplyAlpha),w.push(D.flipY),w.push(D.unpackAlignment),w.push(D.encoding),w.join()}(w);if(Qe!==D.__cacheKey){void 0===He[Qe]&&(He[Qe]={texture:o.createTexture(),usedTimes:0},r.memory.textures++,te=!0),He[Qe].usedTimes++;const xt=He[D.__cacheKey];void 0!==xt&&(He[D.__cacheKey].usedTimes--,0===xt.usedTimes&&X(w)),D.__cacheKey=Qe,D.__webglTexture=He[Qe].texture}return te}function vt(D,w,te){let Be=3553;w.isDataArrayTexture&&(Be=35866),w.isData3DTexture&&(Be=32879);const He=It(D,w),Qe=w.source;if(t.activeTexture(33984+te),t.bindTexture(Be,D.__webglTexture),Qe.version!==Qe.__currentVersion||!0===He){o.pixelStorei(37440,w.flipY),o.pixelStorei(37441,w.premultiplyAlpha),o.pixelStorei(3317,w.unpackAlignment),o.pixelStorei(37443,0);const xt=function T(D){return!a&&(D.wrapS!==mn||D.wrapT!==mn||D.minFilter!==Qt&&D.minFilter!==Yt)}(w)&&!1===y(w.image);let ne=b(w.image,xt,!1,h);ne=Gt(w,ne);const ht=y(ne)||a,it=s.convert(w.format,w.encoding);let Ye,nt=s.convert(w.type),k=M(w.internalFormat,it,nt,w.encoding,w.isVideoTexture);de(Be,w,ht);const Xe=w.mipmaps,gt=a&&!0!==w.isVideoTexture,st=void 0===Qe.__currentVersion||!0===He,yt=I(w,ne,ht);if(w.isDepthTexture)k=6402,a?k=w.type===en?36012:w.type===fe?33190:w.type===Vn?35056:33189:w.type===en&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),w.format===hi&&6402===k&&1012!==w.type&&w.type!==fe&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),w.type=fe,nt=s.convert(w.type)),w.format===ui&&6402===k&&(k=34041,w.type!==Vn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),w.type=Vn,nt=s.convert(w.type))),st&&(gt?t.texStorage2D(3553,1,k,ne.width,ne.height):t.texImage2D(3553,0,k,ne.width,ne.height,0,it,nt,null));else if(w.isDataTexture)if(Xe.length>0&&ht){gt&&st&&t.texStorage2D(3553,yt,k,Xe[0].width,Xe[0].height);for(let Ge=0,Mt=Xe.length;Ge<Mt;Ge++)Ye=Xe[Ge],gt?t.texSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,it,nt,Ye.data):t.texImage2D(3553,Ge,k,Ye.width,Ye.height,0,it,nt,Ye.data);w.generateMipmaps=!1}else gt?(st&&t.texStorage2D(3553,yt,k,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,ne.width,ne.height,it,nt,ne.data)):t.texImage2D(3553,0,k,ne.width,ne.height,0,it,nt,ne.data);else if(w.isCompressedTexture){gt&&st&&t.texStorage2D(3553,yt,k,Xe[0].width,Xe[0].height);for(let Ge=0,Mt=Xe.length;Ge<Mt;Ge++)Ye=Xe[Ge],w.format!==Mn?null!==it?gt?t.compressedTexSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,it,Ye.data):t.compressedTexImage2D(3553,Ge,k,Ye.width,Ye.height,0,Ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):gt?t.texSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,it,nt,Ye.data):t.texImage2D(3553,Ge,k,Ye.width,Ye.height,0,it,nt,Ye.data)}else if(w.isDataArrayTexture)gt?(st&&t.texStorage3D(35866,yt,k,ne.width,ne.height,ne.depth),t.texSubImage3D(35866,0,0,0,0,ne.width,ne.height,ne.depth,it,nt,ne.data)):t.texImage3D(35866,0,k,ne.width,ne.height,ne.depth,0,it,nt,ne.data);else if(w.isData3DTexture)gt?(st&&t.texStorage3D(32879,yt,k,ne.width,ne.height,ne.depth),t.texSubImage3D(32879,0,0,0,0,ne.width,ne.height,ne.depth,it,nt,ne.data)):t.texImage3D(32879,0,k,ne.width,ne.height,ne.depth,0,it,nt,ne.data);else if(w.isFramebufferTexture){if(st)if(gt)t.texStorage2D(3553,yt,k,ne.width,ne.height);else{let Ge=ne.width,Mt=ne.height;for(let zt=0;zt<yt;zt++)t.texImage2D(3553,zt,k,Ge,Mt,0,it,nt,null),Ge>>=1,Mt>>=1}}else if(Xe.length>0&&ht){gt&&st&&t.texStorage2D(3553,yt,k,Xe[0].width,Xe[0].height);for(let Ge=0,Mt=Xe.length;Ge<Mt;Ge++)Ye=Xe[Ge],gt?t.texSubImage2D(3553,Ge,0,0,it,nt,Ye):t.texImage2D(3553,Ge,k,it,nt,Ye);w.generateMipmaps=!1}else gt?(st&&t.texStorage2D(3553,yt,k,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,it,nt,ne)):t.texImage2D(3553,0,k,it,nt,ne);R(w,ht)&&U(Be),Qe.__currentVersion=Qe.version,w.onUpdate&&w.onUpdate(w)}D.__version=w.version}function Ke(D,w,te,Be,He){const Qe=s.convert(te.format,te.encoding),xt=s.convert(te.type),ne=M(te.internalFormat,Qe,xt,te.encoding);n.get(w).__hasExternalTextures||(32879===He||35866===He?t.texImage3D(He,0,ne,w.width,w.height,w.depth,0,Qe,xt,null):t.texImage2D(He,0,ne,w.width,w.height,0,Qe,xt,null)),t.bindFramebuffer(36160,D),dt(w)?d.framebufferTexture2DMultisampleEXT(36160,Be,He,n.get(te).__webglTexture,0,mt(w)):o.framebufferTexture2D(36160,Be,He,n.get(te).__webglTexture,0),t.bindFramebuffer(36160,null)}function Lt(D,w,te){if(o.bindRenderbuffer(36161,D),w.depthBuffer&&!w.stencilBuffer){let Be=33189;if(te||dt(w)){const He=w.depthTexture;He&&He.isDepthTexture&&(He.type===en?Be=36012:He.type===fe&&(Be=33190));const Qe=mt(w);dt(w)?d.renderbufferStorageMultisampleEXT(36161,Qe,Be,w.width,w.height):o.renderbufferStorageMultisample(36161,Qe,Be,w.width,w.height)}else o.renderbufferStorage(36161,Be,w.width,w.height);o.framebufferRenderbuffer(36160,36096,36161,D)}else if(w.depthBuffer&&w.stencilBuffer){const Be=mt(w);te&&!1===dt(w)?o.renderbufferStorageMultisample(36161,Be,35056,w.width,w.height):dt(w)?d.renderbufferStorageMultisampleEXT(36161,Be,35056,w.width,w.height):o.renderbufferStorage(36161,34041,w.width,w.height),o.framebufferRenderbuffer(36160,33306,36161,D)}else{const Be=!0===w.isWebGLMultipleRenderTargets?w.texture:[w.texture];for(let He=0;He<Be.length;He++){const Qe=Be[He],xt=s.convert(Qe.format,Qe.encoding),ne=s.convert(Qe.type),ht=M(Qe.internalFormat,xt,ne,Qe.encoding),it=mt(w);te&&!1===dt(w)?o.renderbufferStorageMultisample(36161,it,ht,w.width,w.height):dt(w)?d.renderbufferStorageMultisampleEXT(36161,it,ht,w.width,w.height):o.renderbufferStorage(36161,ht,w.width,w.height)}}o.bindRenderbuffer(36161,null)}function ve(D){const w=n.get(D),te=!0===D.isWebGLCubeRenderTarget;if(D.depthTexture&&!w.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");!function ye(D,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,D),!w.depthTexture||!w.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),ue(w.depthTexture,0);const Be=n.get(w.depthTexture).__webglTexture,He=mt(w);if(w.depthTexture.format===hi)dt(w)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,Be,0,He):o.framebufferTexture2D(36160,36096,3553,Be,0);else{if(w.depthTexture.format!==ui)throw new Error("Unknown depthTexture format");dt(w)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,Be,0,He):o.framebufferTexture2D(36160,33306,3553,Be,0)}}(w.__webglFramebuffer,D)}else if(te){w.__webglDepthbuffer=[];for(let Be=0;Be<6;Be++)t.bindFramebuffer(36160,w.__webglFramebuffer[Be]),w.__webglDepthbuffer[Be]=o.createRenderbuffer(),Lt(w.__webglDepthbuffer[Be],D,!1)}else t.bindFramebuffer(36160,w.__webglFramebuffer),w.__webglDepthbuffer=o.createRenderbuffer(),Lt(w.__webglDepthbuffer,D,!1);t.bindFramebuffer(36160,null)}function mt(D){return Math.min(u,D.samples)}function dt(D){const w=n.get(D);return a&&D.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==w.__useRenderToTexture}function Gt(D,w){const te=D.encoding,Be=D.format,He=D.type;return!0===D.isCompressedTexture||!0===D.isVideoTexture||1035===D.format||te!==bi&&(te===Xt?!1===a?!0===e.has("EXT_sRGB")&&Be===Mn?(D.format=1035,D.minFilter=Yt,D.generateMipmaps=!1):w=nc.sRGBToLinear(w):(Be!==Mn||He!==K)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",te)),w}this.allocateTextureUnit=function be(){const D=ee;return D>=l&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+l),ee+=1,D},this.resetTextureUnits=function xe(){ee=0},this.setTexture2D=ue,this.setTexture2DArray=function We(D,w){const te=n.get(D);D.version>0&&te.__version!==D.version?vt(te,D,w):(t.activeTexture(33984+w),t.bindTexture(35866,te.__webglTexture))},this.setTexture3D=function Pe(D,w){const te=n.get(D);D.version>0&&te.__version!==D.version?vt(te,D,w):(t.activeTexture(33984+w),t.bindTexture(32879,te.__webglTexture))},this.setTextureCube=function Je(D,w){const te=n.get(D);D.version>0&&te.__version!==D.version?function St(D,w,te){if(6!==w.image.length)return;const Be=It(D,w),He=w.source;if(t.activeTexture(33984+te),t.bindTexture(34067,D.__webglTexture),He.version!==He.__currentVersion||!0===Be){o.pixelStorei(37440,w.flipY),o.pixelStorei(37441,w.premultiplyAlpha),o.pixelStorei(3317,w.unpackAlignment),o.pixelStorei(37443,0);const Qe=w.isCompressedTexture||w.image[0].isCompressedTexture,xt=w.image[0]&&w.image[0].isDataTexture,ne=[];for(let Ge=0;Ge<6;Ge++)ne[Ge]=Qe||xt?xt?w.image[Ge].image:w.image[Ge]:b(w.image[Ge],!1,!0,c),ne[Ge]=Gt(w,ne[Ge]);const ht=ne[0],it=y(ht)||a,nt=s.convert(w.format,w.encoding),k=s.convert(w.type),Ye=M(w.internalFormat,nt,k,w.encoding),Xe=a&&!0!==w.isVideoTexture,gt=void 0===He.__currentVersion||!0===Be;let yt,st=I(w,ht,it);if(de(34067,w,it),Qe){Xe&&gt&&t.texStorage2D(34067,st,Ye,ht.width,ht.height);for(let Ge=0;Ge<6;Ge++){yt=ne[Ge].mipmaps;for(let Mt=0;Mt<yt.length;Mt++){const zt=yt[Mt];w.format!==Mn?null!==nt?Xe?t.compressedTexSubImage2D(34069+Ge,Mt,0,0,zt.width,zt.height,nt,zt.data):t.compressedTexImage2D(34069+Ge,Mt,Ye,zt.width,zt.height,0,zt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Xe?t.texSubImage2D(34069+Ge,Mt,0,0,zt.width,zt.height,nt,k,zt.data):t.texImage2D(34069+Ge,Mt,Ye,zt.width,zt.height,0,nt,k,zt.data)}}}else{yt=w.mipmaps,Xe&&gt&&(yt.length>0&&st++,t.texStorage2D(34067,st,Ye,ne[0].width,ne[0].height));for(let Ge=0;Ge<6;Ge++)if(xt){Xe?t.texSubImage2D(34069+Ge,0,0,0,ne[Ge].width,ne[Ge].height,nt,k,ne[Ge].data):t.texImage2D(34069+Ge,0,Ye,ne[Ge].width,ne[Ge].height,0,nt,k,ne[Ge].data);for(let Mt=0;Mt<yt.length;Mt++){const Ut=yt[Mt].image[Ge].image;Xe?t.texSubImage2D(34069+Ge,Mt+1,0,0,Ut.width,Ut.height,nt,k,Ut.data):t.texImage2D(34069+Ge,Mt+1,Ye,Ut.width,Ut.height,0,nt,k,Ut.data)}}else{Xe?t.texSubImage2D(34069+Ge,0,0,0,nt,k,ne[Ge]):t.texImage2D(34069+Ge,0,Ye,nt,k,ne[Ge]);for(let Mt=0;Mt<yt.length;Mt++){const zt=yt[Mt];Xe?t.texSubImage2D(34069+Ge,Mt+1,0,0,nt,k,zt.image[Ge]):t.texImage2D(34069+Ge,Mt+1,Ye,nt,k,zt.image[Ge])}}}R(w,it)&&U(34067),He.__currentVersion=He.version,w.onUpdate&&w.onUpdate(w)}D.__version=w.version}(te,D,w):(t.activeTexture(33984+w),t.bindTexture(34067,te.__webglTexture))},this.rebindTextures=function je(D,w,te){const Be=n.get(D);void 0!==w&&Ke(Be.__webglFramebuffer,D,D.texture,36064,3553),void 0!==te&&ve(D)},this.setupRenderTarget=function lt(D){const w=D.texture,te=n.get(D),Be=n.get(w);D.addEventListener("dispose",_e),!0!==D.isWebGLMultipleRenderTargets&&(void 0===Be.__webglTexture&&(Be.__webglTexture=o.createTexture()),Be.__version=w.version,r.memory.textures++);const He=!0===D.isWebGLCubeRenderTarget,Qe=!0===D.isWebGLMultipleRenderTargets,xt=y(D)||a;if(He){te.__webglFramebuffer=[];for(let ne=0;ne<6;ne++)te.__webglFramebuffer[ne]=o.createFramebuffer()}else{if(te.__webglFramebuffer=o.createFramebuffer(),Qe)if(i.drawBuffers){const ne=D.texture;for(let ht=0,it=ne.length;ht<it;ht++){const nt=n.get(ne[ht]);void 0===nt.__webglTexture&&(nt.__webglTexture=o.createTexture(),r.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&D.samples>0&&!1===dt(D)){const ne=Qe?w:[w];te.__webglMultisampledFramebuffer=o.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,te.__webglMultisampledFramebuffer);for(let ht=0;ht<ne.length;ht++){const it=ne[ht];te.__webglColorRenderbuffer[ht]=o.createRenderbuffer(),o.bindRenderbuffer(36161,te.__webglColorRenderbuffer[ht]);const nt=s.convert(it.format,it.encoding),k=s.convert(it.type),Ye=M(it.internalFormat,nt,k,it.encoding),Xe=mt(D);o.renderbufferStorageMultisample(36161,Xe,Ye,D.width,D.height),o.framebufferRenderbuffer(36160,36064+ht,36161,te.__webglColorRenderbuffer[ht])}o.bindRenderbuffer(36161,null),D.depthBuffer&&(te.__webglDepthRenderbuffer=o.createRenderbuffer(),Lt(te.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(36160,null)}}if(He){t.bindTexture(34067,Be.__webglTexture),de(34067,w,xt);for(let ne=0;ne<6;ne++)Ke(te.__webglFramebuffer[ne],D,w,36064,34069+ne);R(w,xt)&&U(34067),t.unbindTexture()}else if(Qe){const ne=D.texture;for(let ht=0,it=ne.length;ht<it;ht++){const nt=ne[ht],k=n.get(nt);t.bindTexture(3553,k.__webglTexture),de(3553,nt,xt),Ke(te.__webglFramebuffer,D,nt,36064+ht,3553),R(nt,xt)&&U(3553)}t.unbindTexture()}else{let ne=3553;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(a?ne=D.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ne,Be.__webglTexture),de(ne,w,xt),Ke(te.__webglFramebuffer,D,w,36064,ne),R(w,xt)&&U(ne),t.unbindTexture()}D.depthBuffer&&ve(D)},this.updateRenderTargetMipmap=function qe(D){const w=y(D)||a,te=!0===D.isWebGLMultipleRenderTargets?D.texture:[D.texture];for(let Be=0,He=te.length;Be<He;Be++){const Qe=te[Be];if(R(Qe,w)){const xt=D.isWebGLCubeRenderTarget?34067:3553,ne=n.get(Qe).__webglTexture;t.bindTexture(xt,ne),U(xt),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function wt(D){if(a&&D.samples>0&&!1===dt(D)){const w=D.isWebGLMultipleRenderTargets?D.texture:[D.texture],te=D.width,Be=D.height;let He=16384;const Qe=[],xt=D.stencilBuffer?33306:36096,ne=n.get(D),ht=!0===D.isWebGLMultipleRenderTargets;if(ht)for(let it=0;it<w.length;it++)t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(36160,36064+it,36161,null),t.bindFramebuffer(36160,ne.__webglFramebuffer),o.framebufferTexture2D(36009,36064+it,3553,null,0);t.bindFramebuffer(36008,ne.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,ne.__webglFramebuffer);for(let it=0;it<w.length;it++){Qe.push(36064+it),D.depthBuffer&&Qe.push(xt);const nt=void 0!==ne.__ignoreDepthValues&&ne.__ignoreDepthValues;if(!1===nt&&(D.depthBuffer&&(He|=256),D.stencilBuffer&&(He|=1024)),ht&&o.framebufferRenderbuffer(36008,36064,36161,ne.__webglColorRenderbuffer[it]),!0===nt&&(o.invalidateFramebuffer(36008,[xt]),o.invalidateFramebuffer(36009,[xt])),ht){const k=n.get(w[it]).__webglTexture;o.framebufferTexture2D(36009,36064,3553,k,0)}o.blitFramebuffer(0,0,te,Be,0,0,te,Be,He,9728),f&&o.invalidateFramebuffer(36008,Qe)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ht)for(let it=0;it<w.length;it++){t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(36160,36064+it,36161,ne.__webglColorRenderbuffer[it]);const nt=n.get(w[it]).__webglTexture;t.bindFramebuffer(36160,ne.__webglFramebuffer),o.framebufferTexture2D(36009,36064+it,3553,nt,0)}t.bindFramebuffer(36009,ne.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ve,this.setupFrameBufferTexture=Ke,this.useMultisampledRTT=dt}function tg(o,e,t){const n=t.isWebGL2;return{convert:function i(s,r=null){let a;if(s===K)return 5121;if(1017===s)return 32819;if(1018===s)return 32820;if(1010===s)return 5120;if(1011===s)return 5122;if(1012===s)return 5123;if(1013===s)return 5124;if(s===fe)return 5125;if(s===en)return 5126;if(s===gn)return n?5131:(a=e.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===s)return 6406;if(s===Mn)return 6408;if(s===Br)return 6409;if(1025===s)return 6410;if(s===hi)return 6402;if(s===ui)return 34041;if(s===zr)return 6403;if(1022===s)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(1035===s)return a=e.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1029===s)return 36244;if(s===Ur)return 33319;if(1031===s)return 33320;if(1033===s)return 36249;if(33776===s||33777===s||33778===s||33779===s)if(r===Xt){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(33776===s)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(33776===s)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===s)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===s)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===s)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===s||35841===s||35842===s||35843===s){if(a=e.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===s)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===s)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===s)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===s)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===s)return a=e.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===s||37496===s){if(a=e.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===s)return r===Xt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===s||37809===s||37810===s||37811===s||37812===s||37813===s||37814===s||37815===s||37816===s||37817===s||37818===s||37819===s||37820===s||37821===s){if(a=e.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===s)return r===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===s){if(a=e.get("EXT_texture_compression_bptc"),null===a)return null;if(36492===s)return r===Xt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return s===Vn?n?34042:(a=e.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==o[s]?o[s]:null}}}class ng extends _n{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Bs extends Jt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ig={type:"move"};class dl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Bs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Bs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Bs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,r=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==a&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ig))),c&&e.hand){r=!0;for(const m of e.hand.values()){const p=t.getJointPose(m,n);if(void 0===c.joints[m.jointName]){const _=new Bs;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[m.jointName]=_,c.add(_)}const v=c.joints[m.jointName];null!==p&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=null!==p}const d=c.joints["index-finger-tip"].position.distanceTo(c.joints["thumb-tip"].position),f=.02,g=.005;c.inputState.pinching&&d>f+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==i),null!==l&&(l.visible=null!==s),null!==c&&(c.visible=null!==r),this}}class Kc extends Gn{constructor(e,t,n,i,s,r,a,l,c,h){if((h=void 0!==h?h:hi)!==hi&&h!==ui)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&h===hi&&(n=fe),void 0===n&&h===ui&&(n=Vn),super(null,i,s,r,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:Qt,this.minFilter=void 0!==l?l:Qt,this.flipY=!1,this.generateMipmaps=!1}}class sg extends Gi{constructor(e,t){super();const n=this;let i=null,s=1,r=null,a="local-floor",l=null,c=null,h=null,u=null,d=null,f=null;const g=t.getContextAttributes();let m=null,p=null;const v=[],_=new Map,b=new _n;b.layers.enable(1),b.viewport=new Vt;const y=new _n;y.layers.enable(2),y.viewport=new Vt;const T=[b,y],R=new ng;R.layers.enable(1),R.layers.enable(2);let U=null,M=null;function I(se){const ue=_.get(se.inputSource);void 0!==ue&&ue.dispatchEvent({type:se.type,data:se.inputSource})}function G(){i.removeEventListener("select",I),i.removeEventListener("selectstart",I),i.removeEventListener("selectend",I),i.removeEventListener("squeeze",I),i.removeEventListener("squeezestart",I),i.removeEventListener("squeezeend",I),i.removeEventListener("end",G),i.removeEventListener("inputsourceschange",$),_.forEach(function(se,ue){void 0!==se&&se.disconnect(ue)}),_.clear(),U=null,M=null,e.setRenderTarget(m),d=null,u=null,h=null,i=null,p=null,be.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function $(se){const ue=i.inputSources;for(let We=0;We<ue.length;We++)_.set(ue[We],v["right"===ue[We].handedness?1:0]);for(let We=0;We<se.removed.length;We++){const Pe=se.removed[We],Je=_.get(Pe);Je&&(Je.dispatchEvent({type:"disconnected",data:Pe}),_.delete(Pe))}for(let We=0;We<se.added.length;We++){const Pe=se.added[We],Je=_.get(Pe);Je&&Je.dispatchEvent({type:"connected",data:Pe})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(se){let ue=v[se];return void 0===ue&&(ue=new dl,v[se]=ue),ue.getTargetRaySpace()},this.getControllerGrip=function(se){let ue=v[se];return void 0===ue&&(ue=new dl,v[se]=ue),ue.getGripSpace()},this.getHand=function(se){let ue=v[se];return void 0===ue&&(ue=new dl,v[se]=ue),ue.getHandSpace()},this.setFramebufferScaleFactor=function(se){s=se,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(se){a=se,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||r},this.setReferenceSpace=function(se){l=se},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return h},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=function(){var se=function z(o){return function(){var e=this,t=arguments;return new Promise(function(n,i){var s=o.apply(e,t);function r(l){N(s,n,i,r,a,"next",l)}function a(l){N(s,n,i,r,a,"throw",l)}r(void 0)})}}(function*(ue){if(i=ue,null!==i){if(m=e.getRenderTarget(),i.addEventListener("select",I),i.addEventListener("selectstart",I),i.addEventListener("selectend",I),i.addEventListener("squeeze",I),i.addEventListener("squeezestart",I),i.addEventListener("squeezeend",I),i.addEventListener("end",G),i.addEventListener("inputsourceschange",$),!0!==g.xrCompatible&&(yield t.makeXRCompatible()),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2)d=new XRWebGLLayer(i,t,{antialias:void 0!==i.renderState.layers||g.antialias,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s}),i.updateRenderState({baseLayer:d}),p=new Zn(d.framebufferWidth,d.framebufferHeight,{format:Mn,type:K,encoding:e.outputEncoding});else{let We=null,Pe=null,Je=null;g.depth&&(Je=g.stencil?35056:33190,We=g.stencil?ui:hi,Pe=g.stencil?Vn:fe);const at={colorFormat:e.outputEncoding===Xt?35907:32856,depthFormat:Je,scaleFactor:s};h=new XRWebGLBinding(i,t),u=h.createProjectionLayer(at),i.updateRenderState({layers:[u]}),p=new Zn(u.textureWidth,u.textureHeight,{format:Mn,type:K,depthTexture:new Kc(u.textureWidth,u.textureHeight,Pe,void 0,void 0,void 0,void 0,void 0,void 0,We),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0}),e.properties.get(p).__ignoreDepthValues=u.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,r=yield i.requestReferenceSpace(a),be.setContext(i),be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}});return function(ue){return se.apply(this,arguments)}}();const _e=new A,Ue=new A;function le(se,ue){null===ue?se.matrixWorld.copy(se.matrix):se.matrixWorld.multiplyMatrices(ue.matrixWorld,se.matrix),se.matrixWorldInverse.copy(se.matrixWorld).invert()}this.updateCamera=function(se){if(null===i)return;R.near=y.near=b.near=se.near,R.far=y.far=b.far=se.far,(U!==R.near||M!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),U=R.near,M=R.far);const ue=se.parent,We=R.cameras;le(R,ue);for(let Je=0;Je<We.length;Je++)le(We[Je],ue);R.matrixWorld.decompose(R.position,R.quaternion,R.scale),se.position.copy(R.position),se.quaternion.copy(R.quaternion),se.scale.copy(R.scale),se.matrix.copy(R.matrix),se.matrixWorld.copy(R.matrixWorld);const Pe=se.children;for(let Je=0,at=Pe.length;Je<at;Je++)Pe[Je].updateMatrixWorld(!0);2===We.length?function X(se,ue,We){_e.setFromMatrixPosition(ue.matrixWorld),Ue.setFromMatrixPosition(We.matrixWorld);const Pe=_e.distanceTo(Ue),Je=ue.projectionMatrix.elements,at=We.projectionMatrix.elements,ut=Je[14]/(Je[10]-1),de=Je[14]/(Je[10]+1),It=(Je[9]+1)/Je[5],vt=(Je[9]-1)/Je[5],St=(Je[8]-1)/Je[0],Ke=(at[8]+1)/at[0],Lt=ut*St,ye=ut*Ke,ve=Pe/(-St+Ke),je=ve*-St;ue.matrixWorld.decompose(se.position,se.quaternion,se.scale),se.translateX(je),se.translateZ(ve),se.matrixWorld.compose(se.position,se.quaternion,se.scale),se.matrixWorldInverse.copy(se.matrixWorld).invert();const lt=ut+ve,qe=de+ve;se.projectionMatrix.makePerspective(Lt-je,ye+(Pe-je),It*de/qe*lt,vt*de/qe*lt,lt,qe)}(R,b,y):R.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return R},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(se){null!==u&&(u.fixedFoveation=se),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=se)};let ee=null;const be=new yc;be.setAnimationLoop(function xe(se,ue){if(c=ue.getViewerPose(l||r),f=ue,null!==c){const Pe=c.views;null!==d&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let Je=!1;Pe.length!==R.cameras.length&&(R.cameras.length=0,Je=!0);for(let at=0;at<Pe.length;at++){const ut=Pe[at];let de=null;if(null!==d)de=d.getViewport(ut);else{const vt=h.getViewSubImage(u,ut);de=vt.viewport,0===at&&(e.setRenderTargetTextures(p,vt.colorTexture,u.ignoreDepthValues?void 0:vt.depthStencilTexture),e.setRenderTarget(p))}let It=T[at];void 0===It&&(It=new _n,It.layers.enable(at),It.viewport=new Vt,T[at]=It),It.matrix.fromArray(ut.transform.matrix),It.projectionMatrix.fromArray(ut.projectionMatrix),It.viewport.set(de.x,de.y,de.width,de.height),0===at&&R.matrix.copy(It.matrix),!0===Je&&R.cameras.push(It)}}const We=i.inputSources;for(let Pe=0;Pe<v.length;Pe++){const Je=We[Pe],at=_.get(Je);void 0!==at&&at.update(Je,ue,l||r)}ee&&ee(se,ue),f=null}),this.setAnimationLoop=function(se){ee=se},this.dispose=function(){}}}function rg(o,e){function i(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map),p.alphaMap&&(m.alphaMap.value=p.alphaMap),p.bumpMap&&(m.bumpMap.value=p.bumpMap,m.bumpScale.value=p.bumpScale,p.side===ce&&(m.bumpScale.value*=-1)),p.displacementMap&&(m.displacementMap.value=p.displacementMap,m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap),p.normalMap&&(m.normalMap.value=p.normalMap,m.normalScale.value.copy(p.normalScale),p.side===ce&&m.normalScale.value.negate()),p.specularMap&&(m.specularMap.value=p.specularMap),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const v=e.get(p).envMap;if(v&&(m.envMap.value=v,m.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap){m.lightMap.value=p.lightMap;const y=!0!==o.physicallyCorrectLights?Math.PI:1;m.lightMapIntensity.value=p.lightMapIntensity*y}let _,b;p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity),p.map?_=p.map:p.specularMap?_=p.specularMap:p.displacementMap?_=p.displacementMap:p.normalMap?_=p.normalMap:p.bumpMap?_=p.bumpMap:p.roughnessMap?_=p.roughnessMap:p.metalnessMap?_=p.metalnessMap:p.alphaMap?_=p.alphaMap:p.emissiveMap?_=p.emissiveMap:p.clearcoatMap?_=p.clearcoatMap:p.clearcoatNormalMap?_=p.clearcoatNormalMap:p.clearcoatRoughnessMap?_=p.clearcoatRoughnessMap:p.iridescenceMap?_=p.iridescenceMap:p.iridescenceThicknessMap?_=p.iridescenceThicknessMap:p.specularIntensityMap?_=p.specularIntensityMap:p.specularColorMap?_=p.specularColorMap:p.transmissionMap?_=p.transmissionMap:p.thicknessMap?_=p.thicknessMap:p.sheenColorMap?_=p.sheenColorMap:p.sheenRoughnessMap&&(_=p.sheenRoughnessMap),void 0!==_&&(_.isWebGLRenderTarget&&(_=_.texture),!0===_.matrixAutoUpdate&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix)),p.aoMap?b=p.aoMap:p.lightMap&&(b=p.lightMap),void 0!==b&&(b.isWebGLRenderTarget&&(b=b.texture),!0===b.matrixAutoUpdate&&b.updateMatrix(),m.uv2Transform.value.copy(b.matrix))}return{refreshFogUniforms:function t(m,p){m.fogColor.value.copy(p.color),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)},refreshMaterialUniforms:function n(m,p,v,_,b){p.isMeshBasicMaterial||p.isMeshLambertMaterial?i(m,p):p.isMeshToonMaterial?(i(m,p),function h(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}(m,p)):p.isMeshPhongMaterial?(i(m,p),function c(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}(m,p)):p.isMeshStandardMaterial?(i(m,p),function u(m,p){m.roughness.value=p.roughness,m.metalness.value=p.metalness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(m.envMapIntensity.value=p.envMapIntensity)}(m,p),p.isMeshPhysicalMaterial&&function d(m,p,v){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),m.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===ce&&m.clearcoatNormalScale.value.negate())),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=v.texture,m.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap)}(m,p,b)):p.isMeshMatcapMaterial?(i(m,p),function f(m,p){p.matcap&&(m.matcap.value=p.matcap)}(m,p)):p.isMeshDepthMaterial?i(m,p):p.isMeshDistanceMaterial?(i(m,p),function g(m,p){m.referencePosition.value.copy(p.referencePosition),m.nearDistance.value=p.nearDistance,m.farDistance.value=p.farDistance}(m,p)):p.isMeshNormalMaterial?i(m,p):p.isLineBasicMaterial?(function s(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity}(m,p),p.isLineDashedMaterial&&function r(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}(m,p)):p.isPointsMaterial?function a(m,p,v,_){let b;m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*v,m.scale.value=.5*_,p.map&&(m.map.value=p.map),p.alphaMap&&(m.alphaMap.value=p.alphaMap),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest),p.map?b=p.map:p.alphaMap&&(b=p.alphaMap),void 0!==b&&(!0===b.matrixAutoUpdate&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix))}(m,p,v,_):p.isSpriteMaterial?function l(m,p){let v;m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map),p.alphaMap&&(m.alphaMap.value=p.alphaMap),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest),p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),void 0!==v&&(!0===v.matrixAutoUpdate&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix))}(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}}}function Yc(o={}){this.isWebGLRenderer=!0;const e=void 0!==o.canvas?o.canvas:function og(){const o=ur("canvas");return o.style.display="block",o}(),t=void 0!==o.context?o.context:null,n=void 0===o.depth||o.depth,i=void 0===o.stencil||o.stencil,s=void 0!==o.antialias&&o.antialias,r=void 0===o.premultipliedAlpha||o.premultipliedAlpha,a=void 0!==o.preserveDrawingBuffer&&o.preserveDrawingBuffer,l=void 0!==o.powerPreference?o.powerPreference:"default",c=void 0!==o.failIfMajorPerformanceCaveat&&o.failIfMajorPerformanceCaveat;let h;h=null!==t?t.getContextAttributes().alpha:void 0!==o.alpha&&o.alpha;let u=null,d=null;const f=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=bi,this.physicallyCorrectLights=!1,this.toneMapping=Bt,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const m=this;let p=!1,v=0,_=0,b=null,y=-1,T=null;const R=new Vt,U=new Vt;let M=null,I=e.width,G=e.height,$=1,_e=null,Ue=null;const X=new Vt(0,0,I,G),le=new Vt(0,0,I,G);let ee=!1;const xe=new il;let be=!1,se=!1,ue=null;const We=new Tt,Pe=new Ee,Je=new A,at={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ut(){return null===b?$:1}let vt,St,Ke,Lt,ye,ve,je,lt,qe,wt,mt,dt,jt,Gt,D,w,te,Be,He,Qe,xt,ne,ht,de=t;function It(C,Y){for(let ie=0;ie<C.length;ie++){const me=e.getContext(C[ie],Y);if(null!==me)return me}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:r,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${H}`),e.addEventListener("webglcontextlost",k,!1),e.addEventListener("webglcontextrestored",Ye,!1),e.addEventListener("webglcontextcreationerror",Xe,!1),null===de){const Y=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&Y.shift(),de=It(Y,C),null===de)throw It(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===de.getShaderPrecisionFormat&&(de.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}function it(){vt=new yp(de),St=new pp(de,vt,o),vt.init(St),ne=new tg(de,vt,St),Ke=new Qm(de,vt,St),Lt=new Sp(de),ye=new Vm,ve=new eg(de,vt,Ke,ye,St,ne,Lt),je=new gp(m),lt=new xp(m),qe=new dd(de,St),ht=new dp(de,vt,qe,St),wt=new Mp(de,qe,Lt,ht),mt=new Ap(de,wt,qe,Lt),He=new Tp(de,St,ve),w=new mp(ye),dt=new km(m,je,lt,vt,St,ht,w),jt=new rg(m,ye),Gt=new Gm,D=new Ym(vt,St),Be=new up(m,je,Ke,mt,h,r),te=new qm(m,mt,St),Qe=new fp(de,vt,Lt,St),xt=new bp(de,vt,Lt,St),Lt.programs=dt.programs,m.capabilities=St,m.extensions=vt,m.properties=ye,m.renderLists=Gt,m.shadowMap=te,m.state=Ke,m.info=Lt}it();const nt=new sg(m,de);function k(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Ye(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=Lt.autoReset,Y=te.enabled,ie=te.autoUpdate,Q=te.needsUpdate,me=te.type;it(),Lt.autoReset=C,te.enabled=Y,te.autoUpdate=ie,te.needsUpdate=Q,te.type=me}function Xe(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function gt(C){const Y=C.target;Y.removeEventListener("dispose",gt),function st(C){(function yt(C){const Y=ye.get(C).programs;void 0!==Y&&(Y.forEach(function(ie){dt.releaseProgram(ie)}),C.isShaderMaterial&&dt.releaseShaderCache(C))})(C),ye.remove(C)}(Y)}this.xr=nt,this.getContext=function(){return de},this.getContextAttributes=function(){return de.getContextAttributes()},this.forceContextLoss=function(){const C=vt.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=vt.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return $},this.setPixelRatio=function(C){void 0!==C&&($=C,this.setSize(I,G,!1))},this.getSize=function(C){return C.set(I,G)},this.setSize=function(C,Y,ie){nt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(I=C,G=Y,e.width=Math.floor(C*$),e.height=Math.floor(Y*$),!1!==ie&&(e.style.width=C+"px",e.style.height=Y+"px"),this.setViewport(0,0,C,Y))},this.getDrawingBufferSize=function(C){return C.set(I*$,G*$).floor()},this.setDrawingBufferSize=function(C,Y,ie){I=C,G=Y,$=ie,e.width=Math.floor(C*ie),e.height=Math.floor(Y*ie),this.setViewport(0,0,C,Y)},this.getCurrentViewport=function(C){return C.copy(R)},this.getViewport=function(C){return C.copy(X)},this.setViewport=function(C,Y,ie,Q){C.isVector4?X.set(C.x,C.y,C.z,C.w):X.set(C,Y,ie,Q),Ke.viewport(R.copy(X).multiplyScalar($).floor())},this.getScissor=function(C){return C.copy(le)},this.setScissor=function(C,Y,ie,Q){C.isVector4?le.set(C.x,C.y,C.z,C.w):le.set(C,Y,ie,Q),Ke.scissor(U.copy(le).multiplyScalar($).floor())},this.getScissorTest=function(){return ee},this.setScissorTest=function(C){Ke.setScissorTest(ee=C)},this.setOpaqueSort=function(C){_e=C},this.setTransparentSort=function(C){Ue=C},this.getClearColor=function(C){return C.copy(Be.getClearColor())},this.setClearColor=function(){Be.setClearColor.apply(Be,arguments)},this.getClearAlpha=function(){return Be.getClearAlpha()},this.setClearAlpha=function(){Be.setClearAlpha.apply(Be,arguments)},this.clear=function(C=!0,Y=!0,ie=!0){let Q=0;C&&(Q|=16384),Y&&(Q|=256),ie&&(Q|=1024),de.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",k,!1),e.removeEventListener("webglcontextrestored",Ye,!1),e.removeEventListener("webglcontextcreationerror",Xe,!1),Gt.dispose(),D.dispose(),ye.dispose(),je.dispose(),lt.dispose(),mt.dispose(),ht.dispose(),dt.dispose(),nt.dispose(),nt.removeEventListener("sessionstart",zt),nt.removeEventListener("sessionend",Ut),ue&&(ue.dispose(),ue=null),Tn.stop()},this.renderBufferDirect=function(C,Y,ie,Q,me,_t){null===Y&&(Y=at);const Et=me.isMesh&&me.matrixWorld.determinant()<0,Rt=function U0(C,Y,ie,Q,me){!0!==Y.isScene&&(Y=at),ve.resetTextureUnits();const _t=Y.fog,Rt=null===b?m.outputEncoding:!0===b.isXRRenderTarget?b.texture.encoding:bi,Ct=(Q.isMeshStandardMaterial?lt:je).get(Q.envMap||(Q.isMeshStandardMaterial?Y.environment:null)),kt=!0===Q.vertexColors&&!!ie.attributes.color&&4===ie.attributes.color.itemSize,Ot=!!Q.normalMap&&!!ie.attributes.tangent,Nt=!!ie.morphAttributes.position,nn=!!ie.morphAttributes.normal,us=!!ie.morphAttributes.color,Qs=Q.toneMapped?m.toneMapping:Bt,er=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,ii=void 0!==er?er.length:0,Ft=ye.get(Q),tr=d.state.lights;!0!==be||!0!==se&&C===T||w.setState(Q,C,C===T&&Q.id===y);let cn=!1;Q.version===Ft.__version?(Ft.needsLights&&Ft.lightsStateVersion!==tr.state.version||Ft.outputEncoding!==Rt||me.isInstancedMesh&&!1===Ft.instancing||!me.isInstancedMesh&&!0===Ft.instancing||me.isSkinnedMesh&&!1===Ft.skinning||!me.isSkinnedMesh&&!0===Ft.skinning||Ft.envMap!==Ct||!0===Q.fog&&Ft.fog!==_t||void 0!==Ft.numClippingPlanes&&(Ft.numClippingPlanes!==w.numPlanes||Ft.numIntersection!==w.numIntersection)||Ft.vertexAlphas!==kt||Ft.vertexTangents!==Ot||Ft.morphTargets!==Nt||Ft.morphNormals!==nn||Ft.morphColors!==us||Ft.toneMapping!==Qs||!0===St.isWebGL2&&Ft.morphTargetsCount!==ii)&&(cn=!0):(cn=!0,Ft.__version=Q.version);let si=Ft.currentProgram;!0===cn&&(si=Wl(Q,Y,me));let Ni=!1,Or=!1,Gl=!1;const An=si.getUniforms(),Nr=Ft.uniforms;if(Ke.useProgram(si.program)&&(Ni=!0,Or=!0,Gl=!0),Q.id!==y&&(y=Q.id,Or=!0),Ni||T!==C){if(An.setValue(de,"projectionMatrix",C.projectionMatrix),St.logarithmicDepthBuffer&&An.setValue(de,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),T!==C&&(T=C,Or=!0,Gl=!0),Q.isShaderMaterial||Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshStandardMaterial||Q.envMap){const ri=An.map.cameraPosition;void 0!==ri&&ri.setValue(de,Je.setFromMatrixPosition(C.matrixWorld))}(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&An.setValue(de,"isOrthographic",!0===C.isOrthographicCamera),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial||Q.isShadowMaterial||me.isSkinnedMesh)&&An.setValue(de,"viewMatrix",C.matrixWorldInverse)}if(me.isSkinnedMesh){An.setOptional(de,me,"bindMatrix"),An.setOptional(de,me,"bindMatrixInverse");const ri=me.skeleton;ri&&(St.floatVertexTextures?(null===ri.boneTexture&&ri.computeBoneTexture(),An.setValue(de,"boneTexture",ri.boneTexture,ve),An.setValue(de,"boneTextureSize",ri.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Hl=ie.morphAttributes;return(void 0!==Hl.position||void 0!==Hl.normal||void 0!==Hl.color&&!0===St.isWebGL2)&&He.update(me,ie,Q,si),(Or||Ft.receiveShadow!==me.receiveShadow)&&(Ft.receiveShadow=me.receiveShadow,An.setValue(de,"receiveShadow",me.receiveShadow)),Or&&(An.setValue(de,"toneMappingExposure",m.toneMappingExposure),Ft.needsLights&&function k0(C,Y){C.ambientLightColor.needsUpdate=Y,C.lightProbe.needsUpdate=Y,C.directionalLights.needsUpdate=Y,C.directionalLightShadows.needsUpdate=Y,C.pointLights.needsUpdate=Y,C.pointLightShadows.needsUpdate=Y,C.spotLights.needsUpdate=Y,C.spotLightShadows.needsUpdate=Y,C.rectAreaLights.needsUpdate=Y,C.hemisphereLights.needsUpdate=Y}(Nr,Gl),_t&&!0===Q.fog&&jt.refreshFogUniforms(Nr,_t),jt.refreshMaterialUniforms(Nr,Q,$,G,ue),Oo.upload(de,Ft.uniformsList,Nr,ve)),Q.isShaderMaterial&&!0===Q.uniformsNeedUpdate&&(Oo.upload(de,Ft.uniformsList,Nr,ve),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&An.setValue(de,"center",me.center),An.setValue(de,"modelViewMatrix",me.modelViewMatrix),An.setValue(de,"normalMatrix",me.normalMatrix),An.setValue(de,"modelMatrix",me.matrixWorld),si}(C,Y,ie,Q,me);Ke.setMaterial(Q,Et);let Ct=ie.index;const kt=ie.attributes.position;if(null===Ct){if(void 0===kt||0===kt.count)return}else if(0===Ct.count)return;let Ot=1;!0===Q.wireframe&&(Ct=wt.getWireframeAttribute(ie),Ot=2),ht.setup(me,Q,Rt,ie,Ct);let Nt,nn=Qe;null!==Ct&&(Nt=qe.get(Ct),nn=xt,nn.setIndex(Nt));const us=null!==Ct?Ct.count:kt.count,Qs=ie.drawRange.start*Ot,er=ie.drawRange.count*Ot,ii=null!==_t?_t.start*Ot:0,Ft=null!==_t?_t.count*Ot:1/0,tr=Math.max(Qs,ii),cn=Math.min(us,Qs+er,ii+Ft)-1,si=Math.max(0,cn-tr+1);if(0!==si){if(me.isMesh)!0===Q.wireframe?(Ke.setLineWidth(Q.wireframeLinewidth*ut()),nn.setMode(1)):nn.setMode(4);else if(me.isLine){let Ni=Q.linewidth;void 0===Ni&&(Ni=1),Ke.setLineWidth(Ni*ut()),nn.setMode(me.isLineSegments?1:me.isLineLoop?2:3)}else me.isPoints?nn.setMode(0):me.isSprite&&nn.setMode(4);if(me.isInstancedMesh)nn.renderInstances(tr,si,me.count);else if(ie.isInstancedBufferGeometry){const Ni=Math.min(ie.instanceCount,ie._maxInstanceCount);nn.renderInstances(tr,si,Ni)}else nn.render(tr,si)}},this.compile=function(C,Y){d=D.get(C),d.init(),g.push(d),C.traverseVisible(function(ie){ie.isLight&&ie.layers.test(Y.layers)&&(d.pushLight(ie),ie.castShadow&&d.pushShadow(ie))}),d.setupLights(m.physicallyCorrectLights),C.traverse(function(ie){const Q=ie.material;if(Q)if(Array.isArray(Q))for(let me=0;me<Q.length;me++)Wl(Q[me],C,ie);else Wl(Q,C,ie)}),g.pop(),d=null};let Ge=null;function zt(){Tn.stop()}function Ut(){Tn.start()}const Tn=new yc;function ni(C,Y,ie,Q){if(!1===C.visible)return;if(C.layers.test(Y.layers))if(C.isGroup)ie=C.renderOrder;else if(C.isLOD)!0===C.autoUpdate&&C.update(Y);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||xe.intersectsSprite(C)){Q&&Je.setFromMatrixPosition(C.matrixWorld).applyMatrix4(We);const Et=mt.update(C),Rt=C.material;Rt.visible&&u.push(C,Et,Rt,ie,Je.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Lt.render.frame&&(C.skeleton.update(),C.skeleton.frame=Lt.render.frame),!C.frustumCulled||xe.intersectsObject(C))){Q&&Je.setFromMatrixPosition(C.matrixWorld).applyMatrix4(We);const Et=mt.update(C),Rt=C.material;if(Array.isArray(Rt)){const Ct=Et.groups;for(let kt=0,Ot=Ct.length;kt<Ot;kt++){const Nt=Ct[kt],nn=Rt[Nt.materialIndex];nn&&nn.visible&&u.push(C,Et,nn,ie,Je.z,Nt)}}else Rt.visible&&u.push(C,Et,Rt,ie,Je.z,null)}const _t=C.children;for(let Et=0,Rt=_t.length;Et<Rt;Et++)ni(_t[Et],Y,ie,Q)}function bu(C,Y,ie,Q){const me=C.opaque,_t=C.transmissive,Et=C.transparent;d.setupLightsView(ie),_t.length>0&&function B0(C,Y,ie){const Q=St.isWebGL2;null===ue&&(ue=new Zn(1,1,{generateMipmaps:!0,type:vt.has("EXT_color_buffer_half_float")?gn:K,minFilter:ci,samples:Q&&!0===s?4:0})),m.getDrawingBufferSize(Pe),Q?ue.setSize(Pe.x,Pe.y):ue.setSize(ro(Pe.x),ro(Pe.y));const me=m.getRenderTarget();m.setRenderTarget(ue),m.clear();const _t=m.toneMapping;m.toneMapping=Bt,_a(C,Y,ie),m.toneMapping=_t,ve.updateMultisampleRenderTarget(ue),ve.updateRenderTargetMipmap(ue),m.setRenderTarget(me)}(me,Y,ie),Q&&Ke.viewport(R.copy(Q)),me.length>0&&_a(me,Y,ie),_t.length>0&&_a(_t,Y,ie),Et.length>0&&_a(Et,Y,ie),Ke.buffers.depth.setTest(!0),Ke.buffers.depth.setMask(!0),Ke.buffers.color.setMask(!0),Ke.setPolygonOffset(!1)}function _a(C,Y,ie){const Q=!0===Y.isScene?Y.overrideMaterial:null;for(let me=0,_t=C.length;me<_t;me++){const Et=C[me],Rt=Et.object,Ct=Et.geometry,kt=null===Q?Et.material:Q,Ot=Et.group;Rt.layers.test(ie.layers)&&z0(Rt,Y,ie,Ct,kt,Ot)}}function z0(C,Y,ie,Q,me,_t){C.onBeforeRender(m,Y,ie,Q,me,_t),C.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),me.onBeforeRender(m,Y,ie,Q,C,_t),!0===me.transparent&&me.side===Me?(me.side=ce,me.needsUpdate=!0,m.renderBufferDirect(ie,Y,Q,me,C,_t),me.side=rt,me.needsUpdate=!0,m.renderBufferDirect(ie,Y,Q,me,C,_t),me.side=Me):m.renderBufferDirect(ie,Y,Q,me,C,_t),C.onAfterRender(m,Y,ie,Q,me,_t)}function Wl(C,Y,ie){!0!==Y.isScene&&(Y=at);const Q=ye.get(C),me=d.state.lights,Et=me.state.version,Rt=dt.getParameters(C,me.state,d.state.shadowsArray,Y,ie),Ct=dt.getProgramCacheKey(Rt);let kt=Q.programs;Q.environment=C.isMeshStandardMaterial?Y.environment:null,Q.fog=Y.fog,Q.envMap=(C.isMeshStandardMaterial?lt:je).get(C.envMap||Q.environment),void 0===kt&&(C.addEventListener("dispose",gt),kt=new Map,Q.programs=kt);let Ot=kt.get(Ct);if(void 0!==Ot){if(Q.currentProgram===Ot&&Q.lightsStateVersion===Et)return Su(C,Rt),Ot}else Rt.uniforms=dt.getUniforms(C),C.onBuild(ie,Rt,m),C.onBeforeCompile(Rt,m),Ot=dt.acquireProgram(Rt,Ct),kt.set(Ct,Ot),Q.uniforms=Rt.uniforms;const Nt=Q.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||!0===C.clipping)&&(Nt.clippingPlanes=w.uniform),Su(C,Rt),Q.needsLights=function V0(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&!0===C.lights}(C),Q.lightsStateVersion=Et,Q.needsLights&&(Nt.ambientLightColor.value=me.state.ambient,Nt.lightProbe.value=me.state.probe,Nt.directionalLights.value=me.state.directional,Nt.directionalLightShadows.value=me.state.directionalShadow,Nt.spotLights.value=me.state.spot,Nt.spotLightShadows.value=me.state.spotShadow,Nt.rectAreaLights.value=me.state.rectArea,Nt.ltc_1.value=me.state.rectAreaLTC1,Nt.ltc_2.value=me.state.rectAreaLTC2,Nt.pointLights.value=me.state.point,Nt.pointLightShadows.value=me.state.pointShadow,Nt.hemisphereLights.value=me.state.hemi,Nt.directionalShadowMap.value=me.state.directionalShadowMap,Nt.directionalShadowMatrix.value=me.state.directionalShadowMatrix,Nt.spotShadowMap.value=me.state.spotShadowMap,Nt.spotShadowMatrix.value=me.state.spotShadowMatrix,Nt.pointShadowMap.value=me.state.pointShadowMap,Nt.pointShadowMatrix.value=me.state.pointShadowMatrix);const nn=Ot.getUniforms(),us=Oo.seqWithValue(nn.seq,Nt);return Q.currentProgram=Ot,Q.uniformsList=us,Ot}function Su(C,Y){const ie=ye.get(C);ie.outputEncoding=Y.outputEncoding,ie.instancing=Y.instancing,ie.skinning=Y.skinning,ie.morphTargets=Y.morphTargets,ie.morphNormals=Y.morphNormals,ie.morphColors=Y.morphColors,ie.morphTargetsCount=Y.morphTargetsCount,ie.numClippingPlanes=Y.numClippingPlanes,ie.numIntersection=Y.numClipIntersection,ie.vertexAlphas=Y.vertexAlphas,ie.vertexTangents=Y.vertexTangents,ie.toneMapping=Y.toneMapping}Tn.setAnimationLoop(function Mt(C){Ge&&Ge(C)}),"undefined"!=typeof self&&Tn.setContext(self),this.setAnimationLoop=function(C){Ge=C,nt.setAnimationLoop(C),null===C?Tn.stop():Tn.start()},nt.addEventListener("sessionstart",zt),nt.addEventListener("sessionend",Ut),this.render=function(C,Y){if(void 0===Y||!0===Y.isCamera){if(!0!==p){if(!0===C.autoUpdate&&C.updateMatrixWorld(),null===Y.parent&&Y.updateMatrixWorld(),!0===nt.enabled&&!0===nt.isPresenting&&(!0===nt.cameraAutoUpdate&&nt.updateCamera(Y),Y=nt.getCamera()),!0===C.isScene&&C.onBeforeRender(m,C,Y,b),d=D.get(C,g.length),d.init(),g.push(d),We.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),xe.setFromProjectionMatrix(We),se=this.localClippingEnabled,be=w.init(this.clippingPlanes,se,Y),u=Gt.get(C,f.length),u.init(),f.push(u),ni(C,Y,0,m.sortObjects),u.finish(),!0===m.sortObjects&&u.sort(_e,Ue),!0===be&&w.beginShadows(),te.render(d.state.shadowsArray,C,Y),!0===be&&w.endShadows(),!0===this.info.autoReset&&this.info.reset(),Be.render(u,C),d.setupLights(m.physicallyCorrectLights),Y.isArrayCamera){const Q=Y.cameras;for(let me=0,_t=Q.length;me<_t;me++){const Et=Q[me];bu(u,C,Et,Et.viewport)}}else bu(u,C,Y);null!==b&&(ve.updateMultisampleRenderTarget(b),ve.updateRenderTargetMipmap(b)),!0===C.isScene&&C.onAfterRender(m,C,Y),ht.resetDefaultState(),y=-1,T=null,g.pop(),d=g.length>0?g[g.length-1]:null,f.pop(),u=f.length>0?f[f.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(C,Y,ie){ye.get(C.texture).__webglTexture=Y,ye.get(C.depthTexture).__webglTexture=ie;const Q=ye.get(C);Q.__hasExternalTextures=!0,Q.__hasExternalTextures&&(Q.__autoAllocateDepthBuffer=void 0===ie,Q.__autoAllocateDepthBuffer||!0===vt.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,Y){const ie=ye.get(C);ie.__webglFramebuffer=Y,ie.__useDefaultFramebuffer=void 0===Y},this.setRenderTarget=function(C,Y=0,ie=0){b=C,v=Y,_=ie;let Q=!0;if(C){const Ct=ye.get(C);void 0!==Ct.__useDefaultFramebuffer?(Ke.bindFramebuffer(36160,null),Q=!1):void 0===Ct.__webglFramebuffer?ve.setupRenderTarget(C):Ct.__hasExternalTextures&&ve.rebindTextures(C,ye.get(C.texture).__webglTexture,ye.get(C.depthTexture).__webglTexture)}let me=null,_t=!1,Et=!1;if(C){const Ct=C.texture;(Ct.isData3DTexture||Ct.isDataArrayTexture)&&(Et=!0);const kt=ye.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(me=kt[Y],_t=!0):me=St.isWebGL2&&C.samples>0&&!1===ve.useMultisampledRTT(C)?ye.get(C).__webglMultisampledFramebuffer:kt,R.copy(C.viewport),U.copy(C.scissor),M=C.scissorTest}else R.copy(X).multiplyScalar($).floor(),U.copy(le).multiplyScalar($).floor(),M=ee;if(Ke.bindFramebuffer(36160,me)&&St.drawBuffers&&Q&&Ke.drawBuffers(C,me),Ke.viewport(R),Ke.scissor(U),Ke.setScissorTest(M),_t){const Ct=ye.get(C.texture);de.framebufferTexture2D(36160,36064,34069+Y,Ct.__webglTexture,ie)}else if(Et){const Ct=ye.get(C.texture);de.framebufferTextureLayer(36160,36064,Ct.__webglTexture,ie||0,Y||0)}y=-1},this.readRenderTargetPixels=function(C,Y,ie,Q,me,_t,Et){if(!C||!C.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Rt=ye.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&void 0!==Et&&(Rt=Rt[Et]),Rt){Ke.bindFramebuffer(36160,Rt);try{const Ct=C.texture,kt=Ct.format,Ot=Ct.type;if(kt!==Mn&&ne.convert(kt)!==de.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const Nt=Ot===gn&&(vt.has("EXT_color_buffer_half_float")||St.isWebGL2&&vt.has("EXT_color_buffer_float"));if(!(Ot===K||ne.convert(Ot)===de.getParameter(35738)||Ot===en&&(St.isWebGL2||vt.has("OES_texture_float")||vt.has("WEBGL_color_buffer_float"))||Nt))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");Y>=0&&Y<=C.width-Q&&ie>=0&&ie<=C.height-me&&de.readPixels(Y,ie,Q,me,ne.convert(kt),ne.convert(Ot),_t)}finally{const Ct=null!==b?ye.get(b).__webglFramebuffer:null;Ke.bindFramebuffer(36160,Ct)}}},this.copyFramebufferToTexture=function(C,Y,ie=0){const Q=Math.pow(2,-ie),me=Math.floor(Y.image.width*Q),_t=Math.floor(Y.image.height*Q);ve.setTexture2D(Y,0),de.copyTexSubImage2D(3553,ie,0,0,C.x,C.y,me,_t),Ke.unbindTexture()},this.copyTextureToTexture=function(C,Y,ie,Q=0){const me=Y.image.width,_t=Y.image.height,Et=ne.convert(ie.format),Rt=ne.convert(ie.type);ve.setTexture2D(ie,0),de.pixelStorei(37440,ie.flipY),de.pixelStorei(37441,ie.premultiplyAlpha),de.pixelStorei(3317,ie.unpackAlignment),Y.isDataTexture?de.texSubImage2D(3553,Q,C.x,C.y,me,_t,Et,Rt,Y.image.data):Y.isCompressedTexture?de.compressedTexSubImage2D(3553,Q,C.x,C.y,Y.mipmaps[0].width,Y.mipmaps[0].height,Et,Y.mipmaps[0].data):de.texSubImage2D(3553,Q,C.x,C.y,Et,Rt,Y.image),0===Q&&ie.generateMipmaps&&de.generateMipmap(3553),Ke.unbindTexture()},this.copyTextureToTexture3D=function(C,Y,ie,Q,me=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const _t=C.max.x-C.min.x+1,Et=C.max.y-C.min.y+1,Rt=C.max.z-C.min.z+1,Ct=ne.convert(Q.format),kt=ne.convert(Q.type);let Ot;if(Q.isData3DTexture)ve.setTexture3D(Q,0),Ot=32879;else{if(!Q.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ve.setTexture2DArray(Q,0),Ot=35866}de.pixelStorei(37440,Q.flipY),de.pixelStorei(37441,Q.premultiplyAlpha),de.pixelStorei(3317,Q.unpackAlignment);const Nt=de.getParameter(3314),nn=de.getParameter(32878),us=de.getParameter(3316),Qs=de.getParameter(3315),er=de.getParameter(32877),ii=ie.isCompressedTexture?ie.mipmaps[0]:ie.image;de.pixelStorei(3314,ii.width),de.pixelStorei(32878,ii.height),de.pixelStorei(3316,C.min.x),de.pixelStorei(3315,C.min.y),de.pixelStorei(32877,C.min.z),ie.isDataTexture||ie.isData3DTexture?de.texSubImage3D(Ot,me,Y.x,Y.y,Y.z,_t,Et,Rt,Ct,kt,ii.data):ie.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),de.compressedTexSubImage3D(Ot,me,Y.x,Y.y,Y.z,_t,Et,Rt,Ct,ii.data)):de.texSubImage3D(Ot,me,Y.x,Y.y,Y.z,_t,Et,Rt,Ct,kt,ii),de.pixelStorei(3314,Nt),de.pixelStorei(32878,nn),de.pixelStorei(3316,us),de.pixelStorei(3315,Qs),de.pixelStorei(32877,er),0===me&&Q.generateMipmaps&&de.generateMipmap(Ot),Ke.unbindTexture()},this.initTexture=function(C){ve.setTexture2D(C,0),Ke.unbindTexture()},this.resetState=function(){v=0,_=0,b=null,Ke.reset(),ht.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class ag extends Yc{}).prototype.isWebGL1Renderer=!0;class No{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new tt(e),this.near=t,this.far=n}clone(){return new No(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Jc extends Jt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}class pl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=In()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=In()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=In()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const wn=new A;class ts{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new ln(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ts(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const Uo=new A,th=new A;class nh extends Jt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Uo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Uo);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Uo.setFromMatrixPosition(e.matrixWorld),th.setFromMatrixPosition(this.matrixWorld);const n=Uo.distanceTo(th)/e.zoom;let i,s;for(t[0].object.visible=!0,i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const r=n[i];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}}const ih=new A,sh=new Vt,rh=new Vt,cg=new A,oh=new Tt;class ah extends xn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Tt,this.bindMatrixInverse=new Tt}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Vt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;sh.fromBufferAttribute(i.attributes.skinIndex,e),rh.fromBufferAttribute(i.attributes.skinWeight,e),ih.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const r=rh.getComponent(s);if(0!==r){const a=sh.getComponent(s);oh.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(cg.copy(ih).applyMatrix4(oh),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class gl extends Jt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ws extends Gn{constructor(e=null,t=1,n=1,i,s,r,a,l,c=Qt,h=Qt,u,d){super(null,r,a,l,c,h,i,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const lh=new Tt,hg=new Tt;class ko{constructor(e=[],t=[]){this.uuid=In(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Tt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Tt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,r=e.length;s<r;s++)lh.multiplyMatrices(e[s]?e[s].matrixWorld:hg,t[s]),lh.toArray(n,16*s);null!==i&&(i.needsUpdate=!0)}clone(){return new ko(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Ql(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ws(t,e,e,Mn,en);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let r=t[s];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new gl),this.bones.push(r),this.boneInverses.push((new Tt).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++)e.bones.push(t[i].uuid),e.boneInverses.push(n[i].toArray());return e}}class Gs extends ln{constructor(e,t,n,i=1){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ch=new Tt,hh=new Tt,Vo=[],xr=new xn;class uh extends xn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Gs(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(xr.geometry=this.geometry,xr.material=this.material,void 0!==xr.material)for(let s=0;s<i;s++){this.getMatrixAt(s,ch),hh.multiplyMatrices(n,ch),xr.matrixWorld=hh,xr.raycast(e,Vo);for(let r=0,a=Vo.length;r<a;r++){const l=Vo[r];l.instanceId=s,l.object=this,t.push(l)}Vo.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Gs(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class En extends un{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new tt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const dh=new A,fh=new A,ph=new Tt,vl=new mo,Wo=new Ji;class ns extends Jt{constructor(e=new At,t=new En){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)dh.fromBufferAttribute(t,i-1),fh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=dh.distanceTo(fh);e.setAttribute("lineDistance",new ot(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Wo.copy(n.boundingSphere),Wo.applyMatrix4(i),Wo.radius+=s,!1===e.ray.intersectsSphere(Wo))return;ph.copy(i).invert(),vl.copy(e.ray).applyMatrix4(ph);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new A,h=new A,u=new A,d=new A,f=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(null!==g)for(let b=Math.max(0,r.start),y=Math.min(g.count,r.start+r.count)-1;b<y;b+=f){const T=g.getX(b),R=g.getX(b+1);if(c.fromBufferAttribute(p,T),h.fromBufferAttribute(p,R),vl.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:u.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}else for(let b=Math.max(0,r.start),y=Math.min(p.count,r.start+r.count)-1;b<y;b+=f){if(c.fromBufferAttribute(p,b),h.fromBufferAttribute(p,b+1),vl.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(d);R<e.near||R>e.far||t.push({distance:R,point:u.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const mh=new A,gh=new A;class Go extends ns{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)mh.fromBufferAttribute(t,i),gh.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+mh.distanceTo(gh);e.setAttribute("lineDistance",new ot(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vh extends ns{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class _l extends un{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new tt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const _h=new Tt,xl=new mo,Ho=new Ji,jo=new A;class xh extends Jt{constructor(e=new At,t=new _l){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ho.copy(n.boundingSphere),Ho.applyMatrix4(i),Ho.radius+=s,!1===e.ray.intersectsSphere(Ho))return;_h.copy(i).invert(),xl.copy(e.ray).applyMatrix4(_h);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(null!==c)for(let g=Math.max(0,r.start),m=Math.min(c.count,r.start+r.count);g<m;g++){const p=c.getX(g);jo.fromBufferAttribute(u,p),yh(jo,p,l,i,e,t,this)}else for(let g=Math.max(0,r.start),m=Math.min(u.count,r.start+r.count);g<m;g++)jo.fromBufferAttribute(u,g),yh(jo,g,l,i,e,t,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function yh(o,e,t,n,i,s,r){const a=xl.distanceSqToPoint(o);if(a<t){const l=new A;xl.closestPointToPoint(o,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:r})}}class dg extends Gn{constructor(e,t,n,i,s,r,a,l,c){super(e,t,n,i,s,r,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}function Ml(){let o=0,e=0,t=0,n=0;function i(s,r,a,l){o=s,e=a,t=-3*s+3*r-2*a-l,n=2*s-2*r+a+l}return{initCatmullRom:function(s,r,a,l,c){i(r,a,c*(a-s),c*(l-r))},initNonuniformCatmullRom:function(s,r,a,l,c,h,u){let d=(r-s)/c-(a-s)/(c+h)+(a-r)/h,f=(a-r)/h-(l-r)/(h+u)+(l-a)/u;d*=h,f*=h,i(r,a,d,f)},calc:function(s){const r=s*s;return o+e*s+t*r+n*(r*s)}}}new A,new Ml,new Ml,new Ml;class ss extends At{constructor(e=1,t=1,n=1,i=8,s=1,r=!1,a=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const h=[],u=[],d=[],f=[];let g=0;const m=[],p=n/2;let v=0;function b(y){const T=g,R=new Ee,U=new A;let M=0;const I=!0===y?e:t,G=!0===y?1:-1;for(let _e=1;_e<=i;_e++)u.push(0,p*G,0),d.push(0,G,0),f.push(.5,.5),g++;const $=g;for(let _e=0;_e<=i;_e++){const X=_e/i*l+a,le=Math.cos(X),ee=Math.sin(X);U.x=I*ee,U.y=p*G,U.z=I*le,u.push(U.x,U.y,U.z),d.push(0,G,0),R.x=.5*le+.5,R.y=.5*ee*G+.5,f.push(R.x,R.y),g++}for(let _e=0;_e<i;_e++){const Ue=T+_e,X=$+_e;!0===y?h.push(X,X+1,Ue):h.push(X+1,X,Ue),M+=3}c.addGroup(v,M,!0===y?1:2),v+=M}(function _(){const y=new A,T=new A;let R=0;const U=(t-e)/n;for(let M=0;M<=s;M++){const I=[],G=M/s,$=G*(t-e)+e;for(let _e=0;_e<=i;_e++){const Ue=_e/i,X=Ue*l+a,le=Math.sin(X),ee=Math.cos(X);T.x=$*le,T.y=-G*n+p,T.z=$*ee,u.push(T.x,T.y,T.z),y.set(le,U,ee).normalize(),d.push(y.x,y.y,y.z),f.push(Ue,1-G),I.push(g++)}m.push(I)}for(let M=0;M<i;M++)for(let I=0;I<s;I++){const $=m[I+1][M],_e=m[I+1][M+1],Ue=m[I][M+1];h.push(m[I][M],$,Ue),h.push($,_e,Ue),R+=6}c.addGroup(v,R,0),v+=R})(),!1===r&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(h),this.setAttribute("position",new ot(u,3)),this.setAttribute("normal",new ot(d,3)),this.setAttribute("uv",new ot(f,2))}static fromJSON(e){return new ss(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Sr extends ss{constructor(e=1,t=1,n=8,i=1,s=!1,r=0,a=2*Math.PI){super(0,e,t,n,i,s,r,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(e){return new Sr(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ii extends At{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],r=[];function l(_,b,y,T){const R=T+1,U=[];for(let M=0;M<=R;M++){U[M]=[];const I=_.clone().lerp(y,M/R),G=b.clone().lerp(y,M/R),$=R-M;for(let _e=0;_e<=$;_e++)U[M][_e]=0===_e&&M===R?I:I.clone().lerp(G,_e/$)}for(let M=0;M<R;M++)for(let I=0;I<2*(R-M)-1;I++){const G=Math.floor(I/2);I%2==0?(d(U[M][G+1]),d(U[M+1][G]),d(U[M][G])):(d(U[M][G+1]),d(U[M+1][G+1]),d(U[M+1][G]))}}function d(_){s.push(_.x,_.y,_.z)}function f(_,b){const y=3*_;b.x=e[y+0],b.y=e[y+1],b.z=e[y+2]}function m(_,b,y,T){T<0&&1===_.x&&(r[b]=_.x-1),0===y.x&&0===y.z&&(r[b]=T/2/Math.PI+.5)}function p(_){return Math.atan2(_.z,-_.x)}function v(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}(function a(_){const b=new A,y=new A,T=new A;for(let R=0;R<t.length;R+=3)f(t[R+0],b),f(t[R+1],y),f(t[R+2],T),l(b,y,T,_)})(i),function c(_){const b=new A;for(let y=0;y<s.length;y+=3)b.x=s[y+0],b.y=s[y+1],b.z=s[y+2],b.normalize().multiplyScalar(_),s[y+0]=b.x,s[y+1]=b.y,s[y+2]=b.z}(n),function h(){const _=new A;for(let b=0;b<s.length;b+=3){_.x=s[b+0],_.y=s[b+1],_.z=s[b+2];const y=p(_)/2/Math.PI+.5,T=v(_)/Math.PI+.5;r.push(y,1-T)}(function g(){const _=new A,b=new A,y=new A,T=new A,R=new Ee,U=new Ee,M=new Ee;for(let I=0,G=0;I<s.length;I+=9,G+=6){_.set(s[I+0],s[I+1],s[I+2]),b.set(s[I+3],s[I+4],s[I+5]),y.set(s[I+6],s[I+7],s[I+8]),R.set(r[G+0],r[G+1]),U.set(r[G+2],r[G+3]),M.set(r[G+4],r[G+5]),T.copy(_).add(b).add(y).divideScalar(3);const $=p(T);m(R,G+0,_,$),m(U,G+2,b,$),m(M,G+4,y,$)}})(),function u(){for(let _=0;_<r.length;_+=6){const b=r[_+0],y=r[_+2],T=r[_+4],R=Math.max(b,y,T),U=Math.min(b,y,T);R>.9&&U<.1&&(b<.2&&(r[_+0]+=1),y<.2&&(r[_+2]+=1),T<.2&&(r[_+4]+=1))}}()}(),this.setAttribute("position",new ot(s,3)),this.setAttribute("normal",new ot(s.slice(),3)),this.setAttribute("uv",new ot(r,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new Ii(e.vertices,e.indices,e.radius,e.details)}}new A,new A,new A,new Xn;class Ar extends Ii{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ar(e.radius,e.detail)}}class Xs extends At{constructor(e=1,t=32,n=16,i=0,s=2*Math.PI,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new A,d=new A,f=[],g=[],m=[],p=[];for(let v=0;v<=n;v++){const _=[],b=v/n;let y=0;0==v&&0==r?y=.5/t:v==n&&l==Math.PI&&(y=-.5/t);for(let T=0;T<=t;T++){const R=T/t;u.x=-e*Math.cos(i+R*s)*Math.sin(r+b*a),u.y=e*Math.cos(r+b*a),u.z=e*Math.sin(i+R*s)*Math.sin(r+b*a),g.push(u.x,u.y,u.z),d.copy(u).normalize(),m.push(d.x,d.y,d.z),p.push(R+y,1-b),_.push(c++)}h.push(_)}for(let v=0;v<n;v++)for(let _=0;_<t;_++){const b=h[v][_+1],y=h[v][_],T=h[v+1][_],R=h[v+1][_+1];(0!==v||r>0)&&f.push(b,y,R),(v!==n-1||l<Math.PI)&&f.push(y,T,R)}this.setIndex(f),this.setAttribute("position",new ot(g,3)),this.setAttribute("normal",new ot(m,3)),this.setAttribute("uv",new ot(p,2))}static fromJSON(e){return new Xs(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Oh extends un{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new tt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Ll extends un{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new tt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vi,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Nh extends Ll{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ee(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return sn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new tt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new tt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new tt(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Fh extends un{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new tt(16777215),this.specular=new tt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vi,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Bh extends un{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vi,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class zh extends un{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new tt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Zg={ShadowMaterial:Oh,SpriteMaterial:class Zc extends un{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new tt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}},RawShaderMaterial:class $g extends qn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}},ShaderMaterial:qn,PointsMaterial:_l,MeshPhysicalMaterial:Nh,MeshStandardMaterial:Ll,MeshPhongMaterial:Fh,MeshToonMaterial:class Kg extends un{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new tt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vi,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},MeshNormalMaterial:Bh,MeshLambertMaterial:zh,MeshDepthMaterial:hl,MeshDistanceMaterial:ul,MeshBasicMaterial:Ai,MeshMatcapMaterial:class Yg extends un{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new tt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Vi,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}},LineDashedMaterial:class Jg extends En{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}},LineBasicMaterial:En,Material:un};un.fromType=function(o){return new Zg[o]};const $t={arraySlice:function(o,e,t){return $t.isTypedArray(o)?new o.constructor(o.subarray(e,void 0!==t?t:o.length)):o.slice(e,t)},convertArray:function(o,e,t){return!o||!t&&o.constructor===e?o:"number"==typeof e.BYTES_PER_ELEMENT?new e(o):Array.prototype.slice.call(o)},isTypedArray:function(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)},getKeyframeOrder:function(o){const t=o.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function e(i,s){return o[i]-o[s]}),n},sortedArray:function(o,e,t){const n=o.length,i=new o.constructor(n);for(let s=0,r=0;r!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[r++]=o[a+l]}return i},flattenJSON:function(o,e,t,n){let i=1,s=o[0];for(;void 0!==s&&void 0===s[n];)s=o[i++];if(void 0===s)return;let r=s[n];if(void 0!==r)if(Array.isArray(r))do{r=s[n],void 0!==r&&(e.push(s.time),t.push.apply(t,r)),s=o[i++]}while(void 0!==s);else if(void 0!==r.toArray)do{r=s[n],void 0!==r&&(e.push(s.time),r.toArray(t,t.length)),s=o[i++]}while(void 0!==s);else do{r=s[n],void 0!==r&&(e.push(s.time),t.push(r)),s=o[i++]}while(void 0!==s)},subclip:function(o,e,t,n,i=30){const s=o.clone();s.name=e;const r=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const g=c.times[f]*i;if(!(g<t||g>=n)){u.push(c.times[f]);for(let m=0;m<h;++m)d.push(c.values[f*h+m])}}0!==u.length&&(c.times=$t.convertArray(u,c.times.constructor),c.values=$t.convertArray(d,c.values.constructor),r.push(c))}s.tracks=r;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(o,e=0,t=o,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let r=0;r<i;++r){const a=t.tracks[r],l=a.ValueTypeName;if("bool"===l||"string"===l)continue;const c=o.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(void 0===c)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const g=a.times.length-1;let m;if(s<=a.times[0])m=$t.arraySlice(a.values,h,u-h);else if(s>=a.times[g]){const v=g*u+h;m=$t.arraySlice(a.values,v,v+u-h)}else{const v=a.createInterpolant(),_=h,b=u-h;v.evaluate(s),m=$t.arraySlice(v.resultBuffer,_,b)}"quaternion"===l&&(new Pn).fromArray(m).normalize().conjugate().toArray(m);const p=c.times.length;for(let v=0;v<p;++v){const _=v*f+d;if("quaternion"===l)Pn.multiplyQuaternionsFlat(c.values,_,m,0,c.values,_);else{const b=f-2*d;for(let y=0;y<b;++y)c.values[_+y]-=m[y]}}}return o.blendMode=2501,o}};class Pr{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let r;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}r=t.length;break n}if(e>=s)break e;{const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}r=n,n=0}}for(;n<r;){const a=n+r>>>1;e<t[a]?r=a:n=a+1}if(i=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let r=0;r!==i;++r)t[r]=n[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class qg extends Pr{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,r=e+1,a=i[s],l=i[r];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:s=e,a=2*t-n;break;case 2402:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(void 0===l)switch(this.getSettings_().endingEnd){case 2401:r=e,l=2*n-t;break;case 2402:r=1,l=n+i[1]-i[0];break;default:r=e-1,l=t}const c=.5*(n-t),h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*h,this._offsetNext=r*h}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,g=(n-t)/(i-t),m=g*g,p=m*g,v=-d*p+2*d*m-d*g,_=(1+d)*p+(-1.5-2*d)*m+(-.5+d)*g+1,b=(-1-f)*p+(1.5+f)*m+.5*g,y=f*p-f*m;for(let T=0;T!==a;++T)s[T]=v*r[h+T]+_*r[c+T]+b*r[l+T]+y*r[u+T];return s}}class Uh extends Pr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==a;++d)s[d]=r[c+d]*u+r[l+d]*h;return s}}class Qg extends Pr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ti{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=$t.convertArray(t,this.TimeBufferType),this.values=$t.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:$t.convertArray(e.times,Array),values:$t.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Qg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Uh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new qg(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ar:t=this.InterpolantFactoryMethodDiscrete;break;case lr:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ar;case this.InterpolantFactoryMethodLinear:return lr;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<e;)++s;for(;-1!==r&&n[r]>t;)--r;if(++r,0!==s||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const a=this.getValueSize();this.times=$t.arraySlice(n,s,r),this.values=$t.arraySlice(this.values,s*a,r*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let a=0;a!==s;a++){const l=n[a];if("number"==typeof l&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(null!==r&&r>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,r),e=!1;break}r=l}if(void 0!==i&&$t.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=$t.arraySlice(this.times),t=$t.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),s=e.length-1;let r=1;for(let a=1;a<s;++a){let l=!1;const c=e[a];if(c!==e[a+1]&&(1!==a||c!==e[0]))if(i)l=!0;else{const u=a*n,d=u-n,f=u+n;for(let g=0;g!==n;++g){const m=t[u+g];if(m!==t[d+g]||m!==t[f+g]){l=!0;break}}}if(l){if(a!==r){e[r]=e[a];const u=a*n,d=r*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++r}}if(s>0){e[r]=e[s];for(let a=s*n,l=r*n,c=0;c!==n;++c)t[l+c]=t[a+c];++r}return r!==e.length?(this.times=$t.arraySlice(e,0,r),this.values=$t.arraySlice(t,0,r*n)):(this.times=e,this.values=t),this}clone(){const e=$t.arraySlice(this.times,0),t=$t.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ti.prototype.TimeBufferType=Float32Array,ti.prototype.ValueBufferType=Float32Array,ti.prototype.DefaultInterpolation=lr;class $s extends ti{}$s.prototype.ValueTypeName="bool",$s.prototype.ValueBufferType=Array,$s.prototype.DefaultInterpolation=ar,$s.prototype.InterpolantFactoryMethodLinear=void 0,$s.prototype.InterpolantFactoryMethodSmooth=void 0;class kh extends ti{}kh.prototype.ValueTypeName="color";class Lr extends ti{}Lr.prototype.ValueTypeName="number";class e0 extends Pr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Pn.slerpFlat(s,0,r,c-a,r,c,l);return s}}class Ks extends ti{InterpolantFactoryMethodLinear(e){return new e0(this.times,this.values,this.getValueSize(),e)}}Ks.prototype.ValueTypeName="quaternion",Ks.prototype.DefaultInterpolation=lr,Ks.prototype.InterpolantFactoryMethodSmooth=void 0;class Ys extends ti{}Ys.prototype.ValueTypeName="string",Ys.prototype.ValueBufferType=Array,Ys.prototype.DefaultInterpolation=ar,Ys.prototype.InterpolantFactoryMethodLinear=void 0,Ys.prototype.InterpolantFactoryMethodSmooth=void 0;class Rr extends ti{}Rr.prototype.ValueTypeName="vector";class Ir{constructor(e,t=-1,n,i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=In(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,a=n.length;r!==a;++r)t.push(n0(n[r]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,r=n.length;s!==r;++s)t.push(ti.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,r=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=$t.getKeyframeOrder(l);l=$t.sortedArray(l,1,h),c=$t.sortedArray(c,1,h),!i&&0===l[0]&&(l.push(s),c.push(c[0])),r.push(new Lr(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const r=[];for(const a in i)r.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,g,m){if(0!==f.length){const p=[],v=[];$t.flattenJSON(f,p,v,g),0!==p.length&&m.push(new u(d,p,v))}},i=[],s=e.name||"default",r=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(d&&0!==d.length)if(d[0].morphTargets){const f={};let g;for(g=0;g<d.length;g++)if(d[g].morphTargets)for(let m=0;m<d[g].morphTargets.length;m++)f[d[g].morphTargets[m]]=-1;for(const m in f){const p=[],v=[];for(let _=0;_!==d[g].morphTargets.length;++_){const b=d[g];p.push(b.time),v.push(b.morphTarget===m?1:0)}i.push(new Lr(".morphTargetInfluence["+m+"]",p,v))}l=f.length*r}else{const f=".bones["+t[u].name+"]";n(Rr,f+".position",d,"pos",i),n(Ks,f+".quaternion",d,"rot",i),n(Rr,f+".scale",d,"scl",i)}}return 0===i.length?null:new this(s,l,i,a)}resetDuration(){let t=0;for(let n=0,i=this.tracks.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function n0(o){if(void 0===o.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function t0(o){switch(o.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Lr;case"vector":case"vector2":case"vector3":case"vector4":return Rr;case"color":return kh;case"quaternion":return Ks;case"bool":case"boolean":return $s;case"string":return Ys}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+o)}(o.type);if(void 0===o.times){const t=[],n=[];$t.flattenJSON(o.keys,t,n,"value"),o.times=t,o.values=n}return void 0!==e.parse?e.parse(o):new e(o.name,o.times,o.values,o.interpolation)}const Js={enabled:!1,files:{},add:function(o,e){!1!==this.enabled&&(this.files[o]=e)},get:function(o){if(!1!==this.enabled)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class Rl{constructor(e,t,n){const i=this;let l,s=!1,r=0,a=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){a++,!1===s&&void 0!==i.onStart&&i.onStart(h,r,a),s=!0},this.itemEnd=function(h){r++,void 0!==i.onProgress&&i.onProgress(h,r,a),r===a&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(h){void 0!==i.onError&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return-1!==u&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],g=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return g}return null}}}const Vh=new Rl;class rs{constructor(e){this.manager=void 0!==e?e:Vh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const xi={};class yi extends rs{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Js.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(void 0!==xi[e])return void xi[e].push({onLoad:t,onProgress:n,onError:i});xi[e]=[],xi[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(r).then(c=>{if(200===c.status||0===c.status){if(0===c.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===c.body||void 0===c.body.getReader)return c;const h=xi[e],u=c.body.getReader(),d=c.headers.get("Content-Length"),f=d?parseInt(d):0,g=0!==f;let m=0;const p=new ReadableStream({start(v){!function _(){u.read().then(({done:b,value:y})=>{if(b)v.close();else{m+=y.byteLength;const T=new ProgressEvent("progress",{lengthComputable:g,loaded:m,total:f});for(let R=0,U=h.length;R<U;R++){const M=h[R];M.onProgress&&M.onProgress(T)}v.enqueue(y),_()}})}()}});return new Response(p)}throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>(new DOMParser).parseFromString(h,a));case"json":return c.json();default:if(void 0===a)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(g=>f.decode(g))}}}).then(c=>{Js.add(e,c);const h=xi[e];delete xi[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=xi[e];if(void 0===h)throw this.manager.itemError(e),c;delete xi[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ha extends rs{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Js.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a=ur("img");function l(){h(),Js.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(u){h(),i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class s0 extends rs{constructor(e){super(e)}load(e,t,n,i){const s=new Po,r=new ha(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function l(c){r.load(e[c],function(h){s.images[c]=h,a++,6===a&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class r0 extends rs{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new Ws,a=new yi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const c=s.parse(l);!c||(void 0!==c.image?r.image=c.image:void 0!==c.data&&(r.image.width=c.width,r.image.height=c.height,r.image.data=c.data),r.wrapS=void 0!==c.wrapS?c.wrapS:mn,r.wrapT=void 0!==c.wrapT?c.wrapT:mn,r.magFilter=void 0!==c.magFilter?c.magFilter:Yt,r.minFilter=void 0!==c.minFilter?c.minFilter:Yt,r.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(r.encoding=c.encoding),void 0!==c.flipY&&(r.flipY=c.flipY),void 0!==c.format&&(r.format=c.format),void 0!==c.type&&(r.type=c.type),void 0!==c.mipmaps&&(r.mipmaps=c.mipmaps,r.minFilter=ci),1===c.mipmapCount&&(r.minFilter=Yt),void 0!==c.generateMipmaps&&(r.generateMipmaps=c.generateMipmaps),r.needsUpdate=!0,t&&t(r,c))},n,i),r}}class o0 extends rs{constructor(e){super(e)}load(e,t,n,i){const s=new Gn,r=new ha(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(a){s.image=a,s.needsUpdate=!0,void 0!==t&&t(s)},n,i),s}}class Zs extends Jt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new tt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class Wh extends Zs{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Jt.DefaultUp),this.updateMatrix(),this.groundColor=new tt(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gh=new Tt,Hh=new A,jh=new A;class Il{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ee(512,512),this.map=null,this.mapPass=null,this.matrix=new Tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new il,this._frameExtents=new Ee(1,1),this._viewportCount=1,this._viewports=[new Vt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Hh.setFromMatrixPosition(e.matrixWorld),t.position.copy(Hh),jh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(jh),t.updateMatrixWorld(),Gh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class a0 extends Il{constructor(){super(new _n(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=2*cr*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Xh extends Zs{constructor(e,t,n=0,i=Math.PI/3,s=0,r=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Jt.DefaultUp),this.updateMatrix(),this.target=new Jt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.shadow=new a0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const $h=new Tt,Dr=new A,Dl=new A;class l0 extends Il{constructor(){super(new _n(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Ee(4,2),this._viewportCount=6,this._viewports=[new Vt(2,1,1,1),new Vt(0,1,1,1),new Vt(3,1,1,1),new Vt(1,1,1,1),new Vt(3,0,1,1),new Vt(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Dr.setFromMatrixPosition(e.matrixWorld),n.position.copy(Dr),Dl.copy(n.position),Dl.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Dl),n.updateMatrixWorld(),i.makeTranslation(-Dr.x,-Dr.y,-Dr.z),$h.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix($h)}}class Kh extends Zs{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new l0}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class c0 extends Il{constructor(){super(new Ro(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Yh extends Zs{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Jt.DefaultUp),this.updateMatrix(),this.target=new Jt,this.shadow=new c0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Jh extends Zs{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Zh extends Zs{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Ol{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class qh extends At{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class m0 extends rs{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Js.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Js.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}class su{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ru(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=ru();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function ru(){return("undefined"==typeof performance?Date:performance).now()}const Nl="\\[\\]\\.:\\/",x0=new RegExp("["+Nl+"]","g"),Fl="[^"+Nl+"]",y0="[^"+Nl.replace("\\.","")+"]",M0=/((?:WC+[\/:])*)/.source.replace("WC",Fl),b0=/(WCOD+)?/.source.replace("WCOD",y0),S0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fl),w0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fl),E0=new RegExp("^"+M0+b0+S0+w0+"$"),T0=["material","materials","bones"];class A0{constructor(e,t,n){const i=n||Ht.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const i=this._bindings[this._targetGroup.nCachedObjects_];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}let Ht=(()=>{class o{constructor(t,n,i){this.path=n,this.parsedPath=i||o.parseTrackName(n),this.node=o.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,n,i){return t&&t.isAnimationObjectGroup?new o.Composite(t,n,i):new o(t,n,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(x0,"")}static parseTrackName(t){const n=E0.exec(t);if(null===n)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},s=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==s&&-1!==s){const r=i.nodeName.substring(s+1);-1!==T0.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,s),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,n){if(void 0===n||""===n||"."===n||-1===n||n===t.name||n===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(n);if(void 0!==i)return i}if(t.children){const i=function(r){for(let a=0;a<r.length;a++){const l=r[a];if(l.name===n||l.uuid===n)return l;const c=i(l.children);if(c)return c}return null},s=i(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,n){t[n]=this.targetObject[this.propertyName]}_getValue_array(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)t[n++]=i[s]}_getValue_arrayElement(t,n){t[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,n){this.resolvedProperty.toArray(t,n)}_setValue_direct(t,n){this.targetObject[this.propertyName]=t[n]}_setValue_direct_setNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++]}_setValue_array_setNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,n){this.resolvedProperty[this.propertyIndex]=t[n]}_setValue_arrayElement_setNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,n){this.resolvedProperty.fromArray(t,n)}_setValue_fromArray_setNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,n){this.bind(),this.getValue(t,n)}_setValue_unbound(t,n){this.bind(),this.setValue(t,n)}bind(){let t=this.node;const n=this.parsedPath,i=n.objectName,s=n.propertyName;let r=n.propertyIndex;if(t||(t=o.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let h=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let u=0;u<t.length;u++)if(t[u].name===h){h=u;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==h){if(void 0===t[h])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[h]}}const a=t[s];if(void 0===a)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n.nodeName+"."+s+" but it wasn't found.",t);let l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===s){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}return o.Composite=A0,o})();Ht.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ht.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ht.prototype.GetterByBindingType=[Ht.prototype._getValue_direct,Ht.prototype._getValue_array,Ht.prototype._getValue_arrayElement,Ht.prototype._getValue_toArray],Ht.prototype.SetterByBindingTypeAndVersioning=[[Ht.prototype._setValue_direct,Ht.prototype._setValue_direct_setNeedsUpdate,Ht.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_array,Ht.prototype._setValue_array_setNeedsUpdate,Ht.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_arrayElement,Ht.prototype._setValue_arrayElement_setNeedsUpdate,Ht.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ht.prototype._setValue_fromArray,Ht.prototype._setValue_fromArray_setNeedsUpdate,Ht.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Bl{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Bl(void 0===this.value.clone?this.value:this.value.clone())}}class L0{constructor(e,t,n=0,i=1/0){this.ray=new mo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new vo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return zl(e,this,n,t),n.sort(lu),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)zl(e[i],this,n,t);return n.sort(lu),n}}function lu(o,e){return o.distance-e.distance}function zl(o,e,t,n){if(o.layers.test(e.layers)&&o.raycast(e,t),!0===n){const i=o.children;for(let s=0,r=i.length;s<r;s++)zl(i[s],e,t,!0)}}class R0{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(sn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class D0 extends Go{constructor(e=10,t=10,n=4473924,i=8947848){n=new tt(n),i=new tt(i);const s=t/2,r=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,g=-a;d<=t;d++,g+=r){l.push(-a,0,g,a,0,g),l.push(g,0,-a,g,0,a);const m=d===s?n:i;m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3}const h=new At;h.setAttribute("position",new ot(l,3)),h.setAttribute("color",new ot(c,3)),super(h,new En({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class O0{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=sn(e,-65504,65504),xu[0]=e;const t=yu[0],n=t>>23&511;return $n[n]+((8388607&t)>>Kn[n])}static fromHalfFloat(e){const t=e>>10;return yu[0]=Vl[Mu[t]+(1023&e)]+qs[t],xu[0]}}const _u=new ArrayBuffer(4),xu=new Float32Array(_u),yu=new Uint32Array(_u),$n=new Uint32Array(512),Kn=new Uint32Array(512);for(let o=0;o<256;++o){const e=o-127;e<-27?($n[o]=0,$n[256|o]=32768,Kn[o]=24,Kn[256|o]=24):e<-14?($n[o]=1024>>-e-14,$n[256|o]=1024>>-e-14|32768,Kn[o]=-e-1,Kn[256|o]=-e-1):e<=15?($n[o]=e+15<<10,$n[256|o]=e+15<<10|32768,Kn[o]=13,Kn[256|o]=13):e<128?($n[o]=31744,$n[256|o]=64512,Kn[o]=24,Kn[256|o]=24):($n[o]=31744,$n[256|o]=64512,Kn[o]=13,Kn[256|o]=13)}const Vl=new Uint32Array(2048),qs=new Uint32Array(64),Mu=new Uint32Array(64);for(let o=1;o<1024;++o){let e=o<<13,t=0;for(;0==(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Vl[o]=e|t}for(let o=1024;o<2048;++o)Vl[o]=939524096+(o-1024<<13);for(let o=1;o<31;++o)qs[o]=o<<23;qs[31]=1199570944,qs[32]=2147483648;for(let o=33;o<63;++o)qs[o]=2147483648+(o-32<<23);qs[63]=3347054592;for(let o=1;o<64;++o)32!==o&&(Mu[o]=1024);class N0 extends Zn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class F0 extends za{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:H}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=H)}}]);